.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?gbtrs 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?gbtrs \- Solves a system of distributed linear equations with a general band matrix, using the \fILU\fR factorization computed by \fBp?gbtrf\fR.
.SH SYNOPSIS
.PP
\fBcall psgbtrs\fR(\fItrans\fR, \fIn\fR, \fIbwl\fR, \fIbwu\fR, \fInrhs\fR, \fIa\fR, \fIja\fR, \fIdesca\fR, \fIipiv\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pdgbtrs\fR(\fItrans\fR, \fIn\fR, \fIbwl\fR, \fIbwu\fR, \fInrhs\fR, \fIa\fR, \fIja\fR, \fIdesca\fR, \fIipiv\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pcgbtrs\fR(\fItrans\fR, \fIn\fR, \fIbwl\fR, \fIbwu\fR, \fInrhs\fR, \fIa\fR, \fIja\fR, \fIdesca\fR, \fIipiv\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pzgbtrs\fR(\fItrans\fR, \fIn\fR, \fIbwl\fR, \fIbwu\fR, \fInrhs\fR, \fIa\fR, \fIja\fR, \fIdesca\fR, \fIipiv\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBtrans\fR
.NL
(global) \fBCHARACTER*1\fR.  Must be \fB\'N\'\fR or \fB\'T\'\fR or \fB\'C\'\fR.
.IP
Indicates the form of the equations:
.IP
If \fItrans\fR = \fB\'N\'\fR, then sub(\fIA\fR)*\fIX\fR = sub(\fIB\fR) is solved for \fIX\fR.
.IP
If \fItrans\fR = \fB\'T\'\fR, then sub(\fIA\fR)**\fIT\fR*\fIX\fR = sub(\fIB\fR) is solved for \fIX\fR.
.IP
If \fItrans\fR = \fB\'C\'\fR, then sub(\fIA\fR)**\fIH\fR *\fIX\fR = sub(\fIB\fR) is solved for \fIX\fR.
.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. The number of linear equations;  the order of the distributed submatrix sub(\fIA\fR) (\fIn\fR\(>= 0).
.TP 10
\fBbwl\fR
.NL
(global) \fBINTEGER\fR.  The number of sub-diagonals within the band of \fIA\fR( 0 \(<= \fIbwl\fR \(<= \fIn-1\fR ). 
.TP 10
\fBbwu\fR
.NL
(global) \fBINTEGER\fR.  The number of super-diagonals within the band of \fIA\fR( 0 \(<= \fIbwu\fR \(<= \fIn-1\fR ). 
.TP 10
\fBnrhs\fR
.NL
(global) \fBINTEGER\fR. The number of right hand sides; the number of columns of the distributed submatrix sub(\fIB\fR) (\fInrhs\fR\(>= 0).
.TP 10
\fBa\fR, \fBb\fR
.NL
(global)
.IP
\fBREAL\fR for \fBpsgbtrs\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdgbtrs\fR
.IP
\fBCOMPLEX\fR for \fBpcgbtrs\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzgbtrs\fR. 
.IP
Pointers into the local memory  to arrays of local dimension 
.IP
\fIa\fR(\fIlld\(ula\fR,\fILOC\fR(\fIja\fR+\fIn\fR-1)) and \fIb\fR(\fIlld\(ulb\fR,\fILOC\fR(\fInrhs\fR)), respectively.
.IP
The array \fIa\fR contains details of the \fILU\fR factorization of the distributed band matrix \fIA\fR.
.IP
On entry, the array \fIb\fR contains the local pieces of the right hand sides \fIB\fR(\fIib:ib+n-1\fR, \fI1:nrhs\fR).
.TP 10
\fBja\fR
.NL
(global) \fBINTEGER\fR.  The index in the global array \fIA\fR that points to the start of the matrix to be operated on ( which may be either all of \fIA\fR or a submatrix of \fIA\fR).
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIA\fR. 
.IP
If \fIdesca\fR(\fIdtype\(ul\fR) = 501, then \fIdlen\(ul\fR\(>= 7;
.IP
else if \fIdesca\fR(\fIdtype\(ul\fR) = 1, then \fIdlen\(ul\fR\(>= 9.
.TP 10
\fBib\fR
.NL
(global) \fBINTEGER\fR.  The index in the global array \fIA\fR that points to the start of the matrix to be operated on ( which may be either all of \fIA\fR or a submatrix of \fIA\fR).
.TP 10
\fBdescb\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIA\fR. 
.IP
If \fIdesca\fR(\fIdtype\(ul\fR) = 501, then \fIdlen\(ul\fR\(>= 7;
.IP
else if \fIdesca\fR(\fIdtype\(ul\fR) = 1, then \fIdlen\(ul\fR\(>= 9.
.TP 10
\fBlaf\fR
.NL
(local) \fBINTEGER\fR. The dimension of the array \fIaf\fR.   
.IP
Must be \fIlaf\fR\(>=\fBNB\fR*(\fIbwl\fR+\fIbwu\fR)+6*(\fIbwl\fR+\fIbwu\fR)*(\fIbwl\fR+2\fI*bwu\fR).
.IP
If \fIlaf\fR is not large enough, an error code will be returned and the minimum acceptable size will be returned in \fIaf\fR(1).
.TP 10
\fBwork\fR
.NL
(local) Same type as \fIa\fR. Workspace array of dimension \fIlwork\fR.
.TP 10
\fBlwork\fR
.NL
(local or global) \fBINTEGER\fR.  The size of the \fIwork\fR array, must be at least \fIlwork\fR\(>=\fInrhs\fR*(\fBNB\fR+2\fI*bwl\fR+4\fI*bwu\fR).
.SH OUTPUT PARAMETERS

.TP 10
\fBipiv\fR
.NL
(local) \fBINTEGER\fR array. 
.IP
The dimension of \fIipiv\fR must be \(>=\fIdesca\fR(\fBNB\fR). 
.IP
Contains pivot indices for local factorizations. Note that you should not alter the contents of this array between factorization and solve.
.TP 10
\fBb\fR
.NL
On exit, overwritten by the local pieces of the solution distributed matrix \fIX\fR.
.TP 10
\fBaf\fR
.NL
(local) 
.IP
\fBREAL\fR for \fBpsgbtrs\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdgbtrs\fR
.IP
\fBCOMPLEX\fR for \fBpcgbtrs\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzgbtrs\fR.
.IP
Array, dimension (\fIlaf\fR). 
.IP
Auxiliary Fillin space. Fillin is created during the factorization routine \fBp?gbtrf\fR and this is stored in \fIaf\fR. 
.IP
Note that if a linear system is to be solved using p?gbtrs after the factorization routine, \fIaf\fR must not be altered after the factorization.
.TP 10
\fBwork\fR(1)
.NL
On exit, \fIwork\fR(1) contains the minimum value of \fIlwork\fR required for optimum performance.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. If \fIinfo\fR=0, the execution is successful. 
.IP
\fIinfo\fR < 0: 
.IP
If the \fIi\fR-th argument is an array and the \fIj\fRth entry had an illegal value, then \fIinfo\fR = -(\fIi\fR*100+\fIj\fR); if the \fIi\fR-th argument is a scalar and had an illegal value, then \fIinfo\fR = \fI-i\fR.
