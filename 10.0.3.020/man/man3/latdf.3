.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?latdf 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?latdf \- Uses the LU factorization of the \fIn\fR-by-\fIn\fR matrix computed by \fB?getc2\fR and computes a contribution to the reciprocal Dif-estimate.
.SH SYNOPSIS
.PP
\fBcall slatdf\fR( \fIijob\fR, \fIn\fR, \fIz\fR, \fIldz\fR, \fIrhs\fR, \fIrdsum\fR, \fIrdscal\fR, \fIipiv\fR, \fIjpiv\fR)
.PP
\fBcall dlatdf\fR( \fIijob\fR, \fIn\fR, \fIz\fR, \fIldz\fR, \fIrhs\fR, \fIrdsum\fR, \fIrdscal\fR, \fIipiv\fR, \fIjpiv\fR)
.PP
\fBcall clatdf\fR( \fIijob\fR, \fIn\fR, \fIz\fR, \fIldz\fR, \fIrhs\fR, \fIrdsum\fR, \fIrdscal\fR, \fIipiv\fR, \fIjpiv\fR)
.PP
\fBcall zlatdf\fR( \fIijob\fR, \fIn\fR, \fIz\fR, \fIldz\fR, \fIrhs\fR, \fIrdsum\fR, \fIrdscal\fR, \fIipiv\fR, \fIjpiv\fR)
.SH INPUT PARAMETERS

.TP 10
\fBijob\fR
.NL
\fBINTEGER\fR. 
.IP
\fBijob\fR = 2: First compute an approximative null-vector \fIe\fR of \fIZ\fR using \fB?gecon\fR, \fIe\fR is normalized, and solve for \fIZ\fR*\fIx\fR = \(+-\fIe\fR-\fIf\fRwith the sign giving the greater value of 2-norm(\fIx\fR). This option is about 5 times as expensive as default. 
.IP
\fBijob\fR\(!= 2 (default): Local look ahead strategy where all entries of the right-hand side \fIb\fR is chosen as either +1 or -1 .
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The number of columns of the matrix \fIZ\fR.
.TP 10
\fBz\fR
.NL
\fBREAL\fR for \fBslatdf\fR/\fBclatdf\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlatdf\fR/\fBzlatdf\fR.
.IP
Array, \fBDIMENSION\fR (\fIldz\fR, \fIn\fR) 
.IP
On entry, the \fILU\fR part of the factorization of the \fIn\fR-by-\fIn\fR matrix \fIZ\fR computed by \fB?getc2\fR: \fIZ\fR = \fIP\fR*\fIL\fR*\fIU\fR*\fIQ\fR. 
.TP 10
\fBldz\fR
.NL
\fBINTEGER\fR. The leading dimension of the array \fIZ\fR. \fIlda\fR\(>= max(1, \fIn\fR).
.TP 10
\fBrhs\fR
.NL
\fBREAL\fR for \fBslatdf\fR/\fBclatdf\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlatdf\fR/\fBzlatdf\fR.
.IP
Array, \fBDIMENSION\fR (\fIn\fR). 
.IP
On entry, \fIrhs\fR contains contributions from other subsystems.
.TP 10
\fBrdsum\fR
.NL
\fBREAL\fR for \fBslatdf\fR/\fBclatdf\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlatdf\fR/\fBzlatdf\fR.
.IP
On entry, the sum of squares of computed contributions to the \fID\fRif-estimate under computation by \fB?tgsyL\fR, where the scaling factor \fIrdscal\fR has been factored out. If \fItrans\fR = \fB\'T\'\fR, \fIrdsum\fR is not touched. 
.IP
Note that \fIrdsum\fR only makes sense when \fB?tgsy2\fR is called by \fB?tgsyL\fR.
.TP 10
\fBrdscal\fR
.NL
\fBREAL\fR for \fBslatdf\fR/\fBclatdf\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlatdf\fR/\fBzlatdf\fR.
.IP
On entry, scaling factor used to prevent overflow in \fIrdsum\fR. 
.IP
If \fItrans\fR = \fIT\'\fR, \fIrdscal\fR is not touched. 
.IP
Note that \fIrdscal\fR only makes sense when \fB?tgsy2\fR is called by \fB?tgsyL\fR.
.TP 10
\fBipiv\fR
.NL
\fBINTEGER\fR. 
.IP
Array, \fBDIMENSION\fR (\fIn\fR). 
.IP
The pivot indices; for 1 \(<= i \(<= \fIn\fR, row \fIi\fR of the matrix has been interchanged with row \fIipiv\fR(\fIi\fR).
.TP 10
\fBjpiv\fR
.NL
\fBINTEGER\fR. 
.IP
Array, \fBDIMENSION\fR (\fIn\fR). 
.IP
The pivot indices; for 1 \(<=j\(<= \fIn\fR, column \fIj\fR of the matrix has been interchanged with column \fIjpiv\fR(\fIj\fR).
.SH OUTPUT PARAMETERS

.TP 10
\fBrhs\fR
.NL
On exit, \fIrhs\fR contains the solution of the subsystem with entries according to the value of \fIijob\fR.
.TP 10
\fBrdsum\fR
.NL
On exit, the corresponding sum of squares updated with the contributions from the current sub-system. 
.IP
If \fItrans\fR = \fB\'T\'\fR, \fIrdsum\fR is not touched.
.TP 10
\fBrdscal\fR
.NL
On exit, \fIrdscal\fR is updated with respect to the current contributions in \fIrdsum\fR. 
.IP
If \fItrans\fR = \fB\'T\'\fR, \fIrdscal\fR is not touched.
