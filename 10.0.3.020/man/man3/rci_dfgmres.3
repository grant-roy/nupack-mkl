.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH dfgmres 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
dfgmres \- Makes the FGMRES iterations.
.SH SYNOPSIS
.PP
\fBdfgmres\fR(\fIn\fR, \fIx\fR, \fIb\fR, \fIRCI\(ulrequest\fR, \fIipar\fR, \fIdpar\fR, \fItmp\fR)
.SH INPUT PARAMETERS

.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. Contains the size of the problem, and the sizes of arrays \fIx\fR and \fIb\fR.
.TP 10
\fBx\fR
.NL
\fBDOUBLE PRECISION\fR array of size \fIn\fR. Contains the initial approximation to the solution vector.
.TP 10
\fBb\fR
.NL
\fBDOUBLE PRECISION\fR array of size \fIn\fR. Contains the right-hand side vector.
.TP 10
\fBtmp\fR
.NL
\fBDOUBLE PRECISION\fR array of size ((2*\fBipar\fR(15)+1)*\fBn\fR+\fBipar\fR(15)*\fBipar\fR(15)+9)/2 + 1). Refer to the FGMRES Common Parameters.
.SH OUTPUT PARAMETERS

.TP 10
\fBRCI\(ulrequest\fR
.NL
\fBINTEGER\fR. Informs about result of work of theroutine.
.TP 10
\fBipar\fR
.NL
\fBINTEGER\fR array of size \fB128\fR. Refer to the FGMRES Common Parameters.
.TP 10
\fBdpar\fR
.NL
\fBDOUBLE PRECISION\fR array of size \fB128\fR. Refer to the FGMRES Common Parameters.
.TP 10
\fBtmp\fR
.NL
\fBDOUBLE PRECISION\fR array of size ((2*\fBipar\fR(15)+1)*\fBn\fR+\fBipar\fR(15)*\fBipar\fR(15)+9)/2 + 1). Refer to the FGMRES Common Parameters.
.SH RETURN VALUES
.PP

.TP 10
\fBRCI\(ulrequest\fR= 0
.NL
The routine completes task normally, the solution is found. This occurs only if the stopping tests are fully automatic. For the user defined stopping tests, see the comments to the \fBRCI\(ulrequest\fR= 2 or 4.
.TP 10
\fBRCI\(ulrequest\fR= -1
.NL
The routine is interrupted because the maximal number of iterations is reached, but the relative stopping criterion is not met. This situation occurs only if both tests are requested by the user.
.TP 10
\fBRCI\(ulrequest\fR= -10
.NL
The routine is interrupted because attempt to divide by zero occurs. Normally it happens if the matrix is (almost) degenerate. However it may happen if the parameter \fBdpar\fR is altered by mistake, or if the method is not stopped when the solution is found.
.TP 10
\fBRCI\(ulrequest\fR= -11
.NL
The routine is interrupted because it enters the infinite cycle. Probably, the values \fBipar\fR\fB(8)\fR, \fBipar\fR\fB(9)\fR, \fBipar\fR\fB(10)\fR were altered outside of the routine, or the \fBdfgmres\(ulcheck\fR routine was not called.
.TP 10
\fBRCI\(ulrequest\fR= -12
.NL
The routine is interrupted because errors are found in the method parameters. Normally this happens if the parameters \fBipar\fR and \fBdpar\fR are altered by mistake outside the routine.
.TP 10
\fBRCI\(ulrequest\fR= 1
.NL
Requests the user to multiply the matrix by \fItmp\fR\fB(\fR\fBipar\fR\fB(22)\fR\fB)\fR, put the result in the \fItmp\fR\fB(\fR\fBipar\fR\fB(23)\fR\fB)\fR, and return the control back to the routine \fBdfgmres\fR.
.TP 10
\fBRCI\(ulrequest\fR= 2
.NL
Requests the user to perform the stopping tests. If they fail, the control back must be returned to the \fBdfgmres\fR routine. Otherwise, the FGMRES solution is found, and the \fBfgmres\(ulget\fR routine can be run  to update the computed solution in the vector \fIx\fR.
.TP 10
\fBRCI\(ulrequest\fR= 3
.NL
Requests the user to apply the inverse preconditioner to \fBipar\fR\fB(22)\fR, put the result in the \fBipar\fR\fB(23)\fR, and return the control back to the routine \fBdfgmres\fR. 
.TP 10
\fBRCI\(ulrequest\fR= 4
.NL
Requests the user to check the norm of the currently generated vector. If it is not zero within the computational/rounding errors, the control must be returned back to the \fBdfgmres\fR routine. Otherwise, the FGMRES solution is found, and the \fBdfgmres\(ulget\fR routine can be run to update the computed solution in the vector \fIx\fR.
