.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH Exponential 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
Exponential \- Generates exponentially distributed random numbers.
.SH SYNOPSIS
.PP
.B ! Fortran
.PP
\fIstatus\fR= \fBvsrngexponential\fR( \fImethod\fR, \fIstream\fR, \fIn\fR, \fIr\fR, \fIa\fR, \fIbeta\fR)
.PP
\fIstatus\fR= \fBvdrngexponential\fR( \fImethod\fR, \fIstream\fR, \fIn\fR, \fIr\fR, \fIa\fR, \fIbeta\fR)
.PP
.B /* C */
.PP
\fIstatus\fR= \fBvsRngExponential\fR( \fImethod\fR, \fIstream\fR, \fIn\fR, \fIr\fR, \fIa\fR, \fIbeta\fR);
.PP
\fIstatus\fR= \fBvdRngExponential\fR( \fImethod\fR, \fIstream\fR, \fIn\fR, \fIr\fR, \fIa\fR, \fIbeta\fR);
.SH INPUT PARAMETERS
.PP
.SB Name
.br
\h\'1\'\fBmethod\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBINTEGER\fR, \fBINTENT(IN)\fR
.br
\h\'2\'C:\h\'7\'\fBint\fR
.br
.SB Description
.br
\h\'1\'Generation method. The specific values are as follows:
.br
\fBVSL\(ulMETHOD\(ulSEXPONENTIAL\(ulICDF\fR
.br
.br
\fBVSL\(ulMETHOD\(ulDEXPONENTIAL\(ulICDF\fR
.br
\fBVSL\(ulMETHOD\(ulSEXPONENTIAL\(ulICDF\(ulACCURATE\fR
.br
\fBVSL\(ulMETHOD\(ulDEXPONENTIAL\(ulICDF\(ulACCURATE\fR
.br
\h\'1\'Inverse cumulative distribution function method
.PP
.SB Name
.br
\h\'1\'\fBstream\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBTYPE (VSL\(ulSTREAM\(ulSTATE)\fR, \fBINTENT(IN)\fR
.br
\h\'2\'C:\h\'7\'\fBVSLStreamStatePtr\fR
.br
.SB Description
.br
\h\'2\'FORTRAN: Descriptor of the stream state structure.
.br
\h\'2\'C:\h\'7\'Pointer to the stream state structure
.PP
.SB Name
.br
\h\'1\'\fBn\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBINTEGER\fR, \fBINTENT(IN)\fR
.br
\h\'2\'C:\h\'7\'\fBint\fR
.br
.SB Description
.br
\h\'1\'Number of random values to be generated
.PP
.SB Name
.br
\h\'1\'\fBa\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL\fR, \fBINTENT(IN)\fR for \fBvsrngexponential\fR
.br
\h\'1\'\fBDOUBLE PRECISION\fR, \fBINTENT(IN)\fR for \fBvdrngexponential\fR
.br
\h\'2\'C:\h\'7\'\fBfloat\fR for \fBvsRngExponential\fR
.br
\h\'2\'C:\h\'7\'\fBdouble\fR for \fBvdRngExponential\fR
.br
.SB Description
.br
\h\'1\'Displacement \fIa\fR
.PP
.SB Name
.br
\h\'1\'\fBbeta\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL\fR, \fBINTENT(IN)\fR for \fBvsrngexponential\fR
.br
\h\'1\'\fBDOUBLE PRECISION\fR, \fBINTENT(IN)\fR for \fBvdrngexponential\fR
.br
\h\'2\'C:\h\'7\'\fBfloat\fR for \fBvsRngExponential\fR
.br
\h\'1\'\fBdouble\fR for \fBvdRngExponential\fR
.br
.SB Description
.br
\h\'1\'Scalefactor.
.SH OUTPUT PARAMETERS
.PP
.SB Name
.br
\h\'1\'\fBr\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL\fR, \fBINTENT(OUT)\fR for \fBvsrngexponential\fR
.br
\h\'1\'\fBDOUBLE PRECISION\fR, \fBINTENT(OUT)\fR for \fBvdrngexponential\fR
.br
\h\'2\'C:\h\'7\'\fBfloat*\fR for \fBvsRngExponential\fR
.br
\h\'1\'\fBdouble*\fR for \fBvdRngExponential\fR
.br
.SB Description
.br
\h\'1\'Vector of \fIn\fR exponentially distributed random numbers
.SH RETURN VALUES
.PP

.TP 10
\fBVSL\(ulERROR\(ulOK, VSL\(ulSTATUS\(ulOK\fR
.NL
Indicates no error, execution is successful.
.TP 10
\fBVSL\(ulERROR\(ulNULL\(ulPTR\fR
.NL
\fBstream\fR is a \fBNULL\fR pointer.
.TP 10
\fBVSL\(ulERROR\(ulBAD\(ulSTREAM\fR
.NL
\fIstream\fR is not a valid random stream.
.TP 10
\fBVSL\(ulERROR\(ulBAD\(ulUPDATE\fR
.NL
Callback function for an abstract BRNG returns an invalid number of updated entries in a buffer, that is, < 0 or > \fBnmax\fR.
.TP 10
\fBVSL\(ulERROR\(ulNO\(ulNUMBERS\fR
.NL
Callback function for an abstract BRNG returns 0 as the number of updated entries in a buffer.
