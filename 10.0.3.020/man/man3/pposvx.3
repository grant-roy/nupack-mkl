.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?posvx 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?posvx \- Solves a symmetric or Hermitian positive definite system of linear equations.
.SH SYNOPSIS
.PP
\fBcall psposvx\fR(\fIfact\fR, \fIuplo\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIaf\fR, \fIiaf\fR, \fIjaf\fR, \fIdescaf\fR, \fIequed\fR, \fIsr\fR, \fIsc\fR, \fIb\fR, \fIib\fR, \fIjb\fR, \fIdescb\fR, \fIx\fR, \fIix\fR, \fIjx\fR, \fIdescx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
\fBcall pdposvx\fR(\fIfact\fR, \fIuplo\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIaf\fR, \fIiaf\fR, \fIjaf\fR, \fIdescaf\fR, \fIequed\fR, \fIsr\fR, \fIsc\fR, \fIb\fR, \fIib\fR, \fIjb\fR, \fIdescb\fR, \fIx\fR, \fIix\fR, \fIjx\fR, \fIdescx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
\fBcall pcposvx\fR(\fIfact\fR, \fIuplo\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIaf\fR, \fIiaf\fR, \fIjaf\fR, \fIdescaf\fR, \fIequed\fR, \fIsr\fR, \fIsc\fR, \fIb\fR, \fIib\fR, \fIjb\fR, \fIdescb\fR, \fIx\fR, \fIix\fR, \fIjx\fR, \fIdescx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
\fBcall pzposvx\fR(\fIfact\fR, \fIuplo\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIaf\fR, \fIiaf\fR, \fIjaf\fR, \fIdescaf\fR, \fIequed\fR, \fIsr\fR, \fIsc\fR, \fIb\fR, \fIib\fR, \fIjb\fR, \fIdescb\fR, \fIx\fR, \fIix\fR, \fIjx\fR, \fIdescx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBfact\fR
.NL
(global) \fBCHARACTER\fR. Must be \fB\'F\'\fR, \fB\'N\'\fR, or \fB\'E\'\fR.
.IP
Specifies whether or not the factored form of the matrix \fIA\fR is supplied on entry, and if not, whether the matrix \fIA\fR should be equilibrated before it is factored.
.IP
If \fIfact\fR = \fB\'F\'\fR: on entry, \fIaf\fR contains the factored form of \fIA\fR. If \fIequed\fR = \fB\'Y\'\fR, the matrix \fIA\fR has been equilibrated with scaling factors given by \fIs\fR. \fIa\fR and \fIaf\fR will not be modified.
.IP
If \fIfact\fR = \fB\'N\'\fR, the matrix \fIA\fR will be copied to \fIaf\fR and factored. 
.IP
If \fIfact\fR = \fB\'E\'\fR, the matrix \fIA\fR will be equilibrated if necessary, then copied to \fIaf\fR and factored.
.TP 10
\fBuplo\fR
.NL
(global) \fBCHARACTER\fR. Must be \fB\'U\'\fR or \fB\'L\'\fR.
.IP
Indicates whether the upper or lower triangular part of \fIA\fR is stored. 
.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. The order of the distributed submatrix sub(\fIA\fR) (\fIn\fR\(>= 0). 
.TP 10
\fBnrhs\fR
.NL
(global) \fBINTEGER\fR. The number of right-hand sides; the number of columns of the distributed submatrices \fIB\fR and \fIX\fR. (\fInrhs\fR\(>= 0). 
.TP 10
\fBa\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsposvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdposvx\fR
.IP
\fBCOMPLEX\fR for \fBpcposvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzposvx\fR. 
.IP
Pointer into the local memory to an array of local dimension (\fIlld\(ula\fR, \fILOCc\fR(\fIja\fR+\fIn\fR-1)). On entry, the symmetric/Hermitian matrix \fIA\fR, except if \fIfact\fR = \fB\'F\'\fR and \fIequed\fR = \fB\'Y\'\fR, then \fIA\fR must contain the equilibrated matrix diag(\fIsr\fR)*\fIA\fR*diag(\fIsc\fR). 
.IP
If \fIuplo\fR = \fB\'U\'\fR, the leading \fIn\fR-by-\fIn\fR upper triangular part of \fIA\fR contains the upper triangular part of the matrix \fIA\fR, and the strictly lower triangular part of \fIA\fR is not referenced. 
.IP
If \fIuplo\fR = \fB\'L\'\fR, the leading \fIn\fR-by-\fIn\fR lower triangular part of \fIA\fR contains the lower triangular part of the matrix \fIA\fR, and the strictly upper triangular part of \fIA\fR is not referenced. \fIA\fR is not modified if \fIfact\fR = \fB\'F\'\fR or \fB\'N\'\fR, or if \fIfact\fR = \fB\'E\'\fR and \fIequed\fR = \fB\'N\'\fR on exit. 
.TP 10
\fBia\fR, \fBja\fR
.NL
(global) \fBINTEGER\fR.  The row and column indices in the global array \fIa\fR indicating the first row and the first column of the submatrix \fIA\fR, respectively.
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIA\fR.
.TP 10
\fBaf\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsposvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdposvx\fR
.IP
\fBCOMPLEX\fR for \fBpcposvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzposvx\fR. 
.IP
Pointer into the local memory to an array of local dimension (\fIlld\(ulaf\fR, \fILOCc\fR(\fIja\fR+\fIn\fR-1)). 
.IP
If \fIfact\fR = \fB\'F\'\fR, then \fIaf\fR is an input argument and on entry  contains the triangular factor \fIU\fR or \fIL\fR from the Cholesky  factorization \fIA\fR = \fIU\fR**\fIT\fR*\fIU\fR or \fIA\fR = \fIL\fR*\fIL\fR**\fIT\fR, in the same storage format as \fIA\fR. If \fIequed\fR \(!= \fB\'N\'\fR, then \fIaf\fR is the factored form of the equilibrated matrix diag(\fIsr\fR)*\fIA\fR*diag(\fIsc\fR). 
.TP 10
\fBiaf\fR, \fBjaf\fR
.NL
(global) \fBINTEGER\fR. The row and column indices in the global array \fIaf\fR indicating the first row and the first column of the submatrix \fIAF\fR, respectively.
.TP 10
\fBdescaf\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIAF\fR.
.TP 10
\fBequed\fR
.NL
(global). \fBCHARACTER\fR. Must be \fB\'N\'\fR or \fB\'Y\'\fR. 
.IP
\fIequed\fR is an input argument if \fIfact\fR = \fB\'F\'\fR. It specifies the form of equilibration that was done: 
.IP
If \fIequed\fR = \fB\'N\'\fR, no equilibration was done (always true if \fIfact\fR = \fB\'N\'\fR);
.IP
If \fIequed\fR = \fB\'Y\'\fR, equilibration was done and \fIA\fR has been replaced by diag(\fIsr\fR)*\fIA\fR*diag(\fIsc\fR).
.TP 10
\fBsr\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsposvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdposvx\fR
.IP
\fBCOMPLEX\fR for \fBpcposvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzposvx\fR. 
.IP
Array, \fBDIMENSION\fR  (\fIlld\(ula\fR). 
.IP
The array \fIs\fR contains the scale factors for \fIA\fR. This array is an input argument if \fIfact\fR = \fB\'F\'\fR only; otherwise it is an output argument. 
.IP
If \fIequed\fR = \fB\'N\'\fR, \fIs\fR is not accessed.   
.IP
If \fIfact\fR = \fB\'F\'\fR and \fIequed\fR = \fB\'Y\'\fR, each element of \fIs\fR must be positive.
.TP 10
\fBb\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsposvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdposvx\fR
.IP
\fBCOMPLEX\fR for \fBpcposvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzposvx\fR. 
.IP
Pointer into the local memory to an array of local dimension (\fIlld\(ulb\fR, \fILOCc\fR(\fIjb\fR+\fInrhs\fR-1)). On entry, the \fIn\fR-by-\fInrhs\fR right-hand side matrix \fIB\fR. 
.TP 10
\fBib\fR, \fBjb\fR
.NL
(global) \fBINTEGER\fR.  The row and column indices in the global array \fIb\fR indicating the first row and the first column of the submatrix \fIB\fR, respectively.
.TP 10
\fBdescb\fR
.NL
(global and local) \fBINTEGER\fR. Array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIB\fR.
.TP 10
\fBx\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsposvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdposvx\fR
.IP
\fBCOMPLEX\fR for \fBpcposvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzposvx\fR. 
.IP
Pointer into the local memory to an array of local dimension (\fIlld\(ulx\fR, \fILOCc\fR(\fIjx\fR+\fInrhs\fR-1)).
.TP 10
\fBix\fR, \fBjx\fR
.NL
(global) \fBINTEGER\fR.  The row and column indices in the global array \fIx\fR indicating the first row and the first column of the submatrix \fIX\fR, respectively.
.TP 10
\fBdescx\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIX\fR.
.TP 10
\fBwork\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsposvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdposvx\fR
.IP
\fBCOMPLEX\fR for \fBpcposvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzposvx\fR. 
.IP
Workspace array, \fBDIMENSION\fR (\fIlwork\fR). 
.TP 10
\fBlwork\fR
.NL
(local or global) \fBINTEGER\fR. 
.IP
The dimension of the array \fIwork\fR. \fIlwork\fR is local input and must be at least \fIlwork\fR = \fBmax\fR(\fBp?pocon\fR(\fIlwork\fR), \fBp?porfs\fR(\fIlwork\fR))  + \fILOCr\fR(\fIn\(ula\fR). 
.IP
\fIlwork\fR = 3*\fIdesca\fR(\fIlld\(ul\fR).
.IP
If \fIlwork\fR = -1, then \fIlwork\fR is global input and a workspace query is assumed; the routine only calculates the minimum and optimal size for all work arrays. Each of these values is returned in the first entry of the corresponding work array, and no error message is issued by \fBpxerbla\fR.  
.TP 10
\fBiwork\fR
.NL
(local) \fBINTEGER\fR. Workspace array, dimension (\fIliwork\fR).
.TP 10
\fBliwork\fR
.NL
(local or global)
.IP
\fBINTEGER\fR. The dimension of the array \fIiwork\fR. \fIliwork\fR is local input and must be at least \fIliwork\fR = \fIdesca\fR(\fIlld\(ul\fR) \fIliwork\fR = \fILOCr\fR(\fIn\(ula\fR). 
.IP
If \fIliwork\fR = -1, then \fIliwork\fR is global input and a workspace query is assumed; the routine only calculates the minimum and optimal size for all work arrays. Each of these values is returned in the first entry of the corresponding work array, and no error message is issued by \fBpxerbla\fR.  
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit, if \fIfact\fR = \fB\'E\'\fR and \fIequed\fR = \fB\'Y\'\fR, \fIa\fR is overwritten by diag(\fIsr\fR)*\fIa\fR*diag(\fIsc\fR).
.TP 10
\fBaf\fR
.NL
If \fIfact\fR = \fB\'N\'\fR, then \fIaf\fR is an output argument and on exit  returns the triangular factor \fIU\fR or \fIL\fR from the Cholesky factorization \fIA\fR = \fIU\fR**\fIT\fR*\fIU\fR or \fIA\fR = \fIL*L\fR**\fIT\fR of the original  matrix \fIA\fR. 
.IP
If \fIfact\fR = \fB\'E\'\fR, then \fIaf\fR is an output argument and on exit returns the triangular factor \fIU\fR or \fIL\fR from the Cholesky factorization \fIA\fR = \fIU\fR**\fIT\fR*\fIU\fR or \fIA\fR = \fIL*L\fR**\fIT\fR of the equilibrated matrix \fIA\fR (see the description of \fIA\fR for the form of the equilibrated matrix).
.TP 10
\fBequed\fR
.NL
If \fIfact\fR\(!=\fB\'F\'\fR , then \fIequed\fR is an output argument. It specifies the form of equilibration that was done (see the description of \fIequed\fR in \fIInput Arguments\fRsection). 
.TP 10
\fBsr\fR
.NL
This array  is an output argument if \fIfact\fR\(!=\fB\'F\'\fR. 
.IP
See the description of \fIsr\fR in \fIInput Arguments\fRsection.
.TP 10
\fBsc\fR
.NL
This array is an output argument if \fIfact\fR\(!=\fB\'F\'\fR. 
.IP
See the description of \fIsc\fR in \fIInput Arguments\fRsection.
.TP 10
\fBb\fR
.NL
On exit, if \fIequed\fR = \fB\'N\'\fR, \fIb\fR is not modified; if \fItrans\fR = \fB\'N\'\fR and \fIequed\fR = \fB\'R\'\fR or \fB\'B\'\fR, \fIb\fR is overwritten by diag(\fIr\fR)*\fIb\fR; if \fItrans\fR = \fB\'T\'\fR or \fB\'C\'\fR and \fIequed\fR = \fB\'C\'\fR or \fB\'B\'\fR, \fIb\fR is overwritten by diag(\fIc\fR)*\fIb\fR. 
.TP 10
\fBx\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsposvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdposvx\fR
.IP
\fBCOMPLEX\fR for \fBpcposvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzposvx\fR.
.IP
If \fIinfo\fR = 0 the \fIn\fR-by-\fInrhs\fR solution matrix \fIX\fR to the original system of equations. 
.IP
Note that \fIA\fR and \fIB\fR are modified on exit if \fIequed\fR\(!=\fB\'N\'\fR, and the solution to the equilibrated system is 
.IP
inv(diag(\fIsc\fR))*\fIX\fR   if \fItrans\fR = \fB\'N\'\fR and \fIequed\fR = \fB\'C\'\fR or \fB\'B\'\fR, or
.IP
inv(diag(\fIsr\fR))*\fIX\fR if \fItrans\fR = \fB\'T\'\fR or \fB\'C\'\fR and \fIequed\fR = \fB\'R\'\fR or \fB\'B\'\fR. 
.TP 10
\fBrcond\fR
.NL
(global)
.IP
\fBREAL\fR for single precision flavors. 
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
An estimate of the reciprocal condition number of the matrix \fIA\fR after equilibration (if done). If \fIrcond\fR is less than the machine precision (in particular, if \fIrcond\fR=0), the matrix is singular to working precision. This condition is indicated by a return code of \fIinfo\fR > 0.
.TP 10
\fBferr\fR
.NL
\fBREAL\fR for single precision flavors. 
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
Arrays, \fBDIMENSION\fR at least max(\fILOC\fR,\fIn\(ulb\fR). The estimated forward error bounds for each solution vector \fIX\fR(\fIj\fR) (the \fIj\fR-th column of the solution matrix \fIX\fR). If \fIxtrue\fR is the true solution, \fIferr\fR(\fIj\fR) bounds the magnitude of the largest entry in (\fIX\fR(\fIj\fR) - \fIxtrue\fR) divided by the magnitude of the largest entry in \fIX\fR(\fIj\fR). The quality of the error bound depends on the quality of the estimate of norm(inv(\fIA\fR)) computed in the code; if the estimate of norm(inv(\fIA\fR)) is accurate, the error bound is guaranteed.
.TP 10
\fBberr\fR
.NL
(local)
.IP
\fBREAL\fR for single precision flavors. 
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
Arrays, \fBDIMENSION\fR at least max(\fILOC\fR,\fIn\(ulb\fR). The componentwise relative backward error of each solution vector \fIX\fR(\fIj\fR) (the smallest relative change in any entry of \fIA\fR or \fIB\fR that makes \fIX\fR(\fIj\fR) an exact solution).
.TP 10
\fBwork\fR(1)
.NL
(local) On exit, \fIwork\fR(1) returns the minimal and optimal \fIliwork\fR. 
.TP 10
\fBinfo\fR
.NL
(global) \fBINTEGER\fR. 
.IP
If \fIinfo\fR=0, the execution is successful. 
.IP
< 0: if \fIinfo\fR = -\fIi\fR, the \fIi\fR-th argument had an illegal value 
.IP
> 0: if \fIinfo\fR = \fIi\fR, and \fIi\fR is \(<= \fIn\fR: if \fIinfo\fR = \fIi\fR, the leading minor of order \fIi\fR of \fIa\fR is not positive definite, so the factorization could not be completed, and the solution and error bounds could not be computed. 
.IP
= \fIn\fR+1: \fIrcond\fR is less than machine precision. The factorization has been completed, but the matrix is singular to working precision, and the solution and error bounds have not been computed. 
