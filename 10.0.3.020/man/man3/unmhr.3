.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?unmhr 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?unmhr \- Multiplies an arbitrary complex matrix C by the complex unitary matrix Q determined by \fB?gehrd\fR.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall cunmhr\fR(\fIside\fR, \fItrans\fR, \fIm\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIa\fR, \fIlda\fR, \fItau\fR, \fIc\fR, \fIldc\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall zunmhr\fR(\fIside\fR, \fItrans\fR, \fIm\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIa\fR, \fIlda\fR, \fItau\fR, \fIc\fR, \fIldc\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall unmhr\fR(\fIa\fR, \fItau\fR, \fIc\fR[,\fIilo\fR] [,\fIihi\fR] [,\fIside\fR] [,\fItrans\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBside\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'L\'\fR or \fB\'R\'\fR. 
.IP
If \fIside\fR = \fB\'L\'\fR, then the routine forms \fIQ*C\fR or \fIQ\fR**\fIH\fR\fI*C\fR. 
.IP
If \fIside\fR = \fB\'R\'\fR, then the routine forms \fIC*Q\fR or \fIC*Q\fR**\fIH\fR.
.TP 10
\fBtrans\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'N\'\fR or \fB\'C\'\fR. 
.IP
If \fItrans\fR = \fB\'N\'\fR , then \fIQ\fR is applied to \fIC\fR. 
.IP
If \fItrans\fR = \fB\'T\'\fR, then \fIQ\fR**\fIH\fR is applied to \fIC\fR.
.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. The number of rows in \fIC\fR (\fIm\fR\(>= 0). 
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The number of columns in \fIC\fR (\fIn\fR\(>= 0).
.TP 10
\fBilo\fR, \fBihi\fR
.NL
\fBINTEGER\fR. These must be the same parameters \fIilo\fR and \fIihi\fR, respectively, as supplied to \fB?gehrd\fR . 
.IP
If \fIm\fR > 0 and \fIside\fR = \fB\'L\'\fR, then 1 \(<=\fIilo\fR\(<=\fIihi\fR\(<=\fIm\fR. 
.IP
If \fIm\fR = 0 and \fIside\fR = \fB\'L\'\fR , then \fIilo\fR = 1 and \fIihi\fR = 0. 
.IP
If \fIn\fR > 0 and \fIside\fR = \fB\'R\'\fR, then 1 \(<=\fIilo\fR\(<=\fIihi\fR\(<=\fIn\fR. 
.IP
If \fIn\fR = 0 and \fIside\fR = \fB\'R\'\fR , then \fIilo\fR =1 and \fIihi\fR = 0.
.TP 10
\fBa\fR, \fBtau\fR, \fBc\fR, \fBwork\fR
.NL
\fBCOMPLEX\fR for \fBcunmhr\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzunmhr\fR. 
.IP
Arrays: 
.IP
\fIa\fR (\fIlda\fR,*) contains details of the vectors which define the elementary reflectors, as returned by \fB?gehrd\fR. 
.IP
The second dimension of \fIa\fR must be at least max(1, \fIm\fR) if \fIside\fR = \fB\'L\'\fR and at least max(1, \fIn\fR) if \fIside\fR = \fB\'R\'\fR.
.IP
\fItau\fR(*) contains further details of the elementary reflectors, as returned by \fB?gehrd\fR. 
.IP
The dimension of \fItau\fR must be at least max (1, \fIm\fR-1) 
.IP
if \fIside\fR = \fB\'L\'\fR and at least max (1, \fIn\fR-1) if \fIside\fR = \fB\'R\'\fR.
.IP
\fIc\fR (\fIldc\fR,*) contains the \fIm\fR-by-\fIn\fR matrix \fIC\fR. The second dimension of \fIc\fR must be at least max(1, \fIn\fR).
.IP
\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR; at least max(1, \fIm\fR) if \fIside\fR = \fB\'L\'\fR and at least max (1, \fIn\fR) if \fIside\fR = \fB\'R\'\fR.
.TP 10
\fBldc\fR
.NL
\fBINTEGER\fR. The first dimension of \fIc\fR; at least max(1, \fIm\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. The size of the \fIwork\fR array. 
.IP
If \fIside\fR = \fB\'L\'\fR, \fIlwork\fR\(>= max(1,\fIn\fR). 
.IP
If \fIside\fR = \fB\'R\'\fR, \fIlwork\fR\(>= max(1,\fIm\fR). 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR array, returns this value as the first entry of the \fIwork\fR array, and no error message related to \fIlwork\fR is issued by \fBxerbla\fR.
.SH OUTPUT PARAMETERS

.TP 10
\fBc\fR
.NL
\fIC\fR is overwritten by \fIQ*C\fR, or \fIQ\fR**\fIH\fR*\fIC,\fR or \fIC*Q\fR**\fIH\fR, or \fIC*Q\fR as specified by \fIside\fR and \fItrans\fR.
.TP 10
\fBwork\fR(1)
.NL
If \fIinfo\fR = 0, on exit \fIwork\fR(1) contains the minimum value of \fIlwork\fR required for optimum performance. Use this \fIlwork\fR for subsequent runs.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi-\fRth parameter had an illegal value.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBunmhr\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIr,r\fR).
.IP
\fIr\fR = \fIm\fR if \fIside\fR = \fB\'L\'\fR.
.IP
\fIr\fR = \fIn\fR if \fIside\fR = \fB\'R\'\fR.
.TP 10
\fBtau\fR
.NL
Holds the vector of length (\fIr-\fR1).
.TP 10
\fBc\fR
.NL
Holds the matrix \fIC\fR of size (\fIm,n\fR).
.TP 10
\fBilo\fR
.NL
Default value for this argument is \fIilo\fR = 1.
.TP 10
\fBihi\fR
.NL
Default value for this argument is \fIihi\fR = \fIn\fR.
.TP 10
\fBside\fR
.NL
Must be \fB\'L\'\fR or \fB\'R\'\fR. The default value is \fB\'L\'\fR.
.TP 10
\fBtrans\fR
.NL
Must be \fB\'N\'\fR or \fB\'C\'\fR. The default value is \fB\'N\'\fR.
