.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?sbmv 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?sbmv \- Computes a matrix-vector product using a symmetric band matrix.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall ssbmv\fR(\fIuplo\fR, \fIn\fR, \fIk\fR, \fIalpha\fR, \fIa\fR, \fIlda\fR, \fIx\fR, \fIincx\fR, \fIbeta\fR, \fIy\fR, \fIincy\fR)
.PP
\fBcall dsbmv\fR(\fIuplo\fR, \fIn\fR, \fIk\fR, \fIalpha\fR, \fIa\fR, \fIlda\fR, \fIx\fR, \fIincx\fR, \fIbeta\fR, \fIy\fR, \fIincy\fR)
.PP
.B Fortran 95
.PP
\fBcall sbmv\fR(\fIa\fR, \fIx\fR, \fIy\fR[,\fIuplo\fR][,\fIalpha\fR] [,\fIbeta\fR])
.SH INPUT PARAMETERS

.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR. Specifies whether the upper or lower triangular part of the band matrix \fIA\fR is used:
.IP
if \fIuplo\fR = \fB\'U\'\fR or \fB\'u\'\fR - upper  triangular part;
.IP
if \fIuplo\fR = \fB\'L\'\fR or \fB\'l\'\fR - low  triangular part.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. Specifies the order of the matrix \fIA\fR. The value of \fIn\fR must be at least zero.
.TP 10
\fBk\fR
.NL
\fBINTEGER\fR. Specifies the number of super-diagonals of the matrix \fIA\fR.
.IP
The value of \fIk\fR must satisfy 0\(<=\fIk\fR.
.TP 10
\fBalpha\fR
.NL
\fBREAL\fR for \fBssbmv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsbmv\fR
.IP
Specifies the scalar \fIalpha\fR. 
.TP 10
\fBa\fR
.NL
\fBREAL\fR for \fBssbmv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsbmv\fR
.IP
Array, \fBDIMENSION\fR(\fIlda, n\fR). Before entry with \fIuplo\fR = \fB\'U\'\fR or \fB\'u\'\fR, the leading (\fIk\fR + 1) by \fIn\fR part of the array \fIa\fR must contain the upper triangular band part of the symmetric matrix, supplied column-by-column, with the leading diagonal of the matrix in row (\fIk\fR + 1) of the array, the first super-diagonal starting at position 2 in row \fIk\fR, and so on. The top left \fIk\fR by \fIk\fR triangle of the array \fIa\fR is not referenced.
.IP
The following program segment transfers the upper triangular part of a symmetric band matrix from conventional full matrix storage to band storage: 
.br
do 20, j = 1, n
.br
.br
           m = k + 1 - j
.br
           do 10, i = max( 1, j - k ), j
.br
  a( m + i, j ) = matrix( i, j )
.br
 10 continue
.br
20 continue
.IP
Before entry with \fIuplo\fR = \fB\'L\'\fR or \fB\'l\'\fR, the leading (\fIk\fR + 1) by \fIn\fR part of the array \fIa\fR must contain the lower triangular band part of the symmetric matrix, supplied column-by-column, with the leading diagonal of the matrix in row 1 of the array, the first sub-diagonal starting at position 1 in row 2, and so on. The bottom right \fIk\fR by \fIk\fR triangle of the array \fIa\fR is not referenced.
.IP
The following program segment transfers the lower triangular part of a symmetric band matrix from conventional full matrix storage to band storage: 
.br
do 20, j = 1, n
.br
.br
           m = 1 - j
.br
 do 10, i = j, min( n, j + k )
.br
             a( m + i, j ) = matrix( i, j )
.br
 10 continue
.br
20 continue
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. Specifies the first dimension of \fIa\fR as declared in the calling (sub)program. The value of \fIlda\fR must be at least (\fIk\fR + 1).
.TP 10
\fBx\fR
.NL
\fBREAL\fR for \fBssbmv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsbmv\fR
.IP
Array, \fBDIMENSION\fR at least (1 + (\fIn\fR - 1)*abs(\fIincx\fR)). Before entry, the incremented array \fIx\fR must contain the vector \fIx\fR.
.TP 10
\fBincx\fR
.NL
\fBINTEGER\fR. Specifies the increment for the elements of \fIx\fR.
.IP
The value of\fI incx\fR must not be zero.
.TP 10
\fBbeta\fR
.NL
\fBREAL\fR for \fBssbmv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsbmv\fR
.IP
Specifies the scalar \fIbeta\fR. 
.TP 10
\fBy\fR
.NL
\fBREAL\fR for \fBssbmv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsbmv\fR
.IP
Array, \fBDIMENSION\fR at least (1 + (\fIn\fR - 1)*abs(\fIincy\fR)). Before entry, the incremented array \fIy\fR must contain the vector \fIy\fR. 
.TP 10
\fBincy\fR
.NL
\fBINTEGER\fR. Specifies the increment for the elements of \fIy\fR.
.IP
The value of \fIincy\fR must not be zero.
.SH OUTPUT PARAMETERS

.TP 10
\fBy\fR
.NL
Overwritten by the updated vector \fIy\fR.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77   counterparts. For general conventions applied to skip redundant or reconstructible arguments, see Fortran 95 Interface Conventions.
.PP
Specific details for the routine \fBsbmv\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the array \fIa\fR of size (\fIk+1,n\fR).
.TP 10
\fBx\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBy\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBuplo\fR
.NL
Must be \fB\'U\'\fR or \fB\'L\'\fR. The default value is \fB\'U\'\fR.
.TP 10
\fBalpha\fR
.NL
The default value is 1.
.TP 10
\fBbeta\fR
.NL
The default value is 1.
