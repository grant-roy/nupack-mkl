.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?pttrsv 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?pttrsv \- Solves a single triangular linear system via frontsolve or backsolve where the triangular matrix is a factor of a tridiagonal matrix computed by \fBp?pttrf\fR .
.SH SYNOPSIS
.PP
\fBcall pspttrsv\fR(\fIuplo\fR, \fIn,\fR\fI nrhs\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pdpttrsv\fR(\fIuplo\fR, \fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pcpttrsv\fR(\fIuplo\fR, \fItrans\fR, \fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pzpttrsv\fR(\fIuplo\fR, \fItrans\fR, \fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBuplo\fR
.NL
(global) \fBCHARACTER\fR.   Must be \fB\'U\'\fR or \fB\'L\'\fR.
.IP
If \fIuplo\fR = \fB\'U\'\fR, upper triangle of \fIA\fR(1:\fIn\fR, \fIja\fR:\fIja\fR+\fIn\fR-1) is stored;
.IP
If \fIuplo\fR = \fB\'L\'\fR, lower triangle of \fIA\fR(1:\fIn\fR, \fIja\fR:\fIja\fR+\fIn\fR-1) is stored.
.TP 10
\fBtrans\fR
.NL
(global) \fBCHARACTER\fR.   Must be \fB\'N\'\fR or \fB\'C\'\fR.
.IP
If \fItrans\fR = \fB\'N\'\fR, solve with \fIA\fR(1:\fIn\fR, \fIja\fR:\fIja\fR+\fIn\fR-1);
.IP
If \fItrans\fR = \fB\'C\'\fR (for complex flavors), solve with conjugate transpose (\fIA\fR(1:\fIn\fR, \fIja\fR:\fIja\fR+\fIn\fR-1))**\fIH\fR.
.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The number of rows and columns to be operated on, that is, the order of the distributed submatrix \fIA\fR(1:\fIn\fR, \fIja\fR:\fIja\fR+\fIn\fR-1). \fIn \fR\(>= 0. 
.TP 10
\fBnrhs\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The number of right hand sides; the number of columns of the distributed submatrix \fIB\fR(\fIjb\fR:\fIjb+n\fR-1, 1:\fInrhs\fR);  \fInrhs\fR \(>= 0.
.TP 10
\fBd\fR
.NL
(local) 
.IP
\fBREAL\fR for \fBpspttrsv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdpttrsv\fR
.IP
\fBCOMPLEX\fR for \fBpcpttrsv\fR
.IP
\fBCOMPLEX*16\fR for \fBpzpttrsv\fR. 
.IP
Pointer to the local part of the global vector storing the main diagonal of the matrix; must be of size \(>=\fI desca\fR(\fInb\(ul\fR). 
.TP 10
\fBe\fR
.NL
(local) 
.IP
\fBREAL\fR for \fBpspttrsv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdpttrsv\fR
.IP
\fBCOMPLEX\fR for \fBpcpttrsv\fR
.IP
\fBCOMPLEX*16\fR for \fBpzpttrsv\fR. 
.IP
Pointer to the local part of the global vector storing the upper diagonal of the matrix; must be of size \(>=\fI desca\fR(\fInb\(ul\fR).  Globally, \fIdu\fR(\fIn\fR) is not referenced, and \fIdu\fR must be aligned with \fId\fR. 
.TP 10
\fBja\fR
.NL
(global) \fBINTEGER\fR.  The index in the global array \fIA\fR that points to the start of the matrix to be operated on (which may be either all of \fIA\fR or a submatrix of \fIA\fR).
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array, \fBDIMENSION\fR (\fIdlen\(ul\fR).   The array descriptor for the distributed matrix \fIA\fR. 
.IP
If  1D type (\fIdtype\(ula\fR = 501 or 502), then \fIdlen \fR\(>=  7;
.IP
If  2D type (\fIdtype\(ula\fR = 1), then \fIdlen \fR\(>=  9. 
.IP
Contains information on mapping of \fIA\fR to memory. See ScaLAPACK manual for full description and options.
.TP 10
\fBb\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpspttrsv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdpttrsv\fR
.IP
\fBCOMPLEX\fR for \fBpcpttrsv\fR
.IP
\fBCOMPLEX*16\fR for \fBpzpttrsv\fR.
.IP
Pointer into the local memory to an array of local lead \fBDIMENSION\fR\fI  lld\(ulb \fR\(>=\fI nb\fR. 
.IP
On entry, this array contains the local pieces of the right hand sides \fIB\fR(\fIjb\fR:\fIjb+n\fR-1, 1:\fInrhs\fR).
.TP 10
\fBib\fR
.NL
(global) \fBINTEGER\fR.  The row index in the global array \fIB\fR that points to the first row of the matrix to be operated on (which may be either all of \fIB\fR or a submatrix of \fIB\fR).
.TP 10
\fBdescb\fR
.NL
(global and local) \fBINTEGER\fR array, \fBDIMENSION\fR (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIB\fR.
.IP
If  1D type (\fIdtype\(ulb\fR = 502), then \fIdlen \fR\(>=  7;
.IP
If  2D type (\fIdtype\(ulb\fR = 1), then \fIdlen \fR\(>=  9. 
.IP
Contains information on mapping of \fIB\fR to memory. See ScaLAPACK manual for full description and options.
.TP 10
\fBlaf\fR
.NL
(local) 
.IP
\fBINTEGER\fR. The size of user-input auxiliary Fillin space \fIaf\fR.   Must be \fIlaf  \fR\(>=  (\fInb\fR+2\fI*bw\fR)\fI*bw\fR. 
.IP
If \fIlaf\fR is not large enough, an error code will be returned and the minimum acceptable size will be returned in \fIaf\fR(1).
.TP 10
\fBwork\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpspttrsv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdpttrsv\fR
.IP
\fBCOMPLEX\fR for \fBpcpttrsv\fR
.IP
\fBCOMPLEX*16\fR for \fBpzpttrsv\fR.
.IP
The array \fIwork\fR is a temporary workspace array of \fBDIMENSION\fR\fI lwork\fR. This space may be overwritten in between calls to routines.
.TP 10
\fBlwork\fR
.NL
(local or global) \fBINTEGER\fR.  The size of the user-input workspace \fIwork\fR, must be at least \fIlwork\fR \(>=(10+2*min(100, \fInrhs\fR))*\fInpcol\fR+4*\fInrhs\fR. If \fIlwork\fR is too small, the minimal acceptable size will be returned in \fIwork\fR(1) and an error code is returned.
.SH OUTPUT PARAMETERS

.TP 10
\fBd\fR, \fBe\fR
.NL
(local). 
.IP
\fBREAL\fR for \fBpspttrsv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdpttrsv\fR
.IP
\fBCOMPLEX\fR for \fBpcpttrsv\fR
.IP
\fBCOMPLEX*16\fR for \fBpzpttrsv\fR.
.IP
On exit, these arrays contain information on the factors of the matrix.
.TP 10
\fBaf\fR
.NL
(local) 
.IP
\fBREAL\fR for \fBpspttrsv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdpttrsv\fR
.IP
\fBCOMPLEX\fR for \fBpcpttrsv\fR
.IP
\fBCOMPLEX*16\fR for \fBpzpttrsv\fR.
.IP
The array \fIaf\fR is of \fBDIMENSION \fR\fIlaf\fR. It contains auxiliary Fillin space. Fillin is created during the factorization routine \fBp?pbtrf\fR and this is stored in \fIaf\fR. If a linear system is to be solved using \fBp?pttrs\fR after the factorization routine, \fIaf\fR must not be altered after the factorization.
.TP 10
\fBb\fR
.NL
On exit, this array contains the local piece of the solutions distributed matrix \fIX\fR.
.TP 10
\fBwork\fR(1)
.NL
On exit, \fIwork\fR(1) contains the minimum value of \fIlwork\fR.
.TP 10
\fBinfo\fR
.NL
(local) \fBINTEGER\fR.
.IP
= 0: successful exit 
.IP
< 0: if the \fIi\fR-th argument is an array and the \fIj\fR-entry had an illegal value,
.IP
then \fIinfo\fR = -(\fIi*\fR100+\fIj\fR),
.IP
if the \fIi\fR-th argument is a scalar and had an illegal value,
.IP
then \fIinfo\fR = -\fIi\fR.
