.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?unmrq 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?unmrq \- Multiplies a complex matrix by the unitary matrix Q of the RQ factorization formed by \fB?gerqf\fR.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall cunmrq\fR(\fIside\fR, \fItrans\fR, \fIm\fR, \fIn\fR, \fIk\fR, \fIa\fR, \fIlda\fR, \fItau\fR, \fIc\fR, \fIldc\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall zunmrq\fR(\fIside\fR, \fItrans\fR, \fIm\fR, \fIn\fR, \fIk\fR, \fIa\fR, \fIlda\fR, \fItau\fR, \fIc\fR, \fIldc\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall unmrq\fR(\fIa\fR, \fItau\fR, \fIc\fR[,\fIside\fR] [,\fItrans\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBside\fR
.NL
\fBCHARACTER*1\fR. Must be either \fB\'L\'\fR or \fB\'R\'\fR. 
.IP
If \fIside\fR = \fB\'L\'\fR, \fIQ\fR or \fIQ\fR**\fIH\fR is applied to \fIC\fR from the left. 
.IP
If \fIside\fR = \fB\'R\'\fR, \fIQ\fR or \fIQ\fR**\fIH\fR is applied to \fIC\fR from the right.
.TP 10
\fBtrans\fR
.NL
\fBCHARACTER*1\fR. Must be either \fB\'N\'\fR or \fB\'C\'\fR. 
.IP
If \fItrans\fR = \fB\'N\'\fR, the routine multiplies \fIC\fR by \fIQ\fR. 
.IP
If \fItrans\fR = \fB\'C\'\fR, the routine multiplies \fIC\fR by \fIQ\fR**\fIH\fR.
.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. The number of rows in the matrix \fIC\fR (\fIm\fR\(>= 0). 
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The number of columns in \fIC\fR (\fIn\fR\(>= 0). 
.TP 10
\fBk\fR
.NL
\fBINTEGER\fR. The number of elementary reflectors whose product defines the matrix \fIQ\fR. Constraints: 
.IP
0 \(<=\fIk\fR\(<=\fIm\fR, if \fIside\fR = \fB\'L\'\fR;
.IP
0 \(<=\fIk\fR\(<=\fIn\fR, if \fIside\fR = \fB\'R\'\fR. 
.TP 10
\fBa\fR, \fBtau\fR, \fBc\fR, \fBwork\fR
.NL
\fBCOMPLEX\fR for \fBcunmrq\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzunmrq\fR. 
.IP
Arrays: \fIa\fR(\fIlda\fR,*), \fItau\fR(*), \fIc\fR(\fIldc\fR,*), \fB\fR\fIwork\fR(\fIlwork\fR).
.IP
On entry, the \fIi\fRth row of \fIa\fR must contain the vector which defines the elementary reflector \fIH\fR(\fIi\fR), for i = 1,2,...,\fIk\fR, as returned by \fBcgerqf\fR/\fBzgerqf\fR in the last \fIk\fR rows of its array argument \fIa\fR. 
.IP
The second dimension of \fIa\fR must be at least max(1, \fIm\fR) if \fIside\fR = \fB\'L\'\fR, and at least max(1, \fIn\fR) if \fIside\fR = \fB\'R\'\fR. 
.IP
\fItau\fR(i) must contain the scalar factor of the elementary reflector \fIH\fR(\fIi\fR), as returned by \fBcgerqf\fR/\fBzgerqf\fR.
.IP
The dimension of \fItau\fR must be at least max(1, \fIk\fR).
.IP
\fIc\fR(\fIldc\fR,*) contains the \fIm\fR-by-\fIn\fR matrix \fIC\fR.
.IP
The second dimension of \fIc\fR must be at least max(1, \fIn\fR)\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR; \fB\fR\fIlda\fR\(>= max(1, \fIk\fR) . 
.TP 10
\fBldc\fR
.NL
\fBINTEGER\fR. The first dimension of \fIc\fR; \fIldc\fR\(>= max(1, \fIm\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. The size of the \fIwork\fR array. Constraints: 
.IP
\fIlwork\fR\(>= max(1, \fIn\fR) if \fIside\fR = \fB\'L\'\fR;
.IP
\fIlwork\fR\(>= max(1, \fIm\fR) if \fIside\fR = \fB\'R\'\fR. 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR array, returns this value as the first entry of the \fIwork\fR array, and no error message related to \fIlwork\fR is issued by \fBxerbla\fR.
.SH OUTPUT PARAMETERS

.TP 10
\fBc\fR
.NL
Overwritten by the product \fIQ*C\fR, \fIQ\fR**\fIH\fR\fI*C\fR, \fIC*Q\fR, or \fIC*Q\fR**\fIH\fR (as specified by \fIside\fR and \fItrans\fR).
.TP 10
\fBwork\fR(1)
.NL
If \fIinfo\fR = 0, on exit \fIwork\fR(1) contains the minimum value of \fIlwork\fR required for optimum performance. Use this \fIlwork\fR for subsequent runs.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBunmrq\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIk,m\fR).
.TP 10
\fBtau\fR
.NL
Holds the vector of length (\fIk\fR).
.TP 10
\fBc\fR
.NL
Holds the matrix \fIC\fR of size (\fIm,n\fR).
.TP 10
\fBside\fR
.NL
Must be \fB\'L\'\fR or \fB\'R\'\fR. The default value is \fB\'L\'\fR.
.TP 10
\fBtrans\fR
.NL
Must be \fB\'N\'\fR or \fB\'C\'\fR. The default value is \fB\'N\'\fR.
