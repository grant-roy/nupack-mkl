.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH iparmq 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
iparmq \- Environmental enquiry function which returns values for tuning algorithmic performance.
.SH SYNOPSIS
.PP
\fIvalue\fR= \fBiparmq\fR( \fIispec\fR, \fIname\fR, \fIopts\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIlwork\fR)
.SH INPUT PARAMETERS

.TP 10
\fBispec\fR
.NL
\fBINTEGER\fR. 
.IP
Specifies the parameter to be returned as the value of \fBiparmq\fR:
.IP
= 12: (\fBinmin\fR)  Matrices of order \fBnmin\fR or less are sent directly to \fB?lahqr\fR, the implicit double shift QR algorithm.   \fBnmin\fR must be at least 11.
.IP
= 13: (\fBinwin\fR)   Size of the deflation window. This is best set greater than or equal to the number of simultaneous shifts \fBns\fR. Larger matrices benefit from larger deflation windows. 
.IP
= 14: (\fBinibl\fR)   Determines when to stop nibbling and invest in an (expensive) multi-shift QR sweep. If the aggressive early deflation subroutine finds \fBld\fR converged eigenvalues from an order           \fBnw\fR deflation window and \fBld\fR>(\fBnw\fR*\fBnibble\fR)/100, then the next QR sweep is skipped and early deflation is applied immediately to the remaining active diagonal block.  Setting\fBiparmq\fR(\fBispec\fR=14)=0 causes \fBTTQRE\fR to skip a multi-shift QR sweep whenever early deflation finds a converged eigenvalue. Setting \fB iparmq\fR(\fBispec\fR=14) greater than or equal to 100 prevents \fBTTQRE\fR from skipping a multi-shift QR sweep.
.IP
= 15: (\fBnshfts\fR) The number of simultaneous shifts in a multi-shift QR iteration.
.IP
= 16: (\fBiacc22\fR) \fBiparmq\fR is set to 0, 1 or 2 with the following meanings.
.IP
0:   During the multi-shift QR sweep, \fB?laqr5\fR does not accumulate reflections and does not use matrix-matrix multiply to update the far-from-diagonal matrix entries.
.IP
1:   During the multi-shift QR sweep, \fB?laqr5\fR and/or \fB?laqr3\fR accumulates reflections and uses matrix-matrix multiply to update the far-from-diagonal matrix entries.
.IP
2:   During the multi-shift QR sweep, \fB?laqr5\fR accumulates reflections and takes advantage of 2-by-2 block structure during matrix-matrix multiplies.
.IP
(If \fB?trrm\fR is slower than \fB?gemm\fR, then \fBiparmq\fR(\fBispec\fR=16)=1 may be more efficient than \fBiparmq\fR(\fBispec\fR=16)=2 despite the greater level of arithmetic work implied by the latter choice.)
.TP 10
\fBname\fR
.NL
\fBCHARACTER*(*)\fR. The name of the calling subroutine. 
.TP 10
\fBopts\fR
.NL
\fBCHARACTER*(*)\fR. This is a concatenation of the string arguments to \fBTTQRE\fR.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. \fBn\fR is the order of the Hessenberg matrix \fIH\fR.
.TP 10
\fBilo\fR, \fBihi\fR
.NL
\fBINTEGER\fR. 
.IP
It is assumed that \fIH\fR is already upper triangular in rows and columns 1:\fBilo\fR-1 and \fBihi\fR+1:\fBn\fR.
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR.
.IP
The amount of workspace available.
.SH OUTPUT PARAMETERS

.TP 10
\fBvalue\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIvalue\fR\(>= 0: the value of the parameter specified by \fIiparmq\fR;
.IP
If \fIvalue\fR = \fB-k\fR\fI\fR < 0: the \fBk\fR-th argument had an illegal value.
