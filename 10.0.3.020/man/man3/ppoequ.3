.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?poequ 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?poequ \- Computes row and column scaling factors intended to equilibrate a symmetric (Hermitian) positive definite distributed matrix and reduce its condition number.
.SH SYNOPSIS
.PP
\fBcall pspoequ\fR(\fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIsr\fR, \fIsc\fR, \fIscond\fR, \fIamax\fR, \fIinfo\fR)
.PP
\fBcall pdpoequ\fR(\fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIsr\fR, \fIsc\fR, \fIscond\fR, \fIamax\fR, \fIinfo\fR)
.PP
\fBcall pcpoequ\fR(\fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIsr\fR, \fIsc\fR, \fIscond\fR, \fIamax\fR, \fIinfo\fR)
.PP
\fBcall pzpoequ\fR(\fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIsr\fR, \fIsc\fR, \fIscond\fR, \fIamax\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. The number of rows  and columns to be operated on, that is, the order of the distributed submatrix sub(\fIA\fR) (\fIn\fR\(>=0). 
.TP 10
\fBa\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpspoequ\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdpoequ\fR
.IP
\fBCOMPLEX\fR for \fBpcpoequ\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzpoequ\fR. 
.IP
Pointer into the local memory to an array of local dimension \fIa\fR(\fIlld\(ula\fR,\fILOCc\fR(\fIja\fR+\fIn\fR-1)).
.IP
The array \fIa\fR contains the \fIn\fR-by-\fIn\fR symmetric/Hermitian positive definite distributed matrix sub(\fIA\fR) whose scaling factors are to be computed. Only the diagonal elements of sub(\fIA\fR) are referenced.
.TP 10
\fBia\fR, \fBja\fR
.NL
(global) \fBINTEGER\fR.  The row and column indices in the global array \fIA\fR indicating the first row and the first column of the submatrix sub(\fIA\fR), respectively.
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIA\fR.
.SH OUTPUT PARAMETERS

.TP 10
\fBsr\fR, \fBsc\fR
.NL
(local) \fB\fR
.IP
\fBREAL\fR for single precision flavors;
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
Arrays, dimension \fILOCr\fR(\fIm\(ula)\fR and \fILOCc\fR(\fIn\(ula)\fR, respectively. 
.IP
If \fIinfo\fR = 0, the array \fIsr\fR(\fIia:ia+n-1\fR) contains the row scale factors for sub(\fIA\fR). \fIsr\fR is aligned with the distributed matrix \fIA\fR, and replicated across every process column. \fIsr\fR is tied to the distributed matrix \fIA\fR. 
.IP
If \fIinfo\fR = 0, the array \fIsc\fR (\fIja:ja+n-1\fR) contains the column scale factors for sub(\fIA\fR). \fIsc\fR is aligned with the distributed matrix \fIA\fR, and replicated down every process row. \fIsc\fR is tied to the distributed matrix \fIA\fR.
.TP 10
\fBscond\fR
.NL
(global) \fB\fR
.IP
\fBREAL\fR for single precision flavors;
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
If \fIinfo\fR = 0, \fIscond\fR contains the ratio of the smallest \fIsr\fR(i) ( or \fIsc\fR(j)) to the largest \fIsr\fR(i) ( or \fIsc\fR(j)), with 
.IP
\fIia\fR\(<=i\(<=\fIia+n-1\fR and \fIja\fR\(<=j\(<=\fIja+n-1\fR. 
.IP
If \fIscond\fR\(>= 0.1 and \fIamax\fR is neither too large nor too small, it is not worth scaling by \fIsr\fR ( or \fIsc\fR ). 
.TP 10
\fBamax\fR
.NL
(global) 
.IP
\fBREAL\fR for single precision flavors;
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
Absolute value of the largest matrix element. If \fIamax\fR is very close to overflow or very close to underflow, the matrix should be scaled.
.TP 10
\fBinfo\fR
.NL
(global) \fBINTEGER\fR. 
.IP
If \fIinfo\fR=0, the execution is successful.
.IP
\fIinfo\fR < 0: 
.IP
If the \fIi\fR-th argument is an array and the \fIj\fR-th entry had an illegal value, then \fIinfo\fR = -(\fIi\fR*100+\fIj\fR); if the \fIi-\fRth argument is a  scalar and had an illegal value, then \fIinfo\fR = \fI-i\fR.
.IP
\fIinfo\fR> 0: 
.IP
If \fIinfo\fR = \fIk\fR, the \fIk\fR-th diagonal entry of sub(\fIA\fR) is nonpositive.
.PP
 
