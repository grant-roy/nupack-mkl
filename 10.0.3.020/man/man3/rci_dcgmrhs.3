.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH dcgmrhs 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
dcgmrhs \- Computes the approximate solution vectors.
.SH SYNOPSIS
.PP
\fBdcgmrhs\fR(\fIn\fR, \fIx\fR, \fInrhs\fR, \fIb\fR, \fIRCI\(ulrequest\fR, \fIipar\fR, \fIdpar\fR, \fItmp\fR)
.SH INPUT PARAMETERS

.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. Contains the size of the problem, and the sizes of arrays \fIx\fR and \fIb\fR.
.TP 10
\fBx\fR
.NL
\fBDOUBLE PRECISION\fR matrix of size \fIn\fR-by-\fBnrhs\fR. Contains the initial approximation to the solution vectors.
.TP 10
\fBnrhs\fR
.NL
\fBINTEGER\fR. This parameter sets the number of right-hand sides.
.TP 10
\fBb\fR
.NL
\fBDOUBLE PRECISION\fR matrix of size (\fBnrhs\fR,\fIn\fR). Contains the right-hand side vectors.
.TP 10
\fBtmp\fR
.NL
\fBDOUBLE PRECISION\fR array of size (\fIn\fR, 3+\fBnrhs\fR). Refer to the CG Common Parameters.
.SH OUTPUT PARAMETERS

.TP 10
\fBRCI\(ulrequest\fR
.NL
\fBINTEGER\fR. Informs about result of work of theroutine.
.TP 10
\fBx\fR
.NL
\fBDOUBLE PRECISION\fR matrix of size \fIn\fR-by-\fBnrhs\fR. Contains the updated approximation to the solution vectors.
.TP 10
\fBipar\fR
.NL
\fBINTEGER\fR array of size \fB(128+2*\fBnrhs\fR)\fR. Refer to the CG Common Parameters.
.TP 10
\fBdpar\fR
.NL
\fBDOUBLE PRECISION\fR array of size \fB(128+2*\fBnrhs\fR)\fR. Refer to the CG Common Parameters.
.TP 10
\fBtmp\fR
.NL
\fBDOUBLE PRECISION\fR array of size (\fIn\fR, 3+\fBnrhs\fR). Refer to the CG Common Parameters.
.SH RETURN VALUES
.PP

.TP 10
\fBRCI\(ulrequest\fR=0
.NL
The routine completes task normally, the solution is found and stored in the matrix \fIx\fR. This occurs only if the stopping tests are fully automatic. For the user defined stopping tests, see the comments to the \fBRCI\(ulrequest\fR\fB= 2\fR.
.TP 10
\fBRCI\(ulrequest\fR=-1
.NL
The routine is interrupted because the maximal number of iterations is reached, but the relative stopping criterion is not satisfied. This situation occurs only if both tests are requested by the user.
.TP 10
\fBRCI\(ulrequest\fR=-2
.NL
The routine is interrupted because attempt to divide by zero occurs. This happens if the matrix is (almost) non-positive definite.
.TP 10
\fBRCI\(ulrequest\fR=- 10
.NL
The routine is interrupted because the residual norm is invalid. Probably, the value \fBdpar\fR\fB(6)\fR was altered outside of the routine, or the routine\fBdcgmrhs\(ulcheck\fR was not called.
.TP 10
\fBRCI\(ulrequest\fR=-11
.NL
The routine is interrupted because it enters the infinite cycle. Probably, the values \fBipar\fR\fB(8)\fR, \fBipar\fR\fB(9)\fR, \fBipar\fR\fB(10)\fR were altered outside of the routine, or the routine\fBdcgmrhs\(ulcheck\fR was not called.
.TP 10
\fBRCI\(ulrequest\fR= 1
.NL
Requests the user to multiply the matrix by \fItmp\fR\fB(1:\fBn\fR,1)\fR, put the result in the \fItmp\fR\fB(1:\fBn\fR,2)\fR, and return the control back to the routine \fBdcgmrhs\fR.
.TP 10
\fBRCI\(ulrequest\fR= 2
.NL
Requests the user to perform the stopping tests. If they fail, the control must be returned back to the routine\fBdcgmrhs\fR. Otherwise, the solution is found and stored in the matrix \fIx\fR.
.TP 10
\fBRCI\(ulrequest\fR= 3
.NL
Requests the user to apply the preconditioner to \fBtmp\fR(:,3+\fBipar\fR\fB(3)\fR), put the result in \fBtmp\fR(:,3), and returnthe control back to the routine \fBdcgmrhs\fR.
