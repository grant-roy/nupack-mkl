.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?sygvx 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?sygvx \- Computes selected eigenvalues and, optionally, eigenvectors of a real generalized symmetric definite eigenproblem.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall ssygvx\fR(\fIitype\fR, \fIjobz\fR, \fIrange\fR, \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIvl\fR, \fIvu\fR, \fIil\fR, \fIiu\fR, \fIabstol\fR, \fIm\fR, \fIw\fR, \fIz\fR, \fIldz\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIifail\fR, \fIinfo\fR)
.PP
\fBcall dsygvx\fR(\fIitype\fR, \fIjobz\fR, \fIrange\fR, \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIvl\fR, \fIvu\fR, \fIil\fR, \fIiu\fR, \fIabstol\fR, \fIm\fR, \fIw\fR, \fIz\fR, \fIldz\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIifail\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall sygvx\fR(\fIa\fR, \fIb\fR, \fIw\fR[,\fIitype\fR] [,\fIuplo\fR] [,\fIz\fR] [,\fIvl\fR] [,\fIvu\fR] [,\fIil\fR] [,\fIiu\fR] [,\fIm\fR] [,\fIifail\fR] [,\fIabstol\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBitype\fR
.NL
\fBINTEGER\fR. Must be 1 or 2 or 3. Specifies the problem type to be solved: 
.IP
if \fIitype\fR = 1, the problem type is \fIA*x\fR = \fIlambda\fR\fI*B*x\fR; 
.IP
if \fIitype\fR = 2, the problem type is \fIA\fR*\fIB\fR*\fIx\fR = \fIlambda\fR*\fIx\fR; 
.IP
if \fIitype\fR = 3, the problem type is \fIB*A\fR*x = \fIlambda\fR*\fIx\fR.
.TP 10
\fBjobz\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'N\'\fR or \fB\'V\'\fR. 
.IP
If \fIjobz\fR = \fB\'N\'\fR, then compute eigenvalues only. 
.IP
If \fIjobz\fR = \fB\'V\'\fR, then compute eigenvalues and eigenvectors.
.TP 10
\fBrange\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'A\'\fR or \fB\'V\'\fR or \fB\'I\'\fR.
.IP
If \fIrange\fR = \fB\'A\'\fR, the routine computes all eigenvalues. 
.IP
If \fIrange\fR = \fB\'V\'\fR, the routine computes eigenvalues \fIlambda\fR(i) in the half-open interval: 
.IP
\fIvl\fR<\fIlambda\fR(i)\(<=\fIvu\fR. 
.IP
If \fIrange\fR = \fB\'I\'\fR, the routine computes eigenvalues with indices \fIil\fR to \fIiu\fR.
.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'U\'\fR or \fB\'L\'\fR. 
.IP
If \fIuplo\fR = \fB\'U\'\fR, arrays \fIa\fR and \fIb\fR store the upper triangles of \fIA\fR and \fIB\fR;
.IP
If \fIuplo\fR = \fB\'L\'\fR, arrays \fIa\fR and \fIb\fR store the lower triangles of \fIA\fR and \fIB\fR.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrices \fIA\fR and \fIB\fR (\fIn\fR\(>= 0). 
.TP 10
\fBa\fR, \fBb\fR, \fBwork\fR
.NL
\fBREAL\fR for \fBssygvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsygvx\fR. 
.IP
Arrays: 
.IP
\fIa\fR(\fIlda\fR,*) contains the upper or lower triangle of the symmetric matrix \fIA\fR, as specified by \fIuplo\fR. 
.IP
The second dimension of \fIa\fR must be at least max(1, \fIn\fR).
.IP
\fIb\fR(\fIldb\fR,*) contains the upper or lower triangle of the symmetric positive definite matrix \fIB\fR, as specified by \fIuplo\fR. 
.IP
The second dimension of \fIb\fR must be at least max(1, \fIn\fR).
.IP
\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR; at least max(1, \fIn\fR).
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR. The first dimension of \fIb\fR; at least max(1, \fIn\fR).
.TP 10
\fBvl\fR, \fBvu\fR
.NL
\fBREAL\fR for \fBssygvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsygvx\fR. 
.IP
If \fIrange\fR = \fB\'V\'\fR, the lower and upper bounds of the interval to be searched for eigenvalues. 
.IP
Constraint: \fIvl\fR< \fIvu\fR.
.IP
If \fIrange\fR = \fB\'A\'\fR or \fB\'I\'\fR, \fIvl\fR and \fIvu\fR are not referenced.
.TP 10
\fBil\fR, \fBiu\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIrange\fR = \fB\'I\'\fR, the indices in ascending order of the smallest and largest eigenvalues to be returned. 
.IP
Constraint: 1 \(<=\fIil\fR\(<=\fIiu\fR\(<=\fIn\fR, if \fIn\fR > 0; \fIil\fR=1 and \fIiu\fR=0
.IP
if \fIn\fR = 0.
.IP
If \fIrange\fR = \fB\'A\'\fR or \fB\'V\'\fR, \fIil\fR and \fIiu\fR are not referenced.
.TP 10
\fBabstol\fR
.NL
\fBREAL\fR for \fBssygvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsygvx\fR. The absolute error tolerance for the eigenvalues. 
.TP 10
\fBldz\fR
.NL
\fBINTEGER\fR. The leading dimension of the output array \fIz\fR. Constraints:
.IP
\fIldz\fR\(>= 1; if \fIjobz\fR = \fB\'V\'\fR, \fIldz\fR\(>= max(1, \fIn\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIwork\fR; 
.IP
\fIlwork\fR < max(1, 8\fIn\fR). 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR array, returns this value as the first entry of the \fIwork\fR array, and no error message related to \fIlwork\fR is issued by \fBxerbla\fR.
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. 
.IP
Workspace array, \fBDIMENSION\fR at least max(1, 5\fIn\fR). 
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit, the upper triangle (if \fIuplo\fR = \fB\'U\'\fR) or the lower triangle (if \fIuplo\fR = \fB\'L\'\fR) of \fIA\fR, including the diagonal, is overwritten.
.TP 10
\fBb\fR
.NL
On exit, if \fIinfo\fR\(<=\fIn\fR, the part of \fIb\fR containing the matrix is overwritten by the triangular factor \fIU\fR or \fIL\fR from the Cholesky factorization \fIB\fR = \fIU\fR**\fIT\fR\fI*U\fR or \fIB\fR = \fIL*\fR\fIL\fR**\fIT\fR.
.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. The total number of eigenvalues found, 
.IP
0 \(<=\fIm\fR\(<=\fIn\fR. If \fIrange\fR = \fB\'A\'\fR, \fIm\fR = \fIn\fR, and if \fIrange\fR = \fB\'I\'\fR, 
.IP
\fIm\fR = \fIiu\fR-\fIil\fR+1.
.TP 10
\fBw\fR, \fBz\fR
.NL
\fBREAL\fR for \fBssygvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsygvx\fR. 
.IP
Arrays:
.IP
\fIw\fR(*), \fBDIMENSION\fR at least max(1, \fIn\fR). 
.IP
The first \fIm\fR elements of \fIw\fR contain the selected eigenvalues in ascending order. 
.IP
\fBz\fR(\fIldz\fR,*). 
.IP
The second dimension of \fIz\fR must be at least max(1, \fIm\fR). 
.IP
If \fIjobz\fR = \fB\'V\'\fR, then if \fIinfo\fR = 0, the first \fIm\fR columns of \fIz\fR contain the orthonormal eigenvectors of the matrix \fIA\fR corresponding to the selected eigenvalues, with the \fIi\fR-th column of \fIz\fR holding the eigenvector associated with \fIw\fR(\fIi\fR). The eigenvectors are normalized as follows:
.IP
if \fIitype\fR = 1 or 2, \fIZ\fR**\fIT\fR*\fIB\fR*\fIZ\fR = I; 
.IP
if \fIitype\fR = 3, \fIZ\fR**\fIT\fR*inv(\fIB\fR)*\fIZ\fR = I;
.IP
If \fIjobz\fR = \fB\'N\'\fR, then \fIz\fR is not referenced. 
.IP
If an eigenvector fails to converge, then that column of \fIz\fR contains the latest approximation to the eigenvector, and the index of the eigenvector is returned in \fIifail\fR. 
.IP
Note: you must ensure that at least max(1,\fIm\fR) columns are supplied in the array \fIz\fR; if \fIrange\fR = \fB\'V\'\fR, the exact value of \fIm\fR is not known in advance and an upper bound must be used.
.TP 10
\fBwork(1)\fR
.NL
On exit, if \fIinfo\fR = 0, then \fIwork(1)\fR returns the required minimal size of \fIlwork\fR.
.TP 10
\fBifail\fR
.NL
\fBINTEGER\fR. 
.IP
Array, \fBDIMENSION\fR at least max(1, \fIn\fR). 
.IP
If \fIjobz\fR = \fB\'V\'\fR, then if \fIinfo\fR = 0, the first \fIm\fR elements of \fIifail\fR are zero; if \fIinfo\fR > 0, the \fIifail\fR contains the indices of the eigenvectors that failed to converge. 
.IP
If \fIjobz\fR = \fB\'N\'\fR, then \fIifail\fR is not referenced. 
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fRth argument had an illegal value. 
.IP
If \fIinfo\fR > 0, \fBspotrf\fR/\fBdpotrf\fR and \fBssyevx\fR/\fBdsyevx\fR returned an error code:
.IP
If \fIinfo\fR = \fIi\fR\(<=\fIn\fR, \fBssyevx\fR/\fBdsyevx\fR failed to converge, and \fIi\fR eigenvectors failed to converge. Their indices are stored in the array \fIifail\fR;
.IP
If \fIinfo\fR = \fIn\fR + \fIi\fR, for 1 \(<=\fIi\fR\(<=\fIn\fR, then the leading minor of order \fIi\fR of \fIB\fR is not positive-definite. The factorization of \fIB\fR could not be completed and no eigenvalues or eigenvectors were computed.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBsygvx\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBb\fR
.NL
Holds the matrix \fIB\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBw\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBz\fR
.NL
Holds the matrix \fIZ\fR of size (\fIn\fR, \fIn\fR), where the values \fIn\fR and \fIm\fR are significant.
.TP 10
\fBifail\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBitype\fR
.NL
Must be 1, 2, or 3. The default value is 1.
.TP 10
\fBuplo\fR
.NL
Must be \fB\'U\'\fR or \fB\'L\'\fR. The default value is \fB\'U\'\fR.
.TP 10
\fBvl\fR
.NL
Default value for this element is \fIvl\fR = \fB-HUGE\fR(\fIvl\fR).
.TP 10
\fBvu\fR
.NL
Default value for this element is \fIvu\fR = \fBHUGE\fR(\fIvl\fR).
.TP 10
\fBil\fR
.NL
Default value for this argument is \fIil\fR = 1.
.TP 10
\fBiu\fR
.NL
Default value for this argument is \fIiu\fR = \fIn\fR.
.TP 10
\fBabstol\fR
.NL
Default value for this element is \fIabstol\fR = \fB0.0\(ulWP\fR.
.TP 10
\fBjobz\fR
.NL
Restored based on the presence of the argument \fIz\fR as follows: 
.IP
\fIjobz\fR = \fB\'V\'\fR, if \fIz\fR is present, 
.IP
\fIjobz\fR = \fB\'N\'\fR, if \fIz\fR is omitted. 
.IP
Note that there will be an error condition if \fIifail\fR is present and \fIz\fR is omitted.
.TP 10
\fBrange\fR
.NL
Restored based on the presence of arguments \fIvl\fR, \fIvu\fR, \fIil\fR, \fIiu\fR as follows: 
.IP
\fIrange\fR = \fB\'V\'\fR, if one of or both \fIvl\fR and \fIvu\fR are present, 
.IP
\fIrange\fR = \fB\'I\'\fR, if one of or both \fIil\fR and \fIiu\fR are present, 
.IP
\fIrange\fR = \fB\'A\'\fR, if none of \fIvl\fR, \fIvu\fR, \fIil\fR, \fIiu\fR is present, 
.IP
Note that there will be an error condition if one of or both \fIvl\fR and \fIvu\fR are present and at the same time one of or both \fIil\fR and \fIiu\fR are present.
