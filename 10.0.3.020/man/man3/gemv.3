.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?gemv 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?gemv \- Computes a matrix-vector product using a general matrix
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall sgemv\fR( \fItrans\fR, \fIm\fR, \fIn\fR, \fIalpha\fR, \fIa\fR, \fIlda\fR, \fIx\fR, \fIincx\fR, \fIbeta\fR, \fIy\fR, \fIincy\fR)
.PP
\fBcall dgemv\fR( \fItrans\fR, \fIm\fR, \fIn\fR, \fIalpha\fR, \fIa\fR, \fIlda\fR, \fIx\fR, \fIincx\fR, \fIbeta\fR, \fIy\fR, \fIincy\fR)
.PP
\fBcall cgemv\fR( \fItrans\fR, \fIm\fR, \fIn\fR, \fIalpha\fR, \fIa\fR, \fIlda\fR, \fIx\fR, \fIincx\fR, \fIbeta\fR, \fIy\fR, \fIincy\fR)
.PP
\fBcall zgemv\fR( \fItrans\fR, \fIm\fR, \fIn\fR, \fIalpha\fR, \fIa\fR, \fIlda\fR, \fIx\fR, \fIincx\fR, \fIbeta\fR, \fIy\fR, \fIincy\fR)
.PP
.B Fortran 95
.PP
\fBcall gemv\fR( \fIa\fR, \fIx\fR, \fIy\fR[,\fIalpha\fR][,\fIbeta\fR] [,\fItrans\fR] )
.SH INPUT PARAMETERS

.TP 10
\fBtrans\fR
.NL
\fBCHARACTER*1\fR. Specifies the operation:
.IP
if \fBtrans\fR= \'N\' or \'n\', then \fIy\fR := \fIalpha\fR*\fIA\fR*\fIx\fR + \fIbeta\fR*\fIy\fR;
.IP
if \fBtrans\fR= \'T\' or \'t\', then \fIy\fR := \fIalpha\fR*\fIA\fR\'*\fIx\fR + \fIbeta\fR*\fIy\fR;
.IP
if \fBtrans\fR= \'C\' or \'c\', then \fIy\fR := \fIalpha\fR *conjg(\fIA\fR\')*\fIx\fR + \fIbeta\fR*\fIy\fR.
.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. Specifies the number of rows of the matrix \fIA\fR. The value of \fI\fR\fIm\fR must be at least zero.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. Specifies the number of columns of the matrix \fIA\fR. The value of \fIn\fR must be at least zero.
.TP 10
\fBalpha\fR
.NL
\fBREAL\fR for \fBsgemv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgemv\fR
.IP
\fBCOMPLEX\fR for \fBcgemv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgemv\fR
.IP
Specifies the scalar \fIalpha\fR.
.TP 10
\fBa\fR
.NL
\fBREAL\fR for \fBsgemv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgemv\fR
.IP
\fBCOMPLEX\fR for \fBcgemv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgemv\fR
.IP
Array, \fBDIMENSION\fR(\fIlda\fR, \fIn\fR). Before entry, the leading \fIm\fR-by-\fIn\fR part of the array \fIa\fR must contain the matrix of coefficients.
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. Specifies the first dimension of \fIa\fR as declared in the calling (sub)program. The value of \fIlda\fR must be at least max(1, \fIm\fR).
.TP 10
\fBx\fR
.NL
\fBREAL\fR for \fBsgemv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgemv\fR
.IP
\fBCOMPLEX\fR for \fBcgemv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgemv\fR
.IP
Array, \fBDIMENSION\fR at least (1+(\fIn\fR-1)*abs(\fIincx\fR)) when \fItrans\fR = \'N\' or \fB\'n\'\fR and at least (1+(\fIm\fR - 1)*abs(\fIincx\fR)) otherwise. Before entry, the incremented array \fIx\fR must contain the vector \fIx\fR.
.TP 10
\fBincx\fR
.NL
\fBINTEGER\fR. Specifies the increment for the elements of \fIx\fR.
.IP
The value of \fIincx\fR must not be zero.
.TP 10
\fBbeta\fR
.NL
\fBREAL\fR for \fBsgemv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgemv\fR
.IP
\fBCOMPLEX\fR for \fBcgemv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgemv\fR
.IP
Specifies the scalar \fIbeta\fR. When \fIbeta\fR is set to zero, then \fIy\fR need not be set on input.
.TP 10
\fBy\fR
.NL
\fBREAL\fR for \fBsgemv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgemv\fR
.IP
\fBCOMPLEX\fR for \fBcgemv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgemv\fR
.IP
Array, \fBDIMENSION\fR at least (1 +(\fIm\fR - 1)*abs(\fIincy\fR)) when \fItrans\fR = \'N\' or \fB\'n\'\fR and at least (1 +(\fIn\fR - 1)*abs(\fIincy\fR)) otherwise. Before entry with non-zero \fIbeta\fR, the incremented array \fIy\fR must contain the vector \fIy\fR. 
.TP 10
\fBincy\fR
.NL
\fBINTEGER\fR. Specifies the increment for the elements of \fIy\fR.
.IP
The value of \fIincy\fR must not be zero. 
.SH OUTPUT PARAMETERS

.TP 10
\fBy\fR
.NL
Updated vector \fIy\fR.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77   counterparts. For general conventions applied to skip redundant or reconstructible arguments, see Fortran 95 Interface Conventions.
.PP
Specific details for the routine \fBgemv\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fRof size (\fIm\fR,\fIn\fR).
.TP 10
\fBx\fR
.NL
Holds the vector of length (\fIrx\fR) where \fIrx\fR = \fIn\fR if \fItrans\fR = \fB\'N\'\fR,\fI rx\fR = \fIm\fR otherwise.
.TP 10
\fBy\fR
.NL
Holds the vector of length (\fIry\fR) where \fIry\fR = \fIm\fR if \fItrans\fR = \fB\'N\'\fR,\fI ry\fR = \fIn\fR otherwise.
.TP 10
\fBtrans\fR
.NL
Must be \fB\'N\'\fR, \fB\'C\'\fR, or \fB\'T\'\fR.
.IP
The default value is \fB\'N\'\fR.
.TP 10
\fBalpha\fR
.NL
The default value is 1.
.TP 10
\fBbeta\fR
.NL
The default value is 1.
