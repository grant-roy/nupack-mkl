.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?gepss 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?gepss \- Solves a system of interval linear equations by a solution partitioning method.
.SH SYNOPSIS
.PP
\fBcall \fR\fBsigepss\fR( \fItrans\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIcmpt\fR, \fImode\fR, \fIestm\fR, \fIepsilon\fR, \fInits\fR, \fIinfo\fR)
.PP
\fBcall \fR\fBdigepss\fR( \fItrans\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIcmpt\fR, \fImode\fR, \fIestm\fR, \fIepsilon\fR, \fInits\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBtrans\fR
.NL
\fBCHARACTER(1)\fR. Must be one of \fB\'N\'\fR, \fB\'T\'\fR, \fB\'C\'\fR, \fB\'n\'\fR, \fB\'t\'\fR, or \fB\'c\'\fR.
.IP
Indicates the form of the equations system:
.IP
If \fItrans\fR = \fB\'N\'\fR or \fB\'n\'\fR, then \fIA*X\fR\fB = \fR \fIB\fR is solved for X.
.IP
If \fItrans\fR = \fB\'T\'\fR or \fB\'C\'\fR or \fB\'t\'\fRor \fB\'c\'\fR, then \fIA\fR**\fIT\fR*\fIX\fR\fB = \fR \fIB\fR is solved for \fIX\fR.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of \fIA\fR, the number of rows in \fIB\fR (\fIn\fR\(>=0).
.TP 10
\fBa\fR, \fBb\fR
.NL
\fBREAL\fR for \fBsigepss\fR.
.IP
\fBDOUBLE PRECISION\fR for \fBdigepss\fR.
.IP
Arrays: \fIa\fR (\fIlda\fR,*), \fIb\fR (\fIldb\fR).
.IP
The array \fIa\fR contains the matrix \fIA\fR.
.IP
The array \fIb\fR contains the vector \fIB\fR of the right-hand sides for the system of equations to be solved.
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR, \fIlda\fR\(>= max(1, \fIn\fR).
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR. The first dimension of b, \fIldb\fR\(>= max(1, \fIn\fR).
.TP 10
\fBcmpt\fR
.NL
\fBINTEGER\fR. The number of the component of the solution set to be estimated.
.TP 10
\fBmode\fR
.NL
\fBCHARACTER(1)\fR. Must be either \fB\'L\'\fR or \fB\'U\'\fR(or the corresponding lowercase letters).
.IP
Indicates how to estimate the solution set along the coordinate direction specified by the parameter \fIcmpt\fR:
.IP
if \fImode\fR = \fB\'L\'\fR or \fB\'l\'\fR, then the routine computes the lower estimate of the solution set over the \fIcmpt\fR-th coordinate;
.IP
if \fImode\fR = \fB\'U\'\fR or \fB\'u\'\fR, then the routine computes the upper estimate of the solution set over the \fIcmpt\fR-th coordinate.
.TP 10
\fBepsilon\fR
.NL
\fBREAL\fR for \fBsigepss\fR.
.IP
\fBDOUBLE PRECISION\fR for \fBdigepss\fR.
.IP
The prescribed accuracy of the esimate for the solution set.
.TP 10
\fBnits\fR
.NL
\fBINTEGER\fR. The number of iterations of the PSS algorithm alloted, \fInits\fR\(>=0.
.SH OUTPUT PARAMETERS

.TP 10
\fBestm\fR
.NL
\fBREAL\fR for \fBsigepss\fR.
.IP
\fBDOUBLE PRECISION\fR for \fBdigepss\fR.
.IP
Estimate of the solution set along the coordinate axis with the number \fIcmpt\fR. if \fImode\fR = \fB\'L\'\fR, then \fIestm\fR represents the lower estimate of the solution set. if \fImode\fR = \fB\'U\'\fR, then \fIestm\fR is equal to the upper estimate of the solution set.
.TP 10
\fBepsilon\fR
.NL
The actual precision of the estimate \fBestm\fR.
.TP 10
\fBnits\fR
.NL
\fBINTEGER\fR. The number of iterations that the algorithm actually executed.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful.
.IP
If \fIinfo\fR = \fIi\fR \(>= 0, the execution is not successful.
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter has an illegal value and the routine outputs the corresponding message.
.PP
Consider a sample problem that requires computing a sharp lower estimate (to within the accuracy of, say, \fB1.E-4\fR), along the first coordinate direction, of the solution set to the interval linear system 
.PP
The problem can be solved by the following Fortran code that implements parameter partitioning method (PPS-method) and uses \fBsigepps\fR routine:
.PP
---------------------------------------------------------------------------------------------- 
.br
. . . . . .
.br
.br
USE INTERVAL\(ulARITHMETIC
.br
. . . . . .
.br
INTEGER, PARAMETER          :: LDA = 3, LDB = 3
.br
INTEGER          :: NITS, CMPT, INFO, I, J
.br
CHARACTER(1)          :: MODE = \'L\'
.br
REAL(4)          :: EPS, ESTM
.br
TYPE(S\(ulINTERVAL)          :: A(3,3), B(3)
.br
. . . . . .
.br
DO I = 1, 3
.br
DO J = 1, 3
.br
IF( I/=J ) THEN
.br
A(I,J) = SINTERVAL(0.,2.)
.br
ELSE
.br
A(I,J) = SINTERVAL(3.5)
.br
END IF
.br
B(I) = SINTERVAL(-1.,1.)
.br
END DO
.br
END DO
.br
CMPT = 1
.br
NITS = 100
.br
EPS= 1.E-4
.br
. . . . . .
.br
CALL SIGEPPS( \'n\', 3, A, LDA, B, LDB, CMPT, MODE, ESTM, EPS, NITS, INFO )
.PP
----------------------------------------------------------------------------------------------
.PP
To guarantee the completion of the algorithm, the value of the parameter \fBNITS\fR is set equal to 100 (iterations), which is enough for the above specific example. Note that assigning single-precision intervals to the entries of the matrix \fIA\fR and right-hand side vector \fIB\fR is carried out by \fBSINTERVAL\fR function supplied by \fBINTERVAL\(ulARITHMETIC\fR module.
