.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?hpevd 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?hpevd \- Uses divide and conquer algorithm to compute all eigenvalues and (optionally) all eigenvectors of a complex Hermitian matrix held in packed storage.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall chpevd\fR(\fIjob\fRz, \fIuplo\fR, \fIn\fR, \fIap\fR, \fIw\fR, \fIz\fR, \fIldz\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIlrwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
\fBcall zhpevd\fR(\fIjobz\fR, \fIuplo\fR, \fIn\fR, \fIap\fR, \fIw\fR, \fIz\fR, \fIldz\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIlrwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall hpevd\fR(\fIa\fR, \fIw\fR[,\fIuplo\fR] [,\fIz\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBjobz\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'N\'\fR or \fB\'V\'\fR. 
.IP
If \fIjobz\fR = \fB\'N\'\fR, then only eigenvalues are computed. 
.IP
If \fIjobz\fR = \fB\'V\'\fR, then eigenvalues and eigenvectors are computed.
.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'U\'\fR or \fB\'L\'\fR.
.IP
If \fIuplo\fR = \fB\'U\'\fR, \fIap\fR stores the packed upper triangular part of \fIA\fR. 
.IP
If \fIuplo\fR = \fB\'L\'\fR, \fIap\fR stores the packed lower triangular part of \fIA\fR.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrix \fIA\fR (\fIn\fR\(>= 0). 
.TP 10
\fBap\fR, \fBwork\fR
.NL
\fBCOMPLEX\fR for \fBchpevd\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzhpevd\fR
.IP
Arrays:
.IP
\fIap(*)\fR contains the packed upper or lower triangle of Hermitian matrix A, as specified by \fIuplo\fR. 
.IP
The dimension of \fIap\fR must be at least max(1, \fIn\fR*(\fIn\fR+1)/2)\fI.\fR
.IP
\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBldz\fR
.NL
\fBINTEGER\fR. The leading dimension of the output array \fIz\fR. 
.IP
Constraints: 
.IP
if \fIjobz\fR = \fB\'N\'\fR, then \fIldz\fR\(>= 1; 
.IP
if \fIjobz\fR = \fB\'V\'\fR, then \fIldz\fR\(>= max(1, \fIn\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIwork\fR. 
.IP
Constraints: 
.IP
if \fIn\fR\(<= 1, then \fIlwork\fR\(>= 1; 
.IP
if \fIjobz\fR = \fB\'N\'\fR and \fIn\fR > 1, then \fIlwork\fR\(>=\fIn\fR; 
.IP
if \fIjobz\fR = \fB\'V\'\fR and \fIn\fR > 1, then \fIlwork\fR\(>= 2\fI*n\fR. 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR, \fIrwork\fR and \fIiwork\fR arrays, returns these values as the first entries of the \fIwork\fR, \fIrwork\fR and \fIiwork\fR arrays, and no error message related to \fIlwork\fR or \fIlrwork\fR or \fIliwork\fR is issued by \fBxerbla\fR. 
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBchpevd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzhpevd\fR
.IP
Workspace array, its dimension max(1, \fBlrwork\fR). 
.TP 10
\fBlrwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIrwork\fR. Constraints: 
.IP
if \fIn\fR\(<= 1, then \fIlrwork\fR\(>= 1; 
.IP
if \fIjobz\fR = \fB\'N\'\fR and \fIn\fR > 1, then \fIlrwork\fR\(>=\fIn\fR; 
.IP
if \fIjobz\fR = \fB\'V\'\fR and \fIn\fR > 1, then \fIlrwork\fR\(>= 2\fI*n\fR**2 + 5*\fIn\fR + 1. 
.IP
If \fIlrwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR, \fIrwork\fR and \fIiwork\fR arrays, returns these values as the first entries of the \fIwork\fR, \fIrwork\fR and \fIiwork\fR arrays, and no error message related to \fIlwork\fR or \fIlrwork\fR or \fIliwork\fR is issued by \fBxerbla\fR. 
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. Workspace array,  its dimension max(1, \fBliwork\fR).
.TP 10
\fBliwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIiwork\fR. 
.IP
Constraints: 
.IP
if \fIn \fR\(<= 1, then \fIliwork \fR\(>= 1; 
.IP
if \fIjobz\fR = \fB\'N\'\fR and \fIn\fR > 1, then \fIliwork \fR\(>= 1; 
.IP
if \fIjobz\fR = \fB\'V\'\fR and \fIn\fR > 1, then \fIliwork \fR\(>= 5\fI*n\fR+3.
.IP
If \fIliwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR, \fIrwork\fR and \fIiwork\fR arrays, returns these values as the first entries of the \fIwork\fR, \fIrwork\fR and \fIiwork\fR arrays, and no error message related to \fIlwork\fR or \fIlrwork\fR or \fIliwork\fR is issued by \fBxerbla\fR. 
.SH OUTPUT PARAMETERS

.TP 10
\fBw\fR
.NL
\fBREAL\fR for \fBchpevd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzhpevd\fR
.IP
Array, \fBDIMENSION\fR at least max(1, \fIn\fR). 
.IP
If \fIinfo\fR = 0, contains the eigenvalues of the matrix \fIA\fR in ascending order. See also \fIinfo\fR.
.TP 10
\fBz\fR
.NL
\fBCOMPLEX\fR for \fBchpevd\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzhpevd\fR
.IP
Array, \fBDIMENSION\fR (\fIldz\fR,*). 
.IP
The second dimension of \fIz\fR must be: 
.IP
at least 1 if \fIjobz\fR = \fB\'N\'\fR;
.IP
at least max(1, \fIn\fR) if \fIjobz\fR = \fB\'V\'\fR. 
.IP
If \fIjobz\fR = \fB\'V\'\fR, then this array is overwritten by the unitary matrix \fIZ\fR which contains the eigenvectors of \fIA\fR. 
.IP
If \fIjobz\fR = \fB\'N\'\fR, then \fIz\fR is not referenced.
.TP 10
\fBap\fR
.NL
On exit, this array is overwritten by the values generated during the reduction to tridiagonal form. The elements of the diagonal and the off-diagonal of the tridiagonal matrix overwrite the corresponding elements of A.
.TP 10
\fBwork\fR(1)
.NL
On exit, if \fIinfo\fR = 0, then \fIwork\fR(1) returns the required minimal size of \fIlwork\fR.
.TP 10
\fBrwork\fR(1)
.NL
On exit, if \fIinfo\fR = 0, then \fIrwork\fR(1) returns the required minimal size of \fIlrwork\fR.
.TP 10
\fBiwork(1)\fR
.NL
On exit, if \fIinfo\fR = 0, then \fIiwork(1)\fR returns the required minimal size of \fIliwork\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fIi\fR, then the algorithm failed to converge; \fIi\fR indicates the number of elements of an intermediate tridiagonal form which did not converge to zero. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi-\fRth parameter had an illegal value.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBhpevd\fR interface are the following:
.TP 10
\fBa\fR
.NL
Stands for argument \fIap\fR in Fortan 77 interface. Holds the array \fIA\fR of size (\fIn*(n+1)/2\fR).
.TP 10
\fBw\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBz\fR
.NL
Holds the matrix \fIZ\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBuplo\fR
.NL
Must be \fB\'U\'\fR or \fB\'L\'\fR. The default value is \fB\'U\'\fR.
.TP 10
\fBjobz\fR
.NL
Restored based on the presence of the argument \fIz\fR as follows: 
.IP
\fIjobz\fR = \fB\'V\'\fR, if \fIz\fR is present, 
.IP
\fIjobz\fR = \fB\'N\'\fR, if \fIz\fR is omitted.
