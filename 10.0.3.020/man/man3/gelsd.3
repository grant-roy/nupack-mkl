.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?gelsd 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?gelsd \- Computes the minimum-norm solution to a linear least squares problem using the singular value decomposition of A and a divide and conquer method.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall sgelsd\fR(\fIm\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIs\fR, \fIrcond\fR, \fIrank\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall dgelsd\fR(\fIm\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIs\fR, \fIrcond\fR, \fIrank\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall cgelsd\fR(\fIm\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIs\fR, \fIrcond\fR, \fIrank\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall zgelsd\fR(\fIm\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIs\fR, \fIrcond\fR, \fIrank\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall gelsd\fR(\fIa\fR, \fIb\fR[,\fIrank\fR] [,\fIs\fR] [,\fIrcond\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. The number of rows of the matrix \fIA\fR (\fIm\fR\(>= 0).
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The number of columns of the matrix \fIA\fR
.IP
(\fIn\fR\(>= 0).
.TP 10
\fBnrhs\fR
.NL
\fBINTEGER\fR. The number of right-hand sides; the number of columns in \fIB\fR (\fInrhs\fR\(>= 0). 
.TP 10
\fBa\fR, \fBb\fR, \fBwork\fR
.NL
\fBREAL\fR for \fBsgelsd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgelsd\fR
.IP
\fBCOMPLEX\fR for \fBcgelsd\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgelsd\fR. 
.IP
Arrays: 
.IP
\fIa\fR(\fIlda\fR,*) contains the \fIm\fR-by-\fIn\fR matrix \fIA\fR. 
.IP
The second dimension of \fIa\fR must be at least max(1, \fIn\fR).
.IP
\fIb\fR(\fIldb\fR,*) contains the \fIm\fR-by-\fInrhs\fR right hand side matrix \fIB\fR. 
.IP
The second dimension of \fIb\fR must be at least max(1, \fInrhs\fR).
.IP
\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR; at least max(1, \fIm\fR).
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR. The first dimension of \fIb\fR; must be at least max(1, \fIm\fR, \fIn\fR).
.TP 10
\fBrcond\fR
.NL
\fBREAL\fR for single-precision flavors
.IP
\fBDOUBLE PRECISION\fR for double-precision flavors.
.IP
\fIrcond\fR is used to determine the effective rank of \fIA\fR. Singular values \fIs\fR(\fIi\fR) \(<=\fIrcond\fR *\fIs\fR(1) are treated as zero. If \fIrcond\fR\(<= 0, machine precision is used instead.
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. The size of the \fIwork\fR array; \fIlwork\fR\(>=  1. 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the array \fBwork\fR and the minimum sizes of the arrays \fBrwork\fR and \fBiwork\fR, and returns these values as the first entries of the \fBwork\fR, \fBrwork\fR and \fBiwork\fR arrays, and no error message related to \fBlwork\fR is issued by \fBxerbla\fR.
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. Workspace array. 
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBcgelsd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzgelsd\fR.
.IP
Workspace array, used in complex flavors only. 
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit, \fIA\fR has been overwritten.
.TP 10
\fBb\fR
.NL
Overwritten by the \fIn\fR-by-\fInrhs\fR solution matrix \fIX\fR.
.IP
If \fIm\fR\(>=\fIn\fR and \fIrank\fR = \fIn\fR, the residual sum-of-squares for the solution in the \fIi\fR-th column is given by the sum of squares of modulus of elements \fIn\fR+1:\fIm\fR in that column.
.TP 10
\fBs\fR
.NL
\fBREAL\fR for single precision flavors
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
Array, \fBDIMENSION\fR at least max(1, min(\fIm\fR, \fIn\fR)). The singular values of \fIA\fR in decreasing order. The condition number of \fIA\fR in the 2-norm is
.IP
\fIk\fR**2(\fIA\fR) = \fIs\fR(1)/ \fIs\fR(min(\fIm\fR, \fIn\fR)).
.TP 10
\fBrank\fR
.NL
\fBINTEGER\fR. The effective rank of \fIA\fR, that is, the number of singular values which are greater than \fIrcond\fR *\fIs\fR(1).
.TP 10
\fBwork\fR(1)
.NL
If \fIinfo\fR = 0, on exit, \fIwork\fR(1) contains the minimum value of \fIlwork\fR required for optimum performance. Use this \fIlwork\fR for subsequent runs.
.TP 10
\fBrwork\fR(1)
.NL
If \fIinfo\fR = 0, on exit, \fIrwork\fR(1) returns the minimum size of the workspace array \fBiwork\fR required for optimum performance.
.TP 10
\fBiwork\fR(1)
.NL
If \fIinfo\fR = 0, on exit, \fIiwork\fR(1) returns the minimum size of the workspace array \fBiwork\fR required for optimum performance.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful.
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value. 
.IP
If \fIinfo\fR = \fIi\fR, then the algorithm for computing the SVD failed to converge; \fIi\fR indicates the number of off-diagonal elements of an intermediate bidiagonal form that did not converge to zero.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBgelsd\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIm,n\fR).
.TP 10
\fBb\fR
.NL
Holds the matrix of size max(\fIm,n\fR)-by-\fInrhs\fR. On entry, contains the \fIm\fR-by-\fInrhs\fR right hand side matrix \fIB\fR, On exit, overwritten by the \fIn\fR-by-\fInrhs\fR solution matrix \fIX\fR.
.TP 10
\fBs\fR
.NL
Holds the vector of length min(\fIm,n\fR).
.TP 10
\fBrcond\fR
.NL
Default value for this element is \fIrcond\fR = 100*\fBEPSILON\fR(\fB1.0\(ulWP\fR).
