.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ExecX 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
ExecX \- Computes convolution or correlation for multidimensional case with the fixed first operand vector.
.SH SYNOPSIS
.PP
.B ! Fortran
.PP
\fIstatus\fR= \fBvslsconvexecx\fR(\fItask\fR, \fIy\fR, \fIystride\fR, \fIz\fR, \fIzstride\fR)
.PP
\fIstatus\fR= \fBvsldconvexecx\fR(\fItask\fR, \fIy\fR, \fIystride\fR, \fIz\fR, \fIzstride\fR)
.PP
\fIstatus\fR= \fBvslscorrexecx\fR(\fItask\fR, \fIy\fR, \fIystride\fR, \fIz\fR, \fIzstride\fR)
.PP
\fIstatus\fR= \fBvsldcorrexecx\fR(\fItask\fR, \fIy\fR, \fIystride\fR, \fIz\fR, \fIzstride\fR)
.PP
.B /* C */
.PP
\fIstatus\fR= \fBvslsConvExecX\fR(\fItask\fR, \fIy\fR, \fIystride\fR, \fIz\fR, \fIzstride\fR);
.PP
\fIstatus\fR= \fBvsldConvExecX\fR(\fItask\fR, \fIy\fR, \fIystride\fR, \fIz\fR, \fIzstride\fR);
.PP
\fIstatus\fR= \fBvslsCorrExecX\fR(\fItask\fR, \fIy\fR, \fIystride\fR, \fIz\fR, \fIzstride\fR);
.PP
\fIstatus\fR= \fBvsldCorrExecX\fR(\fItask\fR, \fIy\fR, \fIystride\fR, \fIz\fR, \fIzstride\fR);
.SH INPUT PARAMETERS
.PP
.SB Name
.br
\h\'1\'\fBtask\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBTYPE(VSL\(ulCONV\(ulTASK)\fR for \fBvslsconvexecx\fR and \fBvsldconvexecx\fR
.br
\h\'1\'\fBTYPE(VSL\(ulCORR\(ulTASK)\fR for \fBvslscorrexecx\fR and \fBvsldcorrexecx\fR
.br
\h\'2\'C:\h\'7\'\fBVSLConvTaskPtr\fR for \fBvslsConvExecX\fR and \fBvsldConvExecX\fR
.br
\h\'1\'\fBVSLCorrTaskPtr\fR for \fBvslsCorrExecX\fR and \fBvsldCorrExecX\fR
.br
.SB Description
.br
\h\'1\'Pointer to the task descriptor.
.PP
.SB Name
.br
\h\'1\'\fBx \fR,\fBy\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL(KIND=4), DIMENSION(*)\fR for \fBvslsconvexecx\fR and \fBvslscorrexecx\fR
.br
\h\'1\'\fBREAL(KIND=8), DIMENSION(*)\fR for \fBvsldconvexecx\fR and \fBvsldcorrexecx\fR
.br
\h\'2\'C:\h\'7\'\fBfloat[]\fR for \fBvslsConvExecX\fR and \fBvslsCorrExecX\fR
.br
\h\'1\'\fBdouble[]\fR for \fBvsldConvExeX\fR and \fBvsldCorrExecX\fR
.br
.SB Description
.br
\h\'1\'Pointer to array containing input data (for the second operand vector).
.PP
.SB Name
.br
\h\'1\'\fB ystride \fR,\fBzstride\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBINTEGER, DIMENSION(*)\fR
.br
\h\'2\'C:\h\'7\'\fBint[]\fR
.br
.SB Description
.br
\h\'1\'Strides for input and output data.
.SH OUTPUT PARAMETERS
.PP
.SB Name
.br
\h\'1\'\fBz\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL(KIND=4), DIMENSION(*)\fR for \fBvslsconvexecx\fR and \fBvslscorrexecx\fR
.br
\h\'1\'\fBREAL(KIND=8), DIMENSION(*)\fR for \fBvsldconvexecx\fR and \fBvsldcorrexecx\fR
.br
\h\'2\'C:\h\'7\'\fBfloat[]\fR for \fBvslsConvExecX\fR and \fBvslsCorrExecX\fR
.br
\h\'1\'\fBdouble[]\fR for \fBvsldConvExecX\fR and \fBvsldCorrExecX\fR
.br
.SB Description
.br
\h\'1\'Pointer to the array that stores output data.
.PP
.SB Name
.br
\h\'1\'\fBstatus\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBINTEGER\fR
.br
\h\'2\'C:\h\'7\'\fBint\fR
.br
.SB Description
.br
\h\'1\'Set to \fBVSL\(ulSTATUS\(ulOK\fR if the task is executed successfully or set to non-zero error code otherwise.
