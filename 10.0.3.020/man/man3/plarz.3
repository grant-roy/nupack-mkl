.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?larz 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?larz \- Applies an elementary reflector as returned by \fBp?tzrzf\fR to a general matrix.
.SH SYNOPSIS
.PP
\fBcall pslarz\fR(\fIside\fR, \fIm\fR, \fIn\fR, \fIl\fR, \fIv\fR, \fIiv\fR, \fIjv\fR, \fIdescv\fR, \fIincv\fR, \fItau\fR, \fIc\fR, \fIic\fR, \fIjc\fR, \fIdescc\fR, \fIwork\fR)
.PP
\fBcall pdlarz\fR(\fIside\fR, \fIm\fR, \fIn\fR, \fIl\fR, \fIv\fR, \fIiv\fR, \fIjv\fR, \fIdescv\fR, \fIincv\fR, \fItau\fR, \fIc\fR, \fIic\fR, \fIjc\fR, \fIdescc\fR, \fIwork\fR)
.PP
\fBcall pclarz\fR(\fIside\fR, \fIm\fR, \fIn\fR, \fIl\fR, \fIv\fR, \fIiv\fR, \fIjv\fR, \fIdescv\fR, \fIincv\fR, \fItau\fR, \fIc\fR, \fIic\fR, \fIjc\fR, \fIdescc\fR, \fIwork\fR)
.PP
\fBcall pzlarz\fR(\fIside\fR, \fIm\fR, \fIn\fR, \fIl\fR, \fIv\fR, \fIiv\fR, \fIjv\fR, \fIdescv\fR, \fIincv\fR, \fItau\fR, \fIc\fR, \fIic\fR, \fIjc\fR, \fIdescc\fR, \fIwork\fR)
.SH INPUT PARAMETERS

.TP 10
\fBside\fR
.NL
(global) \fBCHARACTER\fR. 
.IP
if \fIside\fR = \fB\'L\'\fR: form \fIQ\fR*sub(\fIC\fR),
.IP
if \fIside\fR = \fB\'R\'\fR: form sub(\fIC\fR)*\fIQ\fR, \fIQ\fR = \fIQ\fR**\fIT\fR (for real flavors).
.TP 10
\fBm\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The number of rows to be operated on, that is, the number of rows of the distributed submatrix sub(\fIC\fR).  (\fIm\fR \(>= 0).
.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The number of columns to be operated on, that is, the number of columns of the distributed submatrix sub(\fIC\fR). (\fIn\fR \(>= 0).
.TP 10
\fBl\fR
.NL
(global). \fBINTEGER\fR. 
.IP
The columns of the distributed submatrix sub(\fIA\fR) containing the meaningful part of the Householder reflectors. If \fIside\fR = \fB\'L\'\fR, \fIm\fR \(>=\fI l\fR \(>= 0, 
.IP
if \fIside\fR = \fB\'R\'\fR, \fIn\fR \(>= \fIl \fR\(>= 0.
.TP 10
\fBv\fR
.NL
(local).
.IP
\fBREAL\fR for \fBpslarz\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdlarz\fR
.IP
\fBCOMPLEX\fR for \fBpclarz\fR
.IP
\fBCOMPLEX*16\fR for \fBpzlarz\fR. 
.IP
Pointer into the local memory to an array of \fBDIMENSION\fR (\fIlld\(ulv\fR,*) containing the local pieces of the distributed vectors \fIv\fR representing the Householder transformation \fIQ\fR,
.IP
\fIv\fR(\fIiv\fR:\fIiv\fR+\fIl\fR-1, \fIjv\fR) if \fIside\fR = \fB\'L\'\fR and \fIincv\fR = 1,
.IP
\fIv\fR(\fIiv\fR, \fIjv\fR:\fIjv\fR+\fIl\fR-1) if \fIside\fR = \fB\'L\'\fR and \fIincv\fR = \fIm\(ulv\fR,
.IP
\fIv\fR(\fIiv\fR:\fIiv\fR+\fIl\fR-1, \fIjv\fR) if \fIside\fR = \fB\'R\'\fR and  \fIincv\fR = 1,
.IP
\fIv\fR(\fIiv\fR, \fIjv\fR:\fIjv\fR+\fIl\fR-1) if \fIside\fR = \fB\'R\'\fR and \fIincv\fR = \fIm\(ulv\fR.
.IP
The vector \fIv\fR in the representation of \fIQ\fR. \fIv\fR is not used if \fItau\fR = 0.
.TP 10
\fBiv\fR, \fBjv\fR
.NL
(global) \fBINTEGER\fR. The row and column indices in the global array \fIV\fR indicating the first row and the first column of the submatrix sub(\fIV\fR), respectively.
.TP 10
\fBdescv\fR
.NL
(global and local) \fBINTEGER\fR array, \fBDIMENSION\fR (\fIdlen\(ul\fR). The array descriptor for the distributed matrix \fIV\fR.
.TP 10
\fBincv\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The global increment for the elements of \fIv\fR. Only two values of \fIincv\fR are supported in this version, namely 1 and \fIm\(ulv\fR.
.IP
\fIincv\fR must not be zero.
.TP 10
\fBtau\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpslarz\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdlarz\fR
.IP
\fBCOMPLEX\fR for \fBpclarz\fR
.IP
\fBCOMPLEX*16\fR for \fBpzlarz\fR. 
.IP
Array, \fBDIMENSION\fR\fI LOCc\fR(\fIjv\fR) if \fIincv\fR = 1, and \fILOCr\fR(\fIiv\fR) otherwise. This array contains the Householder scalars related to the Householder vectors.
.IP
\fItau\fR is tied to the distributed matrix \fIV\fR.
.TP 10
\fBc\fR
.NL
(local). 
.IP
\fBREAL\fR for \fBpslarz\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdlarz\fR
.IP
\fBCOMPLEX\fR for \fBpclarz\fR
.IP
\fBCOMPLEX*16\fR for \fBpzlarz\fR. 
.IP
Pointer into the local memory to an array of \fBDIMENSION\fR (\fIlld\(ulc\fR, \fILOCc\fR(\fIjc\fR+\fIn\fR-1) ), containing the local pieces of sub(\fIC\fR).
.TP 10
\fBic\fR, \fBjc\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The row and column indices in the global array \fIC\fR indicating the first row and the first column of the submatrix sub(\fIC\fR), respectively.
.TP 10
\fBdescc\fR
.NL
(global and local) \fBINTEGER\fR array, \fBDIMENSION\fR (\fIdlen\(ul\fR). The array descriptor for the distributed matrix \fIC\fR.
.TP 10
\fBwork\fR
.NL
(local). 
.IP
\fBREAL\fR for \fBpslarz\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdlarz\fR
.IP
\fBCOMPLEX\fR for \fBpclarz\fR
.IP
\fBCOMPLEX*16\fR for \fBpzlarz\fR. 
.IP
Array, \fBDIMENSION\fR (\fIlwork\fR) 
.IP
If \fIincv\fR = 1,
.IP
  if \fIside\fR = \fB\'L\'\fR ,
.IP
    if \fIivcol\fR = \fIiccol\fR,
.IP
      \fIlwork\fR \(>=\fI NqC\fR0
.IP
    else
.IP
      \fIlwork \fR\(>=\fI MpC\fR0 + \fBmax\fR(1, \fINqC\fR0)
.IP
    end if 
.IP
  else if \fIside\fR = \fB\'R\'\fR ,
.IP
    \fIlwork\fR \(>= \fINqC\fR0 + \fBmax\fR(\fBmax\fR(1, \fIMpC\fR0), \fBnumroc\fR(\fBnumroc\fR(\fIn\fR+\fIicoffc\fR,\fInb\(ulv\fR,0,0,\fInpcol\fR),\fInb\(ulv\fR,0,0,\fIlcmq\fR))
.IP
  end if
.IP
else if \fIincv\fR = \fIm\(ulv\fR,
.IP
  if \fIside\fR = \fB\'L\'\fR ,
.IP
    \fIlwork\fR \(>= \fIMpC\fR0 + \fBmax\fR(\fBmax\fR(1, \fINqC\fR0), \fBnumroc\fR(\fBnumroc\fR(\fIm\fR+\fIiroffc\fR,\fImb\(ulv\fR,0,0,\fInprow\fR),\fImb\(ulv\fR,0,0,\fIlcmp\fR))
.IP
  else if \fIside\fR = \fB\'R\'\fR ,
.IP
    if \fIivrow\fR = \fIicrow\fR,
.IP
      \fIlwork\fR \(>= \fIMpC\fR0 
.IP
    else
.IP
      \fIlwork\fR \(>=\fI NqC\fR0 + \fBmax\fR(1, \fIMpC\fR0)
.IP
    end if
.IP
  end if 
.IP
end if.
.IP
Here \fIlcm\fR is the least common multiple of \fInprow\fR and \fInpcol\fR and
.IP
\fIlcm\fR = \fBilcm\fR( \fInprow\fR, \fInpcol\fR ), \fIlcmp\fR = \fIlcm\fR / \fInprow\fR,
.IP
\fIlcmq\fR = \fIlcm\fR / \fInpcol\fR,
.IP
\fIiroffc\fR = \fBmod\fR( \fIic\fR-1, \fImb\(ulc\fR ), \fIicoffc\fR = mod( \fIjc\fR-1, \fInb\(ulc\fR ),
.IP
\fIicrow\fR = \fBindxg2p\fR( \fIic\fR, \fImb\(ulc\fR, \fImyrow\fR, \fIrsrc\fR\(ulc, \fInprow\fR ), 
.IP
\fIiccol\fR = \fBindxg2p\fR( \fIjc\fR, \fInb\(ulc\fR, \fImycol\fR, \fIcsrc\fR\(ulc, \fInpcol\fR ), 
.IP
\fImpc\fR0 = \fBnumroc\fR( \fIm\fR+\fIiroffc\fR, \fImb\(ulc\fR, \fImyrow\fR, \fIicrow\fR, \fInprow\fR ), 
.IP
\fInqc\fR0 = \fBnumroc\fR( \fIn\fR+\fIicoffc\fR, \fInb\(ulc\fR, \fImycol\fR, \fIiccol\fR, \fInpcol\fR ),
.IP
\fBilcm\fR, \fBindxg2p\fR, and \fBnumroc\fR are ScaLAPACK tool functions; \fImyrow\fR, \fImycol\fR, \fInprow\fR, and \fInpcol\fR can be determined by calling the subroutine \fBblacs\(ulgridinfo\fR. 
.SH OUTPUT PARAMETERS

.TP 10
\fBc\fR
.NL
(local). 
.IP
On exit, sub(\fIC\fR) is overwritten by the \fIQ\fR*sub(\fIC\fR) if \fIside\fR = \fB\'L\'\fR, or sub(\fIC\fR)*\fIQ\fR if \fIside\fR = \fB\'R\'\fR.
