.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?hegv 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?hegv \- Computes all eigenvalues and, optionally, eigenvectors of a complex generalized Hermitian definite eigenproblem.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall chegv\fR(\fIitype\fR, \fIjobz\fR, \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIw\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIinfo\fR)
.PP
\fBcall zhegv\fR(\fIitype\fR, \fIjobz\fR, \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIw\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall hegv\fR(\fIa\fR, \fIb\fR, \fIw\fR[,\fIitype\fR] [,\fIjobz\fR] [,\fIuplo\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBitype\fR
.NL
\fBINTEGER\fR. Must be 1 or 2 or 3. Specifies the problem type to be solved: 
.IP
if \fIitype\fR = 1, the problem type is \fIA*x\fR = \fIlambda\fR*\fIB\fR*\fIx\fR; 
.IP
if \fIitype\fR = 2, the problem type is \fIA*B*x\fR = \fIlambda\fR*\fIx\fR; 
.IP
if \fIitype\fR = 3, the problem type is \fIB\fR*\fIA*x\fR = \fIlambda\fR*\fI\fR\fIx\fR.
.TP 10
\fBjobz\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'N\'\fR or \fB\'V\'\fR. 
.IP
If \fIjobz\fR = \fB\'N\'\fR, then compute eigenvalues only. 
.IP
If \fIjobz\fR = \fB\'V\'\fR, then compute eigenvalues and eigenvectors.
.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'U\'\fR or \fB\'L\'\fR. 
.IP
If \fIuplo\fR = \fB\'U\'\fR, arrays \fIa\fR and \fIb\fR store the upper triangles of \fIA\fR and \fIB\fR;
.IP
If \fIuplo\fR = \fB\'L\'\fR, arrays \fIa\fR and \fIb\fR store the lower triangles of \fIA\fR and \fIB\fR.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrices \fIA\fR and \fIB\fR (\fIn\fR\(>= 0). 
.TP 10
\fBa\fR, \fBb\fR, \fBwork\fR
.NL
\fBCOMPLEX\fR for \fBchegv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzhegv\fR. 
.IP
Arrays: 
.IP
\fIa\fR(\fIlda\fR,*) contains the upper or lower triangle of the Hermitian matrix \fIA\fR, as specified by \fIuplo\fR. 
.IP
The second dimension of \fIa\fR must be at least max(1, \fIn\fR).
.IP
\fIb\fR(\fIldb\fR,*) contains the upper or lower triangle of the Hermitian positive definite matrix \fIB\fR, as specified by \fIuplo\fR. 
.IP
The second dimension of \fIb\fR must be at least max(1, \fIn\fR).
.IP
\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR; at least max(1, \fIn\fR).
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR. The first dimension of \fIb\fR; at least max(1, \fIn\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIwork\fR; \fIlwork\fR\(>= max(1, 2\fIn\fR-1). 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR array, returns this value as the first entry of the \fIwork\fR array, and no error message related to \fIlwork\fR is issued by \fBxerbla\fR.
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBchegv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzhegv\fR. 
.IP
Workspace array, \fBDIMENSION\fR at least max(1, 3\fIn\fR-2). 
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit, if \fIjobz\fR = \fB\'V\'\fR, then if \fIinfo\fR = 0, \fIa\fR contains the matrix \fIZ\fR of eigenvectors. The eigenvectors are normalized as follows: 
.IP
if \fIitype\fR = 1 or 2, \fIZ\fR**\fIH\fR*\fIB\fR*\fIZ\fR = I; 
.IP
if \fIitype\fR = 3, \fIZ\fR**\fIH\fR*inv(\fIB\fR)*\fIZ\fR = I;
.IP
If \fIjobz\fR = \fB\'N\'\fR, then on exit the upper triangle (if \fIuplo\fR = \fB\'U\'\fR) or the lower triangle (if \fIuplo\fR = \fB\'L\'\fR) of \fIA\fR, including the diagonal, is destroyed.
.TP 10
\fBb\fR
.NL
On exit, if \fIinfo\fR\(<=\fIn\fR, the part of \fIb\fR containing the matrix is overwritten by the triangular factor \fIU\fR or \fIL\fR from the Cholesky factorization \fIB\fR = \fIU\fR**\fIH\fR*\fIU\fR or \fIB\fR = \fIL\fR*\fIL\fR**\fIH\fR.
.TP 10
\fBw\fR
.NL
\fBREAL\fR for \fBchegv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzhegv\fR. 
.IP
Array, \fBDIMENSION\fR at least max(1, \fIn\fR). 
.IP
If \fIinfo\fR = 0, contains the eigenvalues in ascending order.
.TP 10
\fBwork(1)\fR
.NL
On exit, if \fIinfo\fR = 0, then \fIwork(1)\fR returns the required minimal size of \fIlwork\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th argument has an illegal value. 
.IP
If \fIinfo\fR > 0, \fBcpotrf\fR/\fBzpotrf\fR and \fBcheev\fR/\fBzheev\fR return an error code:
.IP
If \fIinfo\fR = \fIi\fR\(<=\fIn\fR, \fBcheev\fR/\fBzheev\fR fails to converge, and \fIi\fR off-diagonal elements of an intermediate tridiagonal do not converge to zero;
.IP
If \fIinfo\fR = \fIn\fR + \fIi\fR, for 1 \(<=\fIi\fR\(<=\fIn\fR, then the leading minor of order \fIi\fR of \fIB\fR is not positive-definite. The factorization of \fIB\fR can not be completed and no eigenvalues or eigenvectors are computed.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBhegv\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBb\fR
.NL
Holds the matrix \fIB\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBw\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBitype\fR
.NL
Must be 1, 2, or 3. The default value is 1.
.TP 10
\fBjobz\fR
.NL
Must be \fB\'N\'\fR or \fB\'V\'\fR. The default value is \fB\'N\'\fR.
.TP 10
\fBuplo\fR
.NL
Must be \fB\'U\'\fR or \fB\'L\'\fR. The default value is \fB\'U\'\fR.
