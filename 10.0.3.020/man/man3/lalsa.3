.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?lalsa 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?lalsa \- Computes the SVD of the coefficient matrix in compact form. Used by \fB?gelsd\fR.
.SH SYNOPSIS
.PP
\fBcall slalsa\fR( \fIicompq\fR, \fIsmlsiz\fR, \fIn\fR, \fInrhs\fR, \fIb\fR, \fIldb\fR, \fIbx\fR, \fIldbx\fR, \fIu\fR, \fIldu\fR, \fIvt\fR, \fIk\fR, \fIdifl\fR, \fIdifr\fR, \fIz\fR, \fIpoles\fR, \fIgivptr\fR, \fIgivcol\fR, \fIldgcol\fR, \fIperm\fR, \fIgivnum\fR, \fIc\fR, \fIs\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall dlalsa\fR\fI( icompq\fR, \fIsmlsiz\fR, \fIn\fR, \fInrhs\fR, \fIb\fR, \fIldb\fR, \fIbx\fR, \fIldbx\fR, \fIu\fR, \fIldu\fR, \fIvt\fR, \fIk\fR, \fIdifl\fR, \fIdifr\fR, \fIz\fR, \fIpoles\fR, \fIgivptr\fR, \fIgivcol\fR, \fIldgcol\fR, \fIperm\fR, \fIgivnum\fR, \fIc\fR, \fIs\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall clalsa\fR( \fIicompq\fR, \fIsmlsiz\fR, \fIn\fR, \fInrhs\fR, \fIb\fR, \fIldb\fR, \fIbx\fR, \fIldbx\fR, \fIu\fR, \fIldu\fR, \fIvt\fR, \fIk\fR, \fIdifl\fR, \fIdifr\fR, \fIz\fR, \fIpoles\fR, \fIgivptr\fR, \fIgivcol\fR, \fIldgcol\fR, \fIperm\fR, \fIgivnum\fR, \fIc\fR, \fIs\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall zlalsa\fR( \fIicompq\fR, \fIsmlsiz\fR, \fIn\fR, \fInrhs\fR, \fIb\fR, \fIldb\fR, \fIbx\fR, \fIldbx\fR, \fIu\fR, \fIldu\fR, \fIvt\fR, \fIk\fR, \fIdifl\fR, \fIdifr\fR, \fIz\fR, \fIpoles\fR, \fIgivptr\fR, \fIgivcol\fR, \fIldgcol\fR, \fIperm\fR, \fIgivnum\fR, \fIc\fR, \fIs\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBicompq\fR
.NL
\fBINTEGER\fR. Specifies whether the left or the right singular vector matrix is involved. If \fIicompq\fR = 0: left singular vector matrix is used 
.IP
If \fIicompq\fR = 1: right singular vector matrix is used.
.TP 10
\fBsmlsiz\fR
.NL
\fBINTEGER\fR. The maximum size of the subproblems at the bottom of the computation tree.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The row and column dimensions of the upper bidiagonal matrix.
.TP 10
\fBnrhs\fR
.NL
\fBINTEGER\fR. The number of columns of \fIb\fR and \fIbx\fR. Must be at least 1.
.TP 10
\fBb\fR
.NL
\fBREAL\fR for \fBslalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR
.IP
\fBCOMPLEX\fR for \fBclalsa\fR
.IP
\fBCOMPLEX*16\fR for \fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR (\fIldb\fR, \fInrhs\fR). Contains the right hand sides of the least squares problem in rows 1 through \fIm\fR.
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR. The leading dimension of \fIb\fR in the calling subprogram. Must be at least max(1,max( \fIm\fR, \fIn\fR )).
.TP 10
\fBldbx\fR
.NL
\fBINTEGER\fR. The leading dimension of the output array \fIbx\fR.
.TP 10
\fBu\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR (\fIldu\fR, \fIsmlsiz\fR). On entry, \fIu\fR contains the left singular vector matrices of all subproblems at the bottom level.
.TP 10
\fBldu\fR
.NL
\fBINTEGER\fR, \fIldu\fR\(>=\fIn\fR. The leading dimension of arrays \fIu\fR, \fIvt\fR, \fIdifl\fR, \fIdifr\fR, \fIpoles\fR, \fIgivnum\fR, and \fIz\fR.
.TP 10
\fBvt\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR(\fIldu\fR, \fIsmlsiz\fR +1). On entry, contains the right singular vector matrices of all subproblems at the bottom level.
.TP 10
\fBk\fR
.NL
\fBINTEGER\fR array, \fBDIMENSION\fR ( \fIn\fR ).
.TP 10
\fBdifl\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR (\fIldu\fR, \fInlvl\fR), where \fInlvl\fR = \fBint\fR(\fBlog\fR2(\fIn\fR /(\fIsmlsiz\fR+1))) + 1.
.TP 10
\fBdifr\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR(\fIldu\fR, 2*\fInlvl\fR). On entry, \fIdifl\fR(*, \fIi\fR) and \fIdifr\fR(*, 2\fIi\fR -1) record distances between singular values on the \fIi\fR-th level and singular values on the (\fIi\fR -1)-th level, and \fIdifr\fR(*, 2\fIi\fR) record the normalizing factors of the right singular vectors matrices of subproblems on \fIi\fR-th level.
.TP 10
\fBz\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR (\fIldu\fR, \fInlvl\fR . On entry, \fIz\fR(1, \fIi\fR) contains the components of the deflation- adjusted updating the row vector for subproblems on the \fIi\fR-th level.
.TP 10
\fBpoles\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR (\fIldu\fR, 2*\fInlvl\fR). 
.IP
On entry, \fIpoles\fR(*, 2\fIi\fR-1: 2\fIi\fR) contains the new and old singular values involved in the secular equations on the \fIi\fR-th level.
.TP 10
\fBgivptr\fR
.NL
\fBINTEGER\fR. Array, \fBDIMENSION\fR ( \fIn\fR ). 
.IP
On entry, \fIgivptr\fR( \fIi\fR ) records the number of Givens rotations performed on the \fIi\fR-th problem on the computation tree.
.TP 10
\fBgivcol\fR
.NL
\fBINTEGER\fR. Array, \fBDIMENSION\fR ( \fIldgcol\fR, 2*\fInlvl\fR ). On entry, for each \fIi\fR, \fIgivcol\fR(*, 2\fIi\fR-1: 2\fIi\fR) records the locations of Givens rotations performed on the \fIi\fR-th level on the computation tree.
.TP 10
\fBldgcol\fR
.NL
\fBINTEGER\fR, \fIldgcol\fR\(>=\fIn\fR. The leading dimension of arrays \fIgivcol\fR and \fIperm\fR.
.TP 10
\fBperm\fR
.NL
\fBINTEGER\fR. Array, \fBDIMENSION\fR ( \fIldgcol\fR, \fInlvl\fR ). On entry, \fIperm\fR(*, \fIi\fR) records permutations done on the \fIi\fR-th level of the computation tree.
.TP 10
\fBgivnum\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR (\fIldu\fR, 2*\fInlvl\fR). On entry, \fIgivnum\fR(*, 2\fIi\fR-1 : 2\fIi\fR) records the \fIc\fR and \fIs\fR values of Givens rotations performed on the \fIi\fR-th level on the computation tree.
.TP 10
\fBc\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR ( \fIn\fR ). On entry, if the \fIi\fR-th subproblem is not square, \fIc\fR( \fIi\fR ) contains the \fIc\fR value of a Givens rotation related to the right null space of the \fIi\fR-th subproblem.
.TP 10
\fBs\fR
.NL
\fBREAL\fR for \fBslalsa\fR/\fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR/\fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR ( \fIn\fR ). On entry, if the \fIi\fR-th subproblem is not square, \fIs\fR( \fIi\fR ) contains the \fIs\fR-value of a Givens rotation related to the right null space of the \fIi\fR-th subproblem.
.TP 10
\fBwork\fR
.NL
\fBREAL\fR for \fBslalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR
.IP
Workspace array, \fBDIMENSION\fR at least (\fIn\fR). Used with real flavors only.
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBclalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzlalsa\fR
.IP
Workspace array, \fBDIMENSION\fR at least max(\fIn\fR, (\fIsmlsz\fR+1)*\fInrhs\fR*3). Used with complex flavors only. 
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. 
.IP
Workspace array, \fBDIMENSION\fR  at least (3\fIn\fR).
.SH OUTPUT PARAMETERS

.TP 10
\fBb\fR
.NL
On exit, contains the solution \fIX\fR in rows 1 through \fIn\fR.
.TP 10
\fBbx\fR
.NL
\fBREAL\fR for \fBslalsa\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsa\fR
.IP
\fBCOMPLEX\fR for \fBclalsa\fR
.IP
\fBCOMPLEX*16\fR for \fBzlalsa\fR
.IP
Array, \fBDIMENSION\fR (\fIldbx\fR, \fInrhs\fR). On exit, the result of applying the left or right singular vector matrix to \fIb\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. If \fIinfo\fR = 0:  successful exit 
.IP
If \fIinfo\fR = -\fIi\fR < 0, the \fIi\fR-th argument had an illegal value.
