.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?getc2 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?getc2 \- Computes the LU factorization with complete pivoting of the general n-by-n matrix.
.SH SYNOPSIS
.PP
\fBcall sgetc2\fR( \fIn\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIjpiv\fR, \fIinfo\fR)
.PP
\fBcall dgetc2\fR( \fIn\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIjpiv\fR, \fIinfo\fR)
.PP
\fBcall cgetc2\fR( \fIn\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIjpiv\fR, \fIinfo\fR)
.PP
\fBcall zgetc2\fR( \fIn\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIjpiv\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrix \fIA\fR (\fIn\fR\(>= 0). 
.TP 10
\fBa\fR
.NL
\fBREAL\fR for \fBsgetc2\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgetc2\fR
.IP
\fBCOMPLEX\fR for \fBcgetc2\fR
.IP
\fBCOMPLEX*16\fR for \fBzgetc2\fR.
.IP
Array \fIa\fR(\fIlda\fR,*) contains the \fIn\fR-by-\fIn\fR matrix \fIA\fR to be factored. The second dimension of \fIa\fR must be at least max(1, \fIn\fR);
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR; at least max(1, \fIn\fR).
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit, the factors \fIL\fR and \fIU\fR from the factorization \fIA\fR = \fIP\fR*\fIL\fR*\fIU\fR*\fIQ\fR; the unit diagonal elements of \fIL\fR are not stored. If \fIU\fR(\fIk\fR, \fIk\fR) appears to be less than \fBsmin\fR, \fIU\fR(\fIk\fR, \fIk\fR) is given the value of \fBsmin\fR, that is giving a nonsingular perturbed system.
.TP 10
\fBipiv\fR
.NL
\fBINTEGER\fR. 
.IP
Array, \fBDIMENSION\fR at least max(1,\fIn\fR). 
.IP
The pivot indices: for 1 \(<= i \(<= \fIn\fR , row \fBi\fR of the matrix has been interchanged with row \fIipiv\fR\fB(i)\fR. 
.TP 10
\fBjpiv\fR
.NL
\fBINTEGER\fR. 
.IP
Array, \fBDIMENSION\fR at least max(1,\fIn\fR). 
.IP
The pivot indices: for 1 \(<= j \(<=  \fIn\fR , column \fBj\fR of the matrix has been interchanged with column \fIjpiv\fR\fB(j)\fR. 
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fIk\fR>0, \fIU\fR(\fIk\fR, \fIk\fR) is likely to produce overflow if we try to solve for \fIx\fR in \fIA*x\fR = \fIb\fR. So \fIU\fR is perturbed to avoid the overflow.
.IP

