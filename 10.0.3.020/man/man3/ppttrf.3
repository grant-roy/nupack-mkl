.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?pttrf 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?pttrf \- Computes the Cholesky factorization of a symmetric (Hermitian) positive-definite tridiagonal distributed matrix.
.SH SYNOPSIS
.PP
\fBcall pspttrf\fR(\fIn\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pdpttrf\fR(\fIn\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pcpttrf\fR(\fIn\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pzpttrf\fR(\fIn\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR.  The order of the distributed submatrix \fIA\fR(\fI1:n\fR, \fIja:ja+n-1\fR)
.IP
(\fIn\fR\(>= 0). 
.TP 10
\fBd\fR, \fBe\fR
.NL
(local) 
.IP
\fBREAL\fR for \fBpspttrf\fR
.IP
\fBDOUBLE PRECISON\fR for \fBpdpttrf\fR
.IP
\fBCOMPLEX\fR for \fBpcpttrf\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzpttrf\fR.
.IP
Pointers into the local memory to arrays of dimension (\fIdesca\fR(\fInb\(ul\fR)) each.
.IP
On entry, the array \fId\fR contains the local part of the global vector storing the main diagonal of the distributed matrix \fIA\fR.
.IP
On entry, the array \fIe\fR contains the local part of the global vector storing the upper diagonal of the distributed matrix \fIA\fR.
.TP 10
\fBja\fR
.NL
(global) \fBINTEGER\fR.  The index in the global array \fIA\fR that points to the start of the matrix to be operated on (which may be either all of \fIA\fR or a submatrix of \fIA\fR).
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIA\fR. 
.IP
If \fIdesca\fR(\fIdtype\(ul\fR) = 501, then \fIdlen\(ul\fR\(>= 7;
.IP
else if \fIdesca\fR(\fIdtype\(ul\fR) = 1, then \fIdlen\(ul\fR\(>= 9.
.TP 10
\fBlaf\fR
.NL
(local) \fBINTEGER\fR. The dimension of the array \fIaf\fR.   
.IP
Must be \fIlaf\fR\(>=\fBNB\fR+2.
.IP
If \fIlaf\fR is not large enough, an error code will be returned and the minimum acceptable size will be returned in \fIaf\fR(1).
.TP 10
\fBwork\fR
.NL
(local) Same type as \fId\fR and \fIe\fR. Workspace array of dimension \fIlwork\fR .
.TP 10
\fBlwork\fR
.NL
(local or global) \fBINTEGER\fR.  The size of the \fIwork\fR array, must be at least 
.IP
\fIlwork\fR\(>= 8*\fBNPCOL\fR. 
.SH OUTPUT PARAMETERS

.TP 10
\fBd\fR, \fBe\fR
.NL
On exit, overwritten by the details of the factorization. 
.TP 10
\fBaf\fR
.NL
(local) 
.IP
\fBREAL\fR for \fBpspttrf\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdpttrf\fR
.IP
\fBCOMPLEX\fR for \fBpcpttrf\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzpttrf\fR.
.IP
Array, dimension (\fIlaf\fR). 
.IP
Auxiliary Fillin space. Fillin is created during the factorization routine \fBp?pttrf\fR and this is stored in \fIaf\fR. 
.IP
Note that if a linear system is to be solved using \fBp?pttrs\fR after the factorization routine, \fIaf\fR must not be altered.
.TP 10
\fBwork\fR(1)
.NL
On exit, \fIwork\fR(1) contains the minimum value of \fIlwork\fR required for optimum performance. 
.TP 10
\fBinfo\fR
.NL
(global) \fBINTEGER\fR. 
.IP
If \fIinfo\fR=0, the execution is successful. 
.IP
\fIinfo\fR < 0: 
.IP
If the \fIi\fR-th argument is an array and the \fIj-\fRth entry had an illegal value, then \fIinfo\fR = -(\fIi\fR*100+\fIj\fR); if the \fIi-\fRth argument is a scalar and had an illegal value, then \fIinfo\fR = \fI-i\fR. 
.IP
\fIinfo\fR> 0: 
.IP
If \fIinfo\fR = \fBk\fR \(<= \fBNPROCS\fR, the submatrix stored on processor \fIinfo\fR and factored locally was not positive definite, and the factorization was not completed. 
.IP
If \fIinfo\fR = \fBk\fR > \fBNPROCS\fR, the submatrix stored on processor \fIinfo\fR-\fBNPROCS\fR representing interactions with other processors was not nonsingular, and the factorization was not completed.
