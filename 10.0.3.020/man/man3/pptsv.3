.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?ptsv 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?ptsv \- Solves a symmetric or Hermitian positive definite tridiagonal system of linear equations.
.SH SYNOPSIS
.PP
\fBcall psptsv\fR(\fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pdptsv\fR(\fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pcptsv\fR(\fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pzptsv\fR(\fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. The order of matrix \fIA\fR(\fIn\fR\(>= 0). 
.TP 10
\fBnrhs\fR
.NL
(global) \fBINTEGER\fR. The number of right-hand sides; the number of columns of the distributed submatrix \fIB\fR(\fInrhs\fR\(>= 0). 
.TP 10
\fBd\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsptsv\fR
.IP
\fBDOUBLE PRECISON\fR for \fBpdptsv\fR
.IP
\fBCOMPLEX\fR for \fBpcptsv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzptsv\fR. 
.IP
Pointer to local part of global vector storing the main diagonal of the matrix. 
.TP 10
\fBe\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsptsv\fR
.IP
\fBDOUBLE PRECISON\fR for \fBpdptsv\fR
.IP
\fBCOMPLEX\fR for \fBpcptsv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzptsv\fR. 
.IP
Pointer to local part of global vector storing the upper diagonal of the matrix. Globally, \fIdu\fR(n) is not referenced, and \fIdu\fR must be aligned with \fId\fR. 
.TP 10
\fBja\fR
.NL
(global) \fBINTEGER\fR. The index in the global array \fIA\fR that points to the start of the matrix to be operated on (which may be either all of \fIA\fR or a submatrix of \fIA\fR).
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array of dimension \fIdlen\fR. 
.IP
If 1\fId\fR type (\fIdtype\(ula\fR=501 or 502), \fIdlen\fR \(>= 7; 
.IP
If 2\fId\fR type (\fIdtype\(ula\fR=1),  \fIdlen\fR \(>= 9. 
.IP
The array descriptor for the distributed matrix \fIA\fR. 
.IP
Contains information of mapping of \fIA\fR to memory.
.TP 10
\fBb\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsptsv\fR
.IP
\fBDOUBLE PRECISON\fR for \fBpdptsv\fR
.IP
\fBCOMPLEX\fR for \fBpcptsv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzptsv\fR. 
.IP
Pointer into the local memory to an array of local lead dimension \fIlld\(ulb\fR \(>= \fInb\fR. 
.IP
On entry, this array contains the local pieces of the right hand sides \fIB\fR(\fIib\fR:\fIib\fR+\fIn\fR-1, 1:\fInrhs\fR). 
.TP 10
\fBib\fR
.NL
(global) \fBINTEGER\fR. The row index in the global array \fIb\fR that points to the first row of the matrix to be operated on (which may be either all of \fIb\fR or a submatrix of \fIB\fR).
.TP 10
\fBdescb\fR
.NL
(global and local) \fBINTEGER\fR array of dimension \fIdlen\fR. 
.IP
If 1\fId\fR type (\fIdtype\(ulb\fR = 502), \fIdlen\fR \(>= 7; 
.IP
If 2\fId\fR type (\fIdtype\(ulb\fR = 1), \fIdlen\fR \(>= 9. 
.IP
The array descriptor for the distributed matrix \fIB\fR. 
.IP
Contains information of mapping of \fIB\fR to memory.
.TP 10
\fBwork\fR
.NL
(local).
.IP
\fBREAL\fR for \fBpsptsv\fR
.IP
\fBDOUBLE PRECISON\fR for \fBpdptsv\fR
.IP
\fBCOMPLEX\fR for \fBpcptsv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzptsv\fR. 
.IP
Temporary workspace. This space may be overwritten in between calls to routines. \fIwork\fR must be the size given in \fIlwork\fR. 
.TP 10
\fBlwork\fR
.NL
(local or global) \fBINTEGER\fR. Size of user-input workspace \fIwork\fR. If \fIlwork\fR is too small, the minimal acceptable size will be returned in \fIwork\fR(1) and an error code is returned. \fIlwork\fR >  (12*\fBNPCOL\fR+3*\fInb\fR)+\fBmax\fR((10+2*min(100, \fInrhs\fR))*\fBNPCOL\fR+4*\fInrhs\fR, 8*\fBNPCOL\fR). 
.SH OUTPUT PARAMETERS

.TP 10
\fBd\fR
.NL
On exit, this array contains information containing the factors of the matrix. Must be of size greater than or equal to \fIdesca\fR(\fInb\fR\(ul). 
.TP 10
\fBe\fR
.NL
On exit, this array contains information containing the factors of the matrix. Must be of size greater than or equal to \fIdesca\fR(\fInb\fR\(ul).
.TP 10
\fBb\fR
.NL
On exit, this contains the local piece of the solutions distributed matrix \fIX\fR.
.TP 10
\fBwork\fR
.NL
On exit, \fIwork\fR(1) contains the minimal \fIlwork\fR. 
.TP 10
\fBinfo\fR
.NL
(local) \fBINTEGER\fR. If \fIinfo\fR=0, the execution is successful. 
.IP
< 0: If the \fIi\fR-th argument is an array and the \fIj\fR-entry had an illegal value, then \fIinfo\fR = -(\fIi\fR*100+\fIj\fR), if the \fIi\fR-th argument is a scalar and had an illegal value, then \fIinfo\fR = -\fIi\fR. 
.IP
> 0: If \fIinfo\fR = \fIk\fR \(<= \fBNPROCS\fR, the submatrix stored on processor \fIinfo\fR and factored locally was not positive definite, and the factorization was not completed. 
.IP
If \fIinfo\fR = \fIk\fR > \fBNPROCS\fR, the submatrix stored on processor \fIinfo\fR-\fBNPROCS\fR representing interactions with other processors was not positive definite, and the factorization was not completed. 
