.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?gesv 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?gesv \- Computes the solution to the system of linear equations with a square matrix A and multiple right-hand sides.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall sgesv\fR( \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIb\fR, \fIldb\fR, \fIinfo\fR)
.PP
\fBcall dgesv\fR( \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIb\fR, \fIldb\fR, \fIinfo\fR)
.PP
\fBcall cgesv\fR( \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIb\fR, \fIldb\fR, \fIinfo\fR)
.PP
\fBcall zgesv\fR( \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIb\fR, \fIldb\fR, \fIinfo\fR)
.PP
\fBcall dsgesv\fR( \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIb\fR, \fIldb\fR, \fIx\fR, \fIldx\fR, \fIwork\fR, \fIswork\fR, \fIiter\fR, \fIinfo\fR)
.PP
\fBcall zcgesv\fR( \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIipiv\fR, \fIb\fR, \fIldb\fR, \fIx\fR, \fIldx\fR, \fIwork\fR, \fIswork\fR, \fIiter\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall gesv\fR( \fIa\fR, \fIb\fR[,\fIipiv\fR] [,\fIinfo\fR] )
.SH INPUT PARAMETERS

.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The number of linear equations, that is, the order of the matrix \fIA\fR; \fIn\fR\(>= 0. 
.TP 10
\fBnrhs\fR
.NL
\fBINTEGER\fR.  The number of right-hand sides, that is, the number of columns of the matrix \fIB\fR; \fInrhs\fR\(>= 0.
.TP 10
\fBa\fR, \fBb\fR
.NL
\fBREAL\fR for \fBsgesv\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgesv\fR and \fBdsgesv\fR
.IP
\fBCOMPLEX\fR for \fBcgesv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgesv\fR and \fBzcgesv\fR.
.IP
Arrays: \fIa\fR(\fIlda\fR,*), \fIb\fR(\fIldb\fR,*). 
.IP
The array \fIa\fR contains the \fIn\fR-by-\fIn\fR coefficient matrix \fIA\fR. 
.IP
The array \fIb\fR contains the \fIn\fR-by-\fInrhs\fR matrix of right hand side matrix \fIB\fR.
.IP
The second dimension of \fIa\fR must be at least max(1, \fIn\fR), the second dimension of \fIb\fR at least max(1,\fInrhs\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR.  The leading dimension of the array \fIa\fR; \fIlda\fR\(>= max(1, \fIn\fR).
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR.  The leading dimension of the array \fIb\fR; \fIldb\fR\(>= max(1, \fIn\fR).
.TP 10
\fBldx\fR
.NL
\fBINTEGER\fR.  The leading dimension of the array \fIx\fR; \fIldx\fR\(>= max(1, \fIn\fR).
.TP 10
\fBwork\fR
.NL
\fBDOUBLE PRECISION\fR for \fBdsgesv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzcgesv\fR.
.IP
Workspace array, \fBDIMENSION\fR  at least max(1,\fIn\fR*\fInrhs\fR). This array is used to hold the residual vectors.
.TP 10
\fBswork\fR
.NL
\fBREAL\fR for \fBdsgesv\fR
.IP
\fBCOMPLEX\fR for \fBzcgesv\fR.
.IP
Workspace array, \fBDIMENSION\fR at least max(1,\fIn\fR*\fInrhs\fR). This array is used to use the single precision matrix and the right-hand sides or solutions in single precision.
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
Overwritten by the factors \fIL\fR and \fBU\fR from the factorization of \fIA\fR = \fIP*L*U\fR; the unit diagonal elements of \fIL\fR are not stored.
.IP
If iterative refinement has been successfully used (\fBinfo\fR= 0 and \fBiter\fR\(>= 0, see description below), then \fIA\fR is unchanged.
.IP
If double precision factorization has been used (\fBinfo\fR= 0 and \fBiter\fR < 0, see description below), then the array \fIA\fR contains the factors \fIL\fR and \fIU\fR from the factorization           \fIA\fR = \fIP*L*U\fR; the unit diagonal elements of \fIL\fR are not stored.
.TP 10
\fBb\fR
.NL
Overwritten by the solution matrix \fIX\fR for \fBdgesv\fR, \fBsgesv\fR,\fBzgesv\fR,\fBzgesv\fR. Unchanged for \fBdsgesv\fR and \fBzcgesv\fR.
.TP 10
\fBipiv\fR
.NL
\fBINTEGER\fR.
.IP
Array, \fBDIMENSION\fR at least max(1, \fIn\fR). The pivot indices that define the permutation matrix \fIP\fR; row \fIi\fR of the matrix was interchanged with row \fIipiv\fR(i). Corresponds to the single precision factorization (if \fBinfo\fR= 0 and \fBiter\fR\(>= 0) or the double precision factorization (if \fBinfo\fR= 0 and \fBiter\fR < 0).
.TP 10
\fBx\fR
.NL
\fBDOUBLE PRECISION\fR for \fBdsgesv\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzcgesv\fR.
.IP
Array, \fBDIMENSION\fR (\fIldx\fR, \fInrhs\fR). If \fBinfo\fR = 0, contains  the \fIn\fR-by-\fInrhs\fR solution matrix \fIX\fR.
.TP 10
\fBiter\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIiter\fR < 0:  iterative refinement has failed, double precision factorization has been performed
.RS
.IP \(bu
If \fIiter\fR = -1:  taking into account machine parameters, \fIn\fR, \fInrhs\fR, it is a priori not worth working in single precision
.IP \(bu
If \fIiter\fR = -2:  overflow of an entry when moving from double to single precision
.IP \(bu
If \fIiter\fR = -3:  failure of \fBsgetrf\fR
.IP \(bu
If \fIiter\fR = -31:  stop the iterative refinement after the 30th iteration.
.RE
.IP
If \fIiter\fR > 0:  iterative refinement has been sucessfully used. Returns the number of iterations.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. If \fIinfo\fR=0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value. 
.IP
If \fIinfo\fR = \fIi\fR, \fIU\fR(\fIi\fR, \fIi\fR) (computed in double precision for mixed precision subroutines) is exactly zero. The factorization has been completed, but the factor \fIU\fR is exactly singular, so the solution could not be computed.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77  counterparts. For general conventions applied to skip redundant or reconstructible arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBgesv\fR interface are as follows:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIn\fR,\fIn\fR).
.TP 10
\fBb\fR
.NL
Holds the matrix \fIB\fR of size (\fIn\fR,\fInrhs\fR).
.TP 10
\fBipiv\fR
.NL
Holds the vector of length (\fIn\fR).
.PP
.B NOTE:
Fortran 95 Interface is so far not available for the mixed precision subroutines \fBdsgesv\fR/\fBzcgesv\fR.
