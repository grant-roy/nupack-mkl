.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?sygvd 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?sygvd \- Computes all eigenvalues and, optionally, eigenvectors of a real generalized symmetric definite eigenproblem. If eigenvectors are desired, it uses a divide and conquer method.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall ssygvd\fR(\fIitype\fR, \fIjobz\fR, \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIw\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
\fBcall dsygvd\fR(\fIitype\fR, \fIjobz\fR, \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIw\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall sygvd\fR(\fIa\fR, \fIb\fR, \fIw\fR[,\fIitype\fR] [,\fIjobz\fR] [,\fIuplo\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBitype\fR
.NL
\fBINTEGER\fR. Must be 1 or 2 or 3. Specifies the problem type to be solved: 
.IP
if \fIitype\fR = 1, the problem type is \fIA*x\fR = \fIlambda\fR\fI*B*x\fR; 
.IP
if \fIitype\fR = 2, the problem type is \fIA\fR*\fIB\fR*\fIx\fR = \fIlambda\fR*\fIx\fR; 
.IP
if \fIitype\fR = 3, the problem type is \fIB*A\fR*x = \fIlambda\fR*\fIx\fR.
.TP 10
\fBjobz\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'N\'\fR or \fB\'V\'\fR. 
.IP
If \fIjobz\fR = \fB\'N\'\fR, then compute eigenvalues only. 
.IP
If \fIjobz\fR = \fB\'V\'\fR, then compute eigenvalues and eigenvectors.
.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'U\'\fR or \fB\'L\'\fR. 
.IP
If \fIuplo\fR = \fB\'U\'\fR, arrays \fIa\fR and \fIb\fR store the upper triangles of \fIA\fR and \fIB\fR;
.IP
If \fIuplo\fR = \fB\'L\'\fR, arrays \fIa\fR and \fIb\fR store the lower triangles of \fIA\fR and \fIB\fR.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrices \fIA\fR and \fIB\fR (\fIn\fR\(>= 0). 
.TP 10
\fBa\fR, \fBb\fR, \fBwork\fR
.NL
\fBREAL\fR for \fBssygvd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsygvd\fR. 
.IP
Arrays: 
.IP
\fIa\fR(\fIlda\fR,*) contains the upper or lower triangle of the symmetric matrix \fIA\fR, as specified by \fIuplo\fR. 
.IP
The second dimension of \fIa\fR must be at least max(1, \fIn\fR).
.IP
\fIb\fR(\fIldb\fR,*) contains the upper or lower triangle of the symmetric positive definite matrix \fIB\fR, as specified by \fIuplo\fR. 
.IP
The second dimension of \fIb\fR must be at least max(1, \fIn\fR).
.IP
\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR; at least max(1, \fIn\fR).
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR. The first dimension of \fIb\fR; at least max(1, \fIn\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIwork\fR.
.IP
Constraints: 
.IP
If \fIn\fR\(<= 1, \fIlwork\fR\(>= 1; 
.IP
If \fIjobz\fR = \fB\'N\'\fR and \fIn\fR>1, \fIlwork\fR < 2\fIn\fR+1;
.IP
If \fIjobz\fR = \fB\'V\'\fR and \fIn\fR>1, \fIlwork\fR < 2\fIn\fR**2+6\fIn\fR+1. 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the required sizes of the \fIwork\fR and \fIiwork\fR arrays, returns these values as the first entries of the \fIwork\fR and \fIiwork\fR arrays, and no error message related to \fIlwork\fR or \fIliwork\fR is issued by \fBxerbla\fR. 
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. 
.IP
Workspace array, its dimension max(1, \fBlwork\fR). 
.TP 10
\fBliwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIiwork\fR. 
.IP
Constraints: 
.IP
If \fIn\fR\(<= 1, \fIliwork\fR\(>= 1; 
.IP
If \fIjobz\fR = \fB\'N\'\fR and \fIn\fR>1, \fIliwork\fR\(>= 1;
.IP
If \fIjobz\fR = \fB\'V\'\fR and \fIn\fR>1, \fIliwork\fR\(>= 5\fIn\fR+3.
.IP
If \fIliwork\fR = -1, then a workspace query is assumed; the routine only calculates the required sizes of the \fIwork\fR and \fIiwork\fR arrays, returns these values as the first entries of the \fIwork\fR and \fIiwork\fR arrays, and no error message related to \fIlwork\fR or \fIliwork\fR is issued by \fBxerbla\fR. 
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit, if \fIjobz\fR = \fB\'V\'\fR, then if \fIinfo\fR = 0, \fIa\fR contains the matrix \fIZ\fR of eigenvectors. The eigenvectors are normalized as follows: 
.IP
if \fIitype\fR = 1 or 2, \fIZ\fR**\fIT\fR*\fIB\fR*\fIZ\fR = I; 
.IP
if \fIitype\fR = 3, \fIZ\fR**\fIT\fR*inv(\fIB\fR)*\fIZ\fR = I;
.IP
If \fIjobz\fR = \fB\'N\'\fR, then on exit the upper triangle (if \fIuplo\fR = \fB\'U\'\fR) or the lower triangle (if \fIuplo\fR = \fB\'L\'\fR) of \fIA\fR, including the diagonal, is destroyed.
.TP 10
\fBb\fR
.NL
On exit, if \fIinfo\fR\(<=\fIn\fR, the part of \fIb\fR containing the matrix is overwritten by the triangular factor \fIU\fR or \fIL\fR from the Cholesky factorization \fIB\fR = \fIU\fR**\fIT\fR\fI*U\fR or \fIB\fR = \fIL*\fR\fIL\fR**\fIT\fR.
.TP 10
\fBw\fR
.NL
\fBREAL\fR for \fBssygvd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsygvd\fR. 
.IP
Array, \fBDIMENSION\fR at least max(1, \fIn\fR). 
.IP
If \fIinfo\fR = 0, contains the eigenvalues in ascending order.
.TP 10
\fBwork\fR(1)
.NL
On exit, if \fIinfo\fR = 0, then \fIwork\fR(1) returns the required minimal size of \fIlwork\fR.
.TP 10
\fBiwork\fR(1)
.NL
On exit, if \fIinfo\fR = 0, then \fIiwork\fR(1) returns the required minimal size of \fIliwork\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th argument had an illegal value. 
.IP
If \fIinfo\fR > 0= \fIi\fR\(<=\fIn\fR, and   \fIjobz\fR = \fB\'N\'\fR, then the algorithm failed to converge; \fIi\fR off-diagonal elements of an intermediate tridiagonal form did not converge to zero; if   \fIjobz\fR = \fB\'V\'\fR, then the algorithm failed to compute an eigenvalue while working on the submatrix lying in rows and columns \fIinfo\fR/(\fIn\fR+1) through mod(\fIinfo\fR,\fIn\fR+1); 
.IP
If \fIinfo\fR > 0= \fIn\fR + \fIi\fR, for 1 \(<=\fIi\fR\(<=\fIn\fR, then the leading minor of order \fIi\fR of \fIB\fR is not positive-definite. The factorization of \fIB\fR could not be completed and no eigenvalues or eigenvectors were computed.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBsygvd\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBb\fR
.NL
Holds the matrix \fIB\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBw\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBitype\fR
.NL
Must be 1, 2, or 3. The default value is 1.
.TP 10
\fBjobz\fR
.NL
Must be \fB\'N\'\fR or \fB\'V\'\fR. The default value is \fB\'N\'\fR.
.TP 10
\fBuplo\fR
.NL
Must be \fB\'U\'\fR or \fB\'L\'\fR. The default value is \fB\'U\'\fR.
