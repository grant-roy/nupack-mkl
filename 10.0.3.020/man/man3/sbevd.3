.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?sbevd 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?sbevd \- Computes all eigenvalues and (optionally) all eigenvectors of a real symmetric band matrix using divide and conquer algorithm.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall ssbevd\fR(\fIjobz\fR, \fIuplo\fR, \fIn\fR, \fIkd\fR, \fIab\fR, \fIldab\fR, \fIw\fR, \fIz\fR, \fIldz\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
\fBcall dsbevd\fR(\fIjobz\fR, \fIuplo\fR, \fIn\fR, \fIkd\fR, \fIab\fR, \fIldab\fR, \fIw\fR, \fIz\fR, \fIldz\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall sbevd\fR(\fIa\fR, \fIw\fR[,\fIuplo\fR] [,\fIz\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBjobz\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'N\'\fR or \fB\'V\'\fR. 
.IP
If \fIjobz\fR = \fB\'N\'\fR, then only eigenvalues are computed. 
.IP
If \fIjobz\fR = \fB\'V\'\fR, then eigenvalues and eigenvectors are computed.
.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'U\'\fR or \fB\'L\'\fR.
.IP
If \fIuplo\fR = \fB\'U\'\fR, \fIab\fR stores the upper triangular part of \fIA\fR. 
.IP
If \fIuplo\fR = \fB\'L\'\fR, \fIab\fR stores the lower triangular part of \fIA\fR.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrix \fIA\fR (\fIn\fR\(>= 0). 
.TP 10
\fBkd\fR
.NL
\fBINTEGER\fR. The number of super- or sub-diagonals in \fIA\fR
.IP
(\fIkd\fR\(>= 0). 
.TP 10
\fBab\fR, \fBwork\fR
.NL
\fBREAL\fR for \fBssbevd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsbevd\fR.
.IP
Arrays: 
.IP
\fIab\fR (\fIldab\fR,*) is an array containing either upper or lower triangular part of the symmetric matrix \fIA\fR (as specified by \fIuplo\fR) in band storage format. 
.IP
The second dimension of \fIab\fR must be at least max(1, \fIn\fR).\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR). 
.TP 10
\fBldab\fR
.NL
\fBINTEGER\fR. The leading dimension of \fIab\fR; must be at least \fIkd\fR+1.
.TP 10
\fBldz\fR
.NL
\fBINTEGER\fR. The leading dimension of the output array \fIz\fR. 
.IP
Constraints: 
.IP
if \fIjobz\fR = \fB\'N\'\fR, then \fIldz\fR\(>= 1; 
.IP
if \fIjobz\fR = \fB\'V\'\fR, then \fIldz\fR\(>= max(1, \fIn\fR) .
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIwork\fR. 
.IP
Constraints: 
.IP
if \fIn\fR\(<= 1, then \fIlwork\fR\(>= 1; 
.IP
if \fIjobz\fR = \fB\'N\'\fR and \fIn\fR > 1, then \fIlwork\fR\(>= 2\fIn\fR; 
.IP
if \fIjobz\fR = \fB\'V\'\fR and \fIn\fR > 1, then \fIlwork\fR\(>= 2*\fIn\fR**2 + 5*\fIn\fR + 1.
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR and \fIiwork\fR arrays, returns these values as the first entries of the \fIwork\fR and \fIiwork\fR arrays, and no error message related to \fIlwork\fR or \fIliwork\fR is issued by \fBxerbla\fR. 
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. Workspace array, its dimension max(1, \fBliwork\fR). 
.TP 10
\fBliwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIiwork\fR. Constraints: if \fIn\fR\(<= 1, then \fIliwork\fR < 1; if \fIjob\fR = \fB\'N\'\fR and \fIn\fR > 1, then \fIliwork\fR < 1; if \fIjob\fR = \fB\'V\'\fR and \fIn\fR > 1, then \fIliwork\fR < 5\fI*n\fR+3.
.IP
If \fIliwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR and \fIiwork\fR arrays, returns these values as the first entries of the \fIwork\fR and \fIiwork\fR arrays, and no error message related to \fIlwork\fR or \fIliwork\fR is issued by \fBxerbla\fR. 
.SH OUTPUT PARAMETERS

.TP 10
\fBw\fR, \fBz\fR
.NL
\fBREAL\fR for \fBssbevd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdsbevd\fR
.IP
Arrays:
.IP
\fIw(*)\fR, \fBDIMENSION\fR at least max(1, \fIn\fR). 
.IP
If \fIinfo\fR = 0, contains the eigenvalues of the matrix \fIA\fR in ascending order. See also \fIinfo\fR.
.IP
\fBz\fR(\fIldz\fR,*). 
.IP
The second dimension of \fIz\fR must be: 
.IP
at least 1 if \fIjob\fR = \fB\'N\'\fR;
.IP
at least max(1, \fIn\fR) if \fIjob\fR = \fB\'V\'\fR. 
.IP
If \fIjob\fR = \fB\'V\'\fR, then this array is overwritten by the orthogonal matrix \fIZ\fR which contains the eigenvectors of \fIA\fR. The \fIi-\fRth column of \fIZ\fR contains the eigenvector which corresponds to the eigenvalue \fIw(i)\fR. 
.IP
If \fIjob\fR = \fB\'N\'\fR, then \fIz\fR is not referenced.
.TP 10
\fBab\fR
.NL
On exit, this array is overwritten by the values generated during the reduction to tridiagonal form. 
.TP 10
\fBwork\fR(1)
.NL
On exit, if \fIlwork\fR > 0, then \fIwork\fR(1) returns the required minimal size of \fIlwork\fR.
.TP 10
\fBiwork\fR(1)
.NL
On exit, if \fIliwork\fR > 0, then \fIiwork\fR(1) returns the required minimal size of \fIliwork\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fIi\fR, then the algorithm failed to converge; \fIi\fR indicates the number of elements of an intermediate tridiagonal form which did not converge to zero. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi-\fRth parameter had an illegal value.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBsbevd\fR interface are the following:
.TP 10
\fBa\fR
.NL
Stands for argument \fIab\fR in Fortan 77 interface. Holds the array \fIA\fR of size (\fIkd+1,n\fR).
.TP 10
\fBw\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBz\fR
.NL
Holds the matrix \fIZ\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBuplo\fR
.NL
Must be \fB\'U\'\fR or \fB\'L\'\fR. The default value is \fB\'U\'\fR.
.TP 10
\fBjobz\fR
.NL
Restored based on the presence of the argument \fIz\fR as follows: 
.IP
\fIjobz\fR = \fB\'V\'\fR, if \fIz\fR is present, 
.IP
\fIjobz\fR = \fB\'N\'\fR, if \fIz\fR is omitted.
