.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?ggsvd 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?ggsvd \- Computes the generalized singular value decomposition of a pair of general rectangular matrices.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall sggsvd\fR(\fIjobu\fR, \fIjobv\fR, \fIjobq\fR, \fIm\fR, \fIn\fR, \fIp\fR, \fIk\fR, \fIl\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIalpha\fR, \fIbeta\fR, \fIu\fR, \fIldu\fR, \fIv\fR, \fIldv\fR, \fIq\fR, \fIldq\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall dggsvd\fR(\fIjobu\fR, \fIjobv\fR, \fIjobq\fR, \fIm\fR, \fIn\fR, \fIp\fR, \fIk\fR, \fIl\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIalpha\fR, \fIbeta\fR, \fIu\fR, \fIldu\fR, \fIv\fR, \fIldv\fR, \fIq\fR, \fIldq\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall cggsvd\fR(\fIjobu\fR, \fIjobv\fR, \fIjobq\fR, \fIm\fR, \fIn\fR, \fIp\fR, \fIk\fR, \fIl\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIalpha\fR, \fIbeta\fR, \fIu\fR, \fIldu\fR, \fIv\fR, \fIldv\fR, \fIq\fR, \fIldq\fR, \fIwork\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall zggsvd\fR(\fIjobu\fR, \fIjobv\fR, \fIjobq\fR, \fIm\fR, \fIn\fR, \fIp\fR, \fIk\fR, \fIl\fR, \fIa\fR, \fIlda\fR, \fIb\fR, \fIldb\fR, \fIalpha\fR, \fIbeta\fR, \fIu\fR, \fIldu\fR, \fIv\fR, \fIldv\fR, \fIq\fR, \fIldq\fR, \fIwork\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall ggsvd\fR(\fIa\fR, \fIb\fR, \fIalpha\fR, \fIbeta\fR[, \fIk\fR] [,\fIl\fR] [,\fIu\fR] [,\fIv\fR] [,\fIq\fR] [,\fIiwork\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBjobu\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'U\'\fR or \fB\'N\'\fR. 
.IP
If \fIjobu\fR = \fB\'U\'\fR, orthogonal/unitary matrix \fIU\fR is computed. 
.IP
If \fIjobu\fR = \fB\'N\'\fR, \fIU\fR is not computed.
.TP 10
\fBjobv\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'V\'\fR or \fB\'N\'\fR. 
.IP
If \fIjobv\fR = \fB\'V\'\fR, orthogonal/unitary matrix \fIV\fR is computed. 
.IP
If \fIjobv\fR = \fB\'N\'\fR, \fIV\fR is not computed.
.TP 10
\fBjobq\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'Q\'\fR or \fB\'N\'\fR. 
.IP
If \fIjobq\fR = \fB\'Q\'\fR, orthogonal/unitary matrix \fIQ\fR is computed. 
.IP
If \fIjobq\fR = \fB\'N\'\fR, \fIQ\fR is not computed.
.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. The number of rows of the matrix \fIA\fR (\fIm\fR\(>= 0).
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The number of columns of the matrices \fIA\fR and \fIB\fR (\fIn\fR\(>= 0).
.TP 10
\fBp\fR
.NL
\fBINTEGER\fR. The number of rows of the matrix \fIB\fR (\fIp\fR\(>= 0).
.TP 10
\fBa\fR, \fBb\fR, \fBwork\fR
.NL
\fBREAL\fR for \fBsggsvd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdggsvd\fR
.IP
\fBCOMPLEX\fR for \fBcggsvd\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzggsvd\fR. 
.IP
Arrays: 
.IP
\fIa\fR(\fIlda\fR,*) contains the \fIm\fR-by-\fIn\fR matrix \fIA\fR. 
.IP
The second dimension of \fIa\fR must be at least max(1, \fIn\fR).
.IP
\fIb\fR(\fIldb\fR,*) contains the \fIp\fR-by-\fIn\fR matrix \fIB\fR. 
.IP
The second dimension of \fIb\fR must be at least max(1, \fIn\fR).
.IP
\fIwork\fR(*) is a workspace array. 
.IP
The dimension of \fIwork\fR must be at least max(3\fIn\fR, \fIm\fR, \fIp\fR)+\fIn\fR.
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of \fIa\fR; at least max(1, \fIm\fR).
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR. The first dimension of \fIb\fR; at least max(1, \fIp\fR).
.TP 10
\fBldu\fR
.NL
\fBINTEGER\fR. The first dimension of the array \fIu\fR . 
.IP
\fIldu\fR\(>= max(1, \fIm\fR) if \fIjobu\fR = \fB\'U\'\fR; \fIldu\fR\(>= 1 otherwise.
.TP 10
\fBldv\fR
.NL
\fBINTEGER\fR. The first dimension of the array \fIv\fR . 
.IP
\fIldv\fR\(>= max(1, \fIp\fR) if \fIjobv\fR = \fB\'V\'\fR; \fIldv\fR\(>= 1 otherwise.
.TP 10
\fBldq\fR
.NL
\fBINTEGER\fR. The first dimension of the array \fIq\fR . 
.IP
\fIldq\fR\(>= max(1, \fIn\fR) if \fIjobq\fR = \fB\'Q\'\fR; \fIldq\fR\(>= 1 otherwise.
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. 
.IP
Workspace array, \fBDIMENSION\fR at least max(1, \fIn\fR). 
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBcggsvd DOUBLE PRECISION\fR for \fBzggsvd\fR. 
.IP
Workspace array, \fBDIMENSION\fR at least max(1, 2\fIn\fR). Used in complex flavors only.
.SH OUTPUT PARAMETERS

.TP 10
\fBk\fR, \fBl\fR
.NL
\fBINTEGER\fR. On exit, \fIk\fR and \fIl\fR specify the dimension of the subblocks. The sum \fIk\fR\fI+l\fR is equal to the effective numerical rank of (\fIA\fR**\fIH\fR, \fIB\fR**\fIH\fR)**\fIH\fR.
.TP 10
\fBa\fR
.NL
On exit, \fIa\fR contains the triangular matrix \fIR\fR or part of \fIR\fR.
.TP 10
\fBb\fR
.NL
On exit, \fIb\fR contains part of the triangular matrix R if \fIm\fR-\fIk\fR-\fIl\fR < 0.
.TP 10
\fBalpha\fR, \fBbeta\fR
.NL
\fBREAL\fR for single-precision flavors
.IP
\fBDOUBLE PRECISION\fR for double-precision flavors. 
.IP
Arrays, \fBDIMENSION\fR at least max(1, \fIn\fR) each. 
.IP
Contain the generalized singular value pairs of \fIA\fR and \fIB\fR:
.IP
\fIalpha\fR(1:\fIk\fR) = 1, 
.IP
\fIbeta\fR(1:\fIk\fR) = 0,
.IP
and if \fIm\fR-\fIk\fR-\fIl\fR\(>= 0,
.IP
\fIalpha\fR(\fIk\fR+1:\fIk\fR+\fIl\fR) = \fIC\fR, 
.IP
\fIbeta\fR(\fIk\fR+1:\fIk\fR+\fIl\fR) = \fIS\fR,
.IP
or if \fIm\fR-\fIk\fR-\fIl\fR < 0,
.IP
\fIalpha\fR(\fIk\fR+1:\fIm\fR)= \fIC\fR, \fIalpha\fR(\fIm\fR+1:\fIk\fR+\fIl\fR)=0
.IP
\fIbeta\fR(\fIk\fR+1:\fIm\fR) = \fIS\fR, \fIbeta\fR(\fIm\fR+1:\fIk\fR+\fIl\fR) = 1
.IP
and
.IP
\fIalpha\fR(\fIk\fR+\fIl\fR+1:\fIn\fR) = 0
.IP
\fIbeta\fR(\fIk\fR+\fIl\fR+1:\fIn\fR) = 0.
.TP 10
\fBu\fR, \fBv\fR, \fBq\fR
.NL
\fBREAL\fR for \fBsggsvd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdggsvd\fR
.IP
\fBCOMPLEX\fR for \fBcggsvd\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzggsvd\fR. 
.IP
Arrays:
.IP
\fIu\fR(\fIldu\fR,*); the second dimension of \fIu\fR must be at least max(1, \fIm\fR). 
.IP
If \fIjobu\fR = \fB\'U\'\fR, \fIu\fR contains the \fIm\fR-by-\fIm\fR orthogonal/unitary matrix \fIU\fR. 
.IP
If \fIjobu\fR = \fB\'N\'\fR, \fIu\fR is not referenced.
.IP
\fIv\fR(\fIldv\fR,*); the second dimension of \fIv\fR must be at least max(1, \fIp\fR). 
.IP
If \fIjobv\fR = \fB\'V\'\fR, \fIv\fR contains the \fIp\fR-by-\fIp\fR orthogonal/unitary matrix \fIV\fR. 
.IP
If \fIjobv\fR = \fB\'N\'\fR, \fIv\fR is not referenced.
.IP
\fIq\fR(\fIldq\fR,*); the second dimension of \fIq\fR must be at least max(1, \fIn\fR). 
.IP
If \fIjobq\fR = \fB\'Q\'\fR, \fIq\fR contains the \fIn\fR-by-\fIn\fR orthogonal/unitary matrix \fIQ\fR. 
.IP
If \fIjobq\fR = \fB\'N\'\fR, \fIq\fR is not referenced.
.TP 10
\fBiwork\fR
.NL
On exit, \fIiwork\fR stores the sorting information.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value. 
.IP
If \fIinfo\fR = 1, the Jacobi-type procedure failed to converge. For further details, see subroutine \fB?tgsja\fR.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBggsvd\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIm\fR, \fIn\fR).
.TP 10
\fBb\fR
.NL
Holds the matrix \fIB\fR of size (\fIp\fR, \fIn\fR).
.TP 10
\fBalpha\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBbeta\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBu\fR
.NL
Holds the matrix \fIU\fR of size (\fIm\fR, \fIm\fR).
.TP 10
\fBv\fR
.NL
Holds the matrix \fIV\fR of size (\fIp\fR, \fIp\fR).
.TP 10
\fBq\fR
.NL
Holds the matrix \fIQ\fR of size (\fIn\fR, \fIn\fR).
.TP 10
\fBiwork\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBjobu\fR
.NL
Restored based on the presence of the argument \fIu\fR as follows: 
.IP
\fIjobu\fR = \fB\'U\'\fR, if \fIu\fR is present, \fIjobu\fR = \fB\'N\'\fR, if \fIu\fR is omitted.
.TP 10
\fBjobv\fR
.NL
Restored based on the presence of the argument \fIv\fR as follows: 
.IP
\fIjobz\fR = \fB\'V\'\fR, if \fIv\fR is present, 
.IP
\fIjobz\fR = \fB\'N\'\fR, if \fIv\fR is omitted.
.TP 10
\fBjobq\fR
.NL
Restored based on the presence of the argument \fIq\fR as follows: 
.IP
\fIjobz\fR = \fB\'Q\'\fR, if \fIq\fR is present, 
.IP
\fIjobz\fR = \fB\'N\'\fR, if \fIq\fR is omitted.
