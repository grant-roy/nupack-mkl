.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?lauum 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?lauum \- Computes the product \fIU\fR*\fIU\fR**\fIT\fR(\fIU\fR*\fIU\fR**\fIH\fR) or \fIL\fR**\fIT\fR*\fIL\fR (\fIL\fR**\fIH\fR*\fIL\fR), where \fIU\fR and \fIL\fR are upper or lower triangular matrices (blocked algorithm).
.SH SYNOPSIS
.PP
\fBcall slauum\fR( \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIinfo\fR)
.PP
\fBcall dlauum\fR( \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIinfo\fR)
.PP
\fBcall clauum\fR( \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIinfo\fR)
.PP
\fBcall zlauum\fR( \fIuplo\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR.
.IP
Specifies whether the triangular factor stored in the array \fBa\fR is upper or lower triangular:
.IP
= \fB\'U\'\fR:  Upper triangular
.IP
= \fB\'L\'\fR:  Lower triangular
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the triangular factor \fIU\fR or \fIL\fR. \fIn\fR\(>= 0.
.TP 10
\fBa\fR
.NL
\fBREAL\fR for \fBslauum\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlauum\fR
.IP
\fBCOMPLEX\fR for \fBclauum\fR
.IP
\fBCOMPLEX*16\fR for \fBzlauum\fR .
.IP
Array, \fBDIMENSION\fR (\fIlda\fR, \fIn\fR).
.IP
On entry, the triangular factor \fIU\fR or \fIL\fR.
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The leading dimension of the array \fIa\fR. \fIlda\fR\(>= max(1,\fIn\fR).
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit,
.IP
if \fIuplo\fR = \fB\'U\'\fR, then the upper triangle of \fBa\fR is overwritten with the upper triangle of the product \fIU\fR*\fIU\fR**\fIT\fR(\fIU\fR*\fIU\fR**\fIH\fR); 
.IP
if \fIuplo\fR = \fB\'L\'\fR, then the lower triangle of \fBa\fR is overwritten with the lower triangle of the product \fIL\fR**\fIT\fR*\fIL\fR (\fIL\fR**\fIH\fR*\fIL\fR).
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
= 0: successful exit
.IP
< 0: if \fIinfo\fR = -\fIk\fR, the \fIk\fR-th argument had an illegal value
