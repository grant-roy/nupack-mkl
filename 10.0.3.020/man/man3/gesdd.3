.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?gesdd 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?gesdd \- Computes the singular value decomposition of a general rectangular matrix using a divide and conquer method.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall sgesdd\fR(\fIjobz\fR, \fIm\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIs\fR, \fIu\fR, \fIldu\fR, \fIvt\fR, \fIldvt\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall dgesdd\fR(\fIjobz\fR, \fIm\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIs\fR, \fIu\fR, \fIldu\fR, \fIvt\fR, \fIldvt\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall cgesdd\fR(\fIjobz\fR, \fIm\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIs\fR, \fIu\fR, \fIldu\fR, \fIvt\fR, \fIldvt\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall zgesdd\fR(\fIjobz\fR, \fIm\fR, \fIn\fR, \fIa\fR, \fIlda\fR, \fIs\fR, \fIu\fR, \fIldu\fR, \fIvt\fR, \fIldvt\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall gesdd\fR(\fIa\fR, \fIs\fR[,\fIu\fR] [,\fIvt\fR] [,\fIjobz\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBjobz\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'A\'\fR, \fB\'S\'\fR, \fB\'O\'\fR, or \fB\'N\'\fR. 
.IP
Specifies options for computing all or part of the matrix \fIU\fR.
.IP
If \fIjobz\fR = \fB\'A\'\fR, all \fIm\fR columns of \fIU\fR and all \fIn\fR rows of \fIV\fR**\fIT\fR are returned in the arrays \fIu\fR and \fIvt\fR; 
.IP
if \fIjobz\fR = \fB\'S\'\fR, the first min(\fIm\fR, \fIn\fR) columns of \fIU\fR and the first min(\fIm\fR, \fIn\fR) rows of \fIV\fR**\fIT\fR are returned in the arrays \fIu\fR and \fIvt\fR; 
.IP
if \fIjobz\fR = \fB\'O\'\fR, then 
.IP
if \fIm\fR\(>=  \fIn\fR, the first \fIn\fR columns of \fIU\fR are overwritten in the array \fIa\fR and all rows of \fIV\fR**\fIT\fR are returned in the array \fIvt\fR; 
.IP
if \fIm\fR<\fIn\fR, all columns of \fIU\fR are returned in the array \fIu\fR and the first \fIm\fR rows of \fIV\fR**\fIT\fR are overwritten in the array \fIa\fR;
.IP
if \fIjobz\fR = \fB\'N\'\fR, no columns of \fIU\fR or rows of \fIV\fR**\fIT\fR are computed.
.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. The number of rows of the matrix \fIA\fR (\fIm\fR\(>= 0). 
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The number of columns in \fIA\fR (\fIn\fR\(>= 0). 
.TP 10
\fBa\fR, \fBwork\fR
.NL
\fBREAL\fR for \fBsgesdd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgesdd\fR
.IP
\fBCOMPLEX\fR for \fBcgesdd\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgesdd\fR. 
.IP
Arrays: \fIa\fR(\fIlda\fR,*) is an array containing the \fIm\fR-by-\fIn\fR matrix \fIA\fR. 
.IP
The second dimension of \fIa\fR must be at least max(1, \fIn\fR).
.IP
\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR. The first dimension of the array \fIa\fR. Must be at least max(1, \fIm\fR).
.TP 10
\fBldu\fR, \fBldvt\fR
.NL
\fBINTEGER\fR. The leading dimensions of the output arrays \fIu\fR and \fIvt\fR, respectively. 
.IP
Constraints:
.IP
\fIldu\fR\(>= 1; \fIldvt\fR\(>= 1. 
.IP
If \fIjobz\fR = \fB\'S\'\fR or \fB\'A\'\fR, or \fIjobz\fR = \fB\'O\'\fR and \fIm\fR < \fIn\fR, 
.IP
then \fIldu\fR\(>=\fIm\fR; 
.IP
If \fIjobz\fR = \fB\'A\'\fR or \fIjobz\fR = \fB\'O\'\fR and \fIm\fR < \fIn\fR, 
.IP
then \fIldvt\fR\(>=\fIn\fR;
.IP
If \fIjobz\fR = \fB\'S\'\fR, \fIldvt\fR\(>= min(\fIm\fR, \fIn\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIwork\fR; \fIlwork\fR\(>= 1. 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR array, returns this value as the \fBwork\fR(1), and no error message related to \fIlwork\fR is issued by \fBxerbla\fR.
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBcgesdd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzgesdd\fR
.IP
Workspace array, \fBDIMENSION\fR at least max(1, 5*min(\fIm\fR,\fIn\fR)) if \fIjobz\fR = \fB\'N\'\fR. 
.IP
Otherwise, the dimension of \fIrwork\fR must be at least max(1, 5*(min(\fIm\fR,\fIn\fR))**2 + 7*min(\fIm\fR,\fIn\fR)). This array is used in complex flavors only.
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. Workspace array, \fBDIMENSION\fR at least max(1, 8 *min(\fIm\fR, \fIn\fR)). 
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit: 
.IP
If \fIjobz\fR = \fB\'O\'\fR, then if \fIm\fR\(>= \fIn\fR, \fIa\fR is overwritten with the first \fIn\fR columns of \fIU\fR (the left singular vectors, stored columnwise). If \fIm\fR < \fIn\fR, \fIa\fR is overwritten with the first \fIm\fR rows of \fIV\fR**\fIT\fR (the right singular vectors, stored rowwise);
.IP
If \fIjobz\fR\(!=\fB\'O\'\fR, the contents of \fIa\fR are destroyed.
.TP 10
\fBs\fR
.NL
\fBREAL\fR for single precision flavors \fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
Array, \fBDIMENSION\fR at least max(1, min(\fIm\fR,\fIn\fR)). Contains the singular values of \fIA\fR sorted so that \fIs\fR(i) \(>= \fIs\fR(i+1).
.TP 10
\fBu\fR, \fBvt\fR
.NL
\fBREAL\fR for \fBsgesdd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdgesdd\fR
.IP
\fBCOMPLEX\fR for \fBcgesdd\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzgesdd\fR. 
.IP
Arrays:
.IP
\fIu\fR(\fIldu\fR,*); the second dimension of \fIu\fR must be at least max(1, \fIm\fR) if \fIjobz\fR = \fB\'A\'\fR or \fIjobz\fR = \fB\'O\'\fR and \fIm\fR < \fIn\fR. 
.IP
If \fIjobz\fR = \fB\'S\'\fR, the second dimension of \fIu\fR must be at least max(1, min(\fIm\fR, \fIn\fR)).
.IP
If \fIjobz\fR = \fB\'A\'\fRor \fIjobz\fR = \fB\'O\'\fR and \fIm\fR < \fIn\fR, \fIu\fR contains the \fIm\fR-by-\fIm\fR orthogonal/unitary matrix \fIU\fR.
.IP
If \fIjobz\fR = \fB\'S\'\fR, \fIu\fR contains the first min(\fIm\fR, \fIn\fR) columns of \fIU\fR (the left singular vectors, stored columnwise). 
.IP
If \fIjobz\fR = \fB\'O\'\fR and \fIm\fR\(>=\fIn\fR, or \fIjobz\fR = \fB\'N\'\fR, \fIu\fR is not referenced.
.IP
\fIvt\fR(\fIldvt\fR,*); the second dimension of \fIvt\fR must be at least max(1, \fIn\fR).
.IP
If \fIjobz\fR = \fB\'A\'\fRor \fIjobz\fR = \fB\'O\'\fR and \fIm\fR\(>=\fIn\fR, \fIvt\fR contains the \fIn\fR-by-\fIn\fR orthogonal/unitary matrix \fIV\fR**\fIT\fR.
.IP
If \fIjobz\fR = \fB\'S\'\fR, \fIvt\fR contains the first min(\fIm\fR, \fIn\fR) rows of \fIV\fR**\fIT\fR (the right singular vectors, stored rowwise). 
.IP
If \fIjobz\fR = \fB\'O\'\fR and \fIm\fR < \fIn\fR, or \fIjobz\fR = \fB\'N\'\fR, \fIvt\fR is not referenced.
.TP 10
\fBwork(1)\fR
.NL
On exit, if \fIinfo\fR = 0, then \fIwork(1)\fR returns the required minimal size of \fIlwork\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful.
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value.
.IP
If \fIinfo\fR = \fIi\fR, then \fB?bdsdc\fR did not converge, updating process failed.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBgesdd\fR interface are the following:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIm\fR, \fIn\fR).
.TP 10
\fBs\fR
.NL
Holds the vector of length min(\fIm\fR, \fIn\fR).
.TP 10
\fBu\fR
.NL
Holds the matrix \fIU\fR of size (\fIm\fR,min(\fIm\fR, \fIn\fR)).
.TP 10
\fBvt\fR
.NL
Holds the matrix \fIVT\fR of size (min(\fIm\fR, \fIn\fR)\fI,n\fR).
.TP 10
\fBjob\fR
.NL
Must be \fB\'N\'\fR, \fB\'A\'\fR, \fB\'S\'\fR, or \fB\'O\'\fR. The default value is \fB\'N\'\fR.
