.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?laeda 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?laeda \- Used by \fB?stedc\fR. Computes the Z vector determining the rank-one modification of the diagonal matrix. Used when the original matrix is dense.
.SH SYNOPSIS
.PP
\fBcall slaeda\fR( \fIn\fR, \fItlvls\fR, \fIcurlvl\fR, \fIcurpbm\fR, \fIprmptr\fR, \fIperm\fR, \fIgivptr\fR, \fIgivcol\fR, \fIgivnum\fR, \fIq\fR, \fIqptr\fR, \fIz\fR, \fIztemp\fR, \fIinfo\fR)
.PP
\fBcall dlaeda\fR( \fIn\fR, \fItlvls\fR, \fIcurlvl\fR, \fIcurpbm\fR, \fIprmptr\fR, \fIperm\fR, \fIgivptr\fR, \fIgivcol\fR, \fIgivnum\fR, \fIq\fR, \fIqptr\fR, \fIz\fR, \fIztemp\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The dimension of the symmetric tridiagonal matrix (\fIn\fR\(>= 0). 
.TP 10
\fBtlvls\fR
.NL
\fBINTEGER\fR. The total number of merging levels in the overall divide and conquer tree.
.TP 10
\fBcurlvl\fR
.NL
\fBINTEGER\fR. The current level in the overall merge routine, 0 \(<= \fIcurlvl\fR \(<= \fItlvls\fR .
.TP 10
\fBcurpbm\fR
.NL
\fBINTEGER\fR. The current problem in the current level in the overall merge routine (counting from upper left to lower right).
.TP 10
\fBprmptr\fR, \fBperm\fR, \fBgivptr\fR
.NL
\fBINTEGER\fR. Arrays, dimension (\fIn\fR lg\fIn\fR ) each.
.IP
The array \fIprmptr\fR(*) contains a list of pointers which indicate where in \fIperm\fR a level\'s permutation is stored. \fIprmptr\fR(i+1) - \fIprmptr\fR(i) indicates the size of the permutation and also the size of the full, non-deflated problem.
.IP
The array \fIperm\fR(*) contains the permutations (from deflation and sorting) to be applied to each eigenblock.
.IP
The array \fIgivptr\fR(*) contains a list of pointers which indicate where in \fIgivcol\fR a level\'s Givens rotations are stored. \fIgivptr\fR(i+1) - \fIgivptr\fR(i) indicates the number of Givens rotations.
.TP 10
\fBgivcol\fR
.NL
\fBINTEGER\fR. Array, dimension (2, \fIn\fR lg\fIn\fR ).
.IP
Each pair of numbers indicates a pair of columns to take place in a Givens rotation.
.TP 10
\fBgivnum\fR
.NL
\fBREAL\fR for \fBslaeda\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlaeda\fR. 
.IP
Array, dimension (2, \fIn\fR lg\fIn\fR). 
.IP
Each number indicates the \fIS\fR value to be used in the corresponding Givens rotation.
.TP 10
\fBq\fR
.NL
\fBREAL\fR for \fBslaeda\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlaeda\fR. 
.IP
Array, dimension ( \fIn\fR**2). 
.IP
Contains the square eigenblocks from previous levels, the starting positions for blocks are given by \fIqptr\fR.
.TP 10
\fBqptr\fR
.NL
\fBINTEGER\fR. Array, dimension (\fIn\fR+2). Contains a list of pointers which indicate where in \fIq\fR an eigenblock is stored. \fBsqrt\fR( \fIqptr\fR(i+1) - \fIqptr\fR(i)) indicates the size of the block.
.TP 10
\fBztemp\fR
.NL
\fBREAL\fR for \fBslaeda\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlaeda\fR. 
.IP
Workspace array, dimension (\fIn\fR). 
.SH OUTPUT PARAMETERS

.TP 10
\fBz\fR
.NL
\fBREAL\fR for \fBslaeda\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlaeda\fR. 
.IP
Array, dimension (\fIn\fR). Contains the updating vector (the last row of the first sub-eigenvector matrix and the first row of the second sub-eigenvector matrix).
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value.
