.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?trsen 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?trsen \- Reorders the Schur factorization of a matrix and (optionally) computes the reciprocal condition numbers and invariant subspace for the selected cluster of eigenvalues.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall strsen\fR(\fIjob\fR, \fIcompq\fR, \fIselect\fR, \fIn\fR, \fIt\fR, \fIldt\fR, \fIq\fR, \fIldq\fR, \fIwr\fR, \fIwi\fR, \fIm\fR, \fIs\fR, \fIsep\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
\fBcall dtrsen\fR(\fIjob\fR, \fIcompq\fR, \fIselect\fR, \fIn\fR, \fIt\fR, \fIldt\fR, \fIq\fR, \fIldq\fR, \fIwr\fR, \fIwi\fR, \fIm\fR, \fIs\fR, \fIsep\fR, \fIwork\fR, \fIlwork\fR, \fIiwork\fR, \fIliwork\fR, \fIinfo\fR)
.PP
\fBcall ctrsen\fR(\fIjob\fR, \fIcompq\fR, \fIselect\fR, \fIn\fR, \fIt\fR, \fIldt\fR, \fIq\fR, \fIldq\fR, \fIw\fR, \fIm\fR, \fIs\fR, \fIsep\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall ztrsen\fR(\fIjob\fR, \fIcompq\fR, \fIselect\fR, \fIn\fR, \fIt\fR, \fIldt\fR, \fIq\fR, \fIldq\fR, \fIw\fR, \fIm\fR, \fIs\fR, \fIsep\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall trsen\fR(\fIt\fR, \fIselect\fR[,\fIwr\fR] [,\fIwi\fR] [,\fIm\fR] [,\fIs\fR] [,\fIsep\fR] [,\fIq\fR] [,\fIinfo\fR])
.PP
\fBcall trsen\fR(\fIt\fR, \fIselect\fR[,\fIw\fR] [,\fIm\fR] [,\fIs\fR] [,\fIsep\fR] [,\fIq\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBjob\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'N\'\fR or \fB\'E\'\fR or \fB\'V\'\fR or \fB\'B\'\fR. 
.IP
If \fIjob\fR = \fB\'N\'\fR, then no condition numbers are required. 
.IP
If \fIjob\fR = \fB\'E\'\fR, then only the condition number for the cluster of eigenvalues is computed. 
.IP
If \fIjob\fR = \fB\'V\'\fR, then only the condition number for the invariant subspace is computed. 
.IP
If \fIjob\fR = \fB\'B\'\fR, then condition numbers for both the cluster and the invariant subspace are computed.
.TP 10
\fBcompq\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'V\'\fR or \fB\'N\'\fR. 
.IP
If \fIcompq\fR = \fB\'V\'\fR, then \fIQ\fR of the Schur vectors is updated. 
.IP
If \fIcompq\fR = \fB\'N\'\fR, then no Schur vectors are updated.
.TP 10
\fBselect\fR
.NL
\fBLOGICAL\fR. 
.IP
Array, \fBDIMENSION\fR at least max (1, \fIn\fR). 
.IP
Specifies the eigenvalues in the selected cluster. To select an eigenvalue \fIlambda\fR(\fIj\fR), \fIselect\fR(\fIj\fR) must be \fB.TRUE.\fR
.IP
\fIFor real flavors\fR: to select a complex conjugate pair of eigenvalues \fIlambda\fR(\fIj\fR) and \fIlambda\fR(\fIj\fR+1) (corresponding 2 by 2 diagonal block), \fIselect\fR(\fIj\fR) and/or \fIselect\fR(\fIj\fR+1) must be \fB.TRUE.\fR; the complex conjugate \fIlambda\fR(\fIj\fR)and \fIlambda\fR(\fIj\fR+1) must be either both included in the cluster or both excluded.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrix \fIT\fR (\fIn\fR\(>= 0). 
.TP 10
\fBt\fR, \fBq\fR, \fBwork\fR
.NL
\fBREAL\fR for \fBstrsen\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdtrsen\fR
.IP
\fBCOMPLEX\fR for \fBctrsen\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBztrsen\fR. 
.IP
Arrays: 
.IP
\fIt\fR (\fIldt\fR,*) The \fIn\fR-by-\fIn\fR\fIT\fR. 
.IP
The second dimension of \fIt\fR must be at least max(1, \fIn\fR).
.IP
\fIq\fR (\fIldq\fR,*) 
.IP
If \fIcompq\fR = \fB\'V\'\fR, then \fIq\fR must contain \fIQ\fR of Schur vectors. 
.IP
If \fIcompq\fR = \fB\'N\'\fR, then \fIq\fR is not referenced. 
.IP
The second dimension of \fIq\fR must be at least max(1, \fIn\fR) if \fIcompq\fR = \fB\'V\'\fR and at least 1 if \fIcompq\fR = \fB\'N\'\fR.
.IP
\fIwork\fR is a workspace array, its dimension max(1, \fBlwork\fR).
.TP 10
\fBldt\fR
.NL
\fBINTEGER\fR. The first dimension of \fIt\fR; at least max(1, \fIn\fR).
.TP 10
\fBldq\fR
.NL
\fBINTEGER\fR. The first dimension of \fIq\fR; 
.IP
If \fIcompq\fR = \fB\'N\'\fR, then \fIldq\fR\(>= 1. 
.IP
If \fIcompq\fR = \fB\'V\'\fR, then \fIldq\fR\(>= max(1, \fIn\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR. The dimension of the array \fIwork\fR. 
.IP
If \fIjob\fR = \fB\'V\'\fR or \fB\'B\'\fR, \fIlwork\fR\(>= max(1,2*\fIm\fR*(\fIn\fR-\fIm\fR)). 
.IP
If \fIjob\fR = \fB\'E\'\fR, then \fIlwork\fR\(>= max(1, \fIm\fR*(\fIn\fR-\fIm\fR))
.IP
If \fIjob\fR = \fB\'N\'\fR, then \fIlwork\fR\(>= 1 for complex flavors and \fIlwork\fR\(>= max(1,\fIn\fR) for real flavors. 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR array, returns this value as the first entry of the \fIwork\fR array, and no error message related to \fIlwork\fR is issued by \fBxerbla\fR. 
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR.\fIiwork\fR(\fIliwork\fR) is a workspace array. The array \fIiwork\fR is not referenced if \fIjob\fR = \fB\'N\'\fR or \fB\'E\'\fR. 
.IP
The actual amount of workspace required cannot exceed \fIn\fR**2/2 if \fIjob\fR = \fB\'V\'\fR or \fB\'B\'\fR.
.TP 10
\fBliwork\fR
.NL
\fBINTEGER\fR. 
.IP
The dimension of the array \fIiwork\fR. 
.IP
If \fIjob\fR = \fB\'V\'\fR or \fB\'B\'\fR, \fIliwork\fR\(>= max(1,2\fIm\fR(\fIn\fR-\fIm\fR)). 
.IP
If \fIjob\fR = \fB\'E\'\fR or \fB\'E\'\fR, \fIliwork\fR\(>= 1. 
.IP
If \fIliwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIi\fR\fIwork\fR array, returns this value as the first entry of the \fIi\fR\fIwork\fR array, and no error message related to \fIliwork\fR is issued by \fBxerbla\fR. 
.SH OUTPUT PARAMETERS

.TP 10
\fBt\fR
.NL
Overwritten by the updated matrix \fIR\fR.
.TP 10
\fBq\fR
.NL
If \fIcompq\fR = \fB\'V\'\fR, \fIq\fR contains the updated matrix of Schur vectors; the first m columns of the \fIQ\fR form an orthogonal basis for the specified invariant subspace.
.TP 10
\fBw\fR
.NL
\fBCOMPLEX\fR for \fBctrsen\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBztrsen\fR. 
.IP
Array, \fBDIMENSION\fR at least max(1, \fIn\fR). The recorded eigenvalues of \fIR\fR. The eigenvalues are stored in the same order as on the diagonal of \fIR\fR.
.TP 10
\fBwr\fR, \fBwi\fR
.NL
\fBREAL\fR for \fBstrsen\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdtrsen\fR
.IP
Arrays, \fBDIMENSION\fR at least max(1, \fIn\fR). Contain the real and imaginary parts, respectively, of the reordered eigenvalues of \fIR\fR. The eigenvalues are stored in the same order as on the diagonal of \fIR\fR. Note that if a complex eigenvalue is sufficiently ill-conditioned, then its value may differ significantly from its value before reordering.
.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. 
.IP
\fIFor complex flavors\fR: the number of the specified invariant subspaces, which is the same as the number of selected eigenvalues (see \fIselect\fR). 
.IP
\fIFor real flavors\fR: the dimension of the specified invariant subspace. The value of \fIm\fR is obtained by counting 1 for each selected real eigenvalue and 2 for each selected complex conjugate pair of eigenvalues (see \fIselect\fR). 
.IP
Constraint: 0 \(<=\fIm\fR\(<=\fIn\fR.
.TP 10
\fBs\fR
.NL
\fBREAL\fR for single-precision flavors
.IP
\fBDOUBLE PRECISION\fR for double-precision flavors. 
.IP
If \fIjob\fR = \fB\'E\'\fR or \fB\'B\'\fR, \fIs\fR is a lower bound on the reciprocal condition number of the average of the selected cluster of eigenvalues. 
.IP
If \fIm\fR = 0 or \fIn\fR, then \fIs\fR = 1.
.IP
\fIFor real flavors\fR: if \fIinfo\fR = 1, then \fIs\fR is set to zero.\fIs\fR is not referenced if \fIjob\fR = \fB\'N\'\fR or \fB\'V\'\fR.
.TP 10
\fBsep\fR
.NL
\fBREAL\fR for single-precision flavors \fBDOUBLE PRECISION\fR for double-precision flavors. 
.IP
If \fIjob\fR = \fB\'V\'\fR or \fB\'B\'\fR, \fIsep\fR is the estimated reciprocal condition number of the specified invariant subspace. 
.IP
If \fIm\fR = 0 or \fIn\fR, then \fIsep\fR = |\fIT\fR|.
.IP
\fIFor real flavors\fR: if \fIinfo\fR = 1, then \fIsep\fR is set to zero.
.IP
\fIsep\fR is not referenced if \fIjob\fR = \fB\'N\'\fR or \fB\'E\'\fR.
.TP 10
\fBwork\fR(1)
.NL
On exit, if \fIinfo\fR = 0, then \fIwork\fR(1) returns the optimal size of \fIlwork\fR.
.TP 10
\fBiwork\fR(1)
.NL
On exit, if \fIinfo\fR = 0, then \fIiwork\fR(1) returns the optimal size of \fIliwork\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBtrsen\fR interface are the following:
.TP 10
\fBt\fR
.NL
Holds the matrix \fIT\fR of size (\fIn,n\fR).
.TP 10
\fBselect\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBwr\fR
.NL
Holds the vector of length (\fIn\fR). Used in real flavors only.
.TP 10
\fBwi\fR
.NL
Holds the vector of length (\fIn\fR). Used in real flavors only.
.TP 10
\fBw\fR
.NL
Holds the vector of length (\fIn\fR). Used in complex flavors only.
.TP 10
\fBq\fR
.NL
Holds the matrix \fIQ\fR of size (\fIn,n\fR).
.TP 10
\fBcompq\fR
.NL
Restored based on the presence of the argument \fIq\fR as follows: \fIcompq\fR = \fB\'V\'\fR, if \fIq\fR is present, \fIcompq\fR = \fB\'N\'\fR, if \fIq\fR is omitted.
.TP 10
\fBjob\fR
.NL
Restored based on the presence of arguments \fIs\fR and \fBsep\fR as follows: 
.IP
\fIjob\fR = \fB\'B\'\fR, if both \fIs\fR and \fIsep\fR are present, 
.IP
\fIjob\fR = \fB\'E\'\fR, if \fIs\fR is present and \fIsep\fR omitted, 
.IP
\fIjob\fR = \fB\'V\'\fR, if \fIs\fR is omitted and \fIsep\fR present, 
.IP
\fIjob\fR = \fB\'N\'\fR, if both \fIs\fR and \fIsep\fR are omitted.
