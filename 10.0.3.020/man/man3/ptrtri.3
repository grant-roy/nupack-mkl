.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?trtri 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?trtri \- Computes the inverse of a triangular distributed matrix.
.SH SYNOPSIS
.PP
\fBcall pstrtri\fR(\fIuplo\fR, \fIdiag\fR, \fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIinfo\fR)
.PP
\fBcall pdtrtri\fR(\fIuplo\fR, \fIdiag\fR, \fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIinfo\fR)
.PP
\fBcall pctrtri\fR(\fIuplo\fR, \fIdiag\fR, \fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIinfo\fR)
.PP
\fBcall pztrtri\fR(\fIuplo\fR, \fIdiag\fR, \fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBuplo\fR
.NL
(global) \fBCHARACTER*1\fR.  Must be \fB\'U\'\fR or \fB\'L\'\fR.
.IP
Specifies whether the distributed matrix sub(\fIA\fR) is upper or lower triangular.
.IP
If \fIuplo\fR = \fB\'U\'\fR, sub(\fIA\fR) is upper triangular. 
.IP
If \fIuplo\fR = \fB\'L\'\fR, sub(\fIA\fR) is lower triangular.
.TP 10
\fBdiag\fR
.NL
\fBCHARACTER*1\fR.  Must be \fB\'N\'\fR or \fB\'U\'\fR. 
.IP
Specifies whether or not the distributed matrix sub(\fIA\fR) is unit triangular.
.IP
If \fIdiag\fR = \fB\'N\'\fR, then sub(\fIA\fR) is non-unit triangular.
.IP
If \fIdiag\fR = \fB\'U\'\fR, then sub(\fIA\fR) is unit triangular.
.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. The number of rows and columns to be operated on, that is, the order of the distributed submatrix sub(\fIA\fR) (\fIn\fR\(>=0). 
.TP 10
\fBa\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpstrtri\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdtrtri\fR
.IP
\fBCOMPLEX\fR for \fBpctrtri\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpztrtri\fR. 
.IP
Pointer into the local memory to an array of local dimension \fIa\fR(\fIlld\(ula\fR,\fILOCc\fR(\fIja\fR+\fIn\fR-1)).
.IP
The array \fIa\fR contains the local pieces of the triangular distributed matrix sub(\fIA\fR). 
.IP
If \fIuplo\fR = \fB\'U\'\fR, the leading \fIn\fR-by-\fIn\fR upper triangular part of sub(\fIA\fR) contains the upper triangular matrix to be inverted, and the strictly lower triangular part of sub(\fIA\fR) is not referenced.
.IP
If \fIuplo\fR = \fB\'L\'\fR, the leading \fIn\fR-by-\fIn\fR lower triangular part of sub(\fIA\fR) contains the lower triangular matrix, and the strictly upper triangular part of sub(\fIA\fR) is not referenced.
.TP 10
\fBia\fR, \fBja\fR
.NL
(global) \fBINTEGER\fR.  The row and column indices in the global array \fIA\fR indicating the first row and the first column of the submatrix sub(\fIA\fR), respectively.
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIA\fR.
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
On exit, overwritten by the (triangular) inverse of  the original matrix.
.TP 10
\fBinfo\fR
.NL
(global) \fBINTEGER\fR. If \fIinfo\fR=0, the execution is successful.
.IP
\fIinfo\fR < 0: 
.IP
If the \fIi\fR-th argument is an array and the \fIj-\fRth entry had an illegal value, then \fIinfo\fR = -(\fIi\fR*100+\fIj\fR); if the \fIi-\fRth argument is a  scalar and had an illegal value, then \fIinfo\fR = \fI-i\fR.
.IP
\fIinfo\fR> 0: 
.IP
If \fIinfo\fR = \fIk\fR, \fIA\fR(\fIia+k-1\fR, \fIja+k-1\fR) is  exactly zero. The triangular matrix sub(\fIA\fR) is singular and its inverse can not be computed.
