.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?unmhr 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?unmhr \- Multiplies a general matrix by the unitary transformation matrix from a reduction to Hessenberg form determined by \fBp?gehrd\fR.
.SH SYNOPSIS
.PP
\fBcall pcunmhr\fR(\fIside\fR, \fItrans\fR, \fIm\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fItau\fR, \fIc\fR, \fIic\fR, \fIjc\fR, \fIdescc\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pzunmhr\fR(\fIside\fR, \fItrans\fR, \fIm\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fItau\fR, \fIc\fR, \fIic\fR, \fIjc\fR, \fIdescc\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBside\fR
.NL
(global) \fBCHARACTER\fR
.IP
=\fB\'L\'\fR: \fIQ\fR or \fIQ\fR**\fIH\fR is applied from the left. 
.IP
=\fB\'R\'\fR: \fIQ\fR or \fIQ\fR**\fIH\fR is applied from the right.
.TP 10
\fBtrans\fR
.NL
(global) \fBCHARACTER\fR
.IP
=\fB\'N\'\fR, no transpose, \fIQ\fR is applied. 
.IP
=\fB\'C\'\fR, conjugate transpose, \fIQ\fR**\fIH\fR is applied.
.TP 10
\fBm\fR
.NL
(global) \fBINTEGER\fR. The number of rows in the distributed submatrix sub (\fIC\fR) (\fIm\fR\(>=0). 
.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. The number of columns in the distributed submatrix sub (\fIC\fR) (\fIn\fR\(>=0).
.TP 10
\fBilo\fR, \fBihi\fR
.NL
(global) \fBINTEGER\fR
.IP
These must be the same parameters \fIilo\fR and \fIihi\fR, respectively, as supplied to \fBp?gehrd\fR. \fIQ\fR is equal to the unit matrix except in the distributed submatrix\fI Q\fR(\fIia\fR+\fIilo\fR:\fIia\fR+\fIihi\fR-1,\fIia\fR+\fIilo\fR:\fIja\fR+\fIihi\fR-1). 
.IP
If \fIside\fR\fB =\'L\'\fR, then 1\(<=\fIilo\fR\(<=\fIihi\fR\(<=max(1,\fIm\fR). 
.IP
If \fIside\fR = \fB\'R\'\fR, then 1\(<=\fIilo\fR\(<=\fIihi\fR\(<=max(1,\fIn\fR)
.IP
\fIilo\fR and \fIihi\fR are relative indexes.
.TP 10
\fBa\fR
.NL
(local)
.IP
\fBCOMPLEX\fR for \fBpcunmhr\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzunmhr\fR. 
.IP
Pointer into the local memory to an array of dimension (\fIlld\(ula\fR, \fILOC\fR\fIc\fR(\fIja\fR+\fIm\fR-1)) if \fIside\fR=\fB\'L\'\fR, and (\fIlld\(ula\fR, \fILOC\fR\fIc\fR(\fIja\fR+\fIn\fR-1)) if \fIside\fR = \fB\'R\'\fR. 
.IP
Contains the vectors which define the elementary reflectors, as returned by \fBp?gehrd\fR. 
.TP 10
\fBia\fR, \fBja\fR
.NL
(global) \fBINTEGER\fR.  The row and column indices in the global array \fIa\fR indicating the first row and the first column of the submatrix \fIA\fR, respectively.
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIA\fR.
.TP 10
\fBtau\fR
.NL
(local)
.IP
\fBCOMPLEX\fR for \fBpcunmhr\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzunmhr\fR. 
.IP
Array, \fBDIMENSION\fR\fILOCc\fR(\fIja\fR+\fIm\fR-2), if \fIside\fR = \fB\'L\'\fR, and \fILOCc\fR(\fIja\fR+\fIn\fR-2) if \fIside\fR = \fB\'R\'\fR. 
.IP
This array contains the scalar factors \fItau\fR(\fIj\fR) of the elementary reflectors \fIH\fR(\fIj\fR) as returned by \fBp?gehrd\fR. \fItau\fR is tied to the distributed matrix \fIA\fR. 
.TP 10
\fBc\fR
.NL
(local)
.IP
\fBCOMPLEX\fR for \fBpcunmhr\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzunmhr\fR. 
.IP
Pointer into the local memory to an array of dimension (\fIlld\(ulc\fR, \fILOCc\fR(\fIjc\fR+\fIn\fR-1)). 
.IP
Contains the local pieces of the distributed matrix sub(\fIC\fR). 
.TP 10
\fBic\fR, \fBjc\fR
.NL
(global) \fBINTEGER\fR.  The row and column indices in the global array \fIc\fR indicating the first row and the first column of the submatrix \fIC\fR, respectively.
.TP 10
\fBdescc\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIC\fR.
.TP 10
\fBwork\fR
.NL
(local)
.IP
\fBCOMPLEX\fR for \fBpcunmhr\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzunmhr\fR. 
.IP
Workspace array with dimension \fIlwork\fR.
.TP 10
\fBlwork\fR
.NL
(local or global)
.IP
The dimension of the array \fIwork\fR. 
.IP
\fIlwork\fR must be at least \fIiaa\fR = \fIia\fR + \fIilo\fR;\fIjaa\fR = \fIja\fR+\fIilo\fR-1;
.IP
If \fIside\fR = \fB\'L\'\fR, \fImi\fR = \fIihi\fR-\fIilo\fR; \fIni\fR = \fIn\fR; \fIicc\fR = \fIic\fR + \fIilo\fR; \fIjcc\fR = \fIjc\fR; \fIlwork\fR \(>= \fBmax\fR((\fInb\(ula\fR*(\fInb\(ula\fR-1))/2, (\fInqc\fR0+\fImpc\fR0)*\fInb\(ula\fR) + \fInb\(ula\fR*\fInb\(ula\fR
.IP
else if \fIside\fR = \fB\'R\'\fR, 
.IP
\fImi\fR = \fIm\fR; \fIni\fR = \fIihi\fR-\fIilo\fR; \fIicc\fR = \fIic\fR; \fIjcc\fR = \fIjc\fR + \fIilo\fR; \fIlwork\fR \(>= \fBmax\fR((\fInb\(ula\fR*(\fInb\(ula\fR-1))/2, (\fInqc\fR0 + \fBmax\fR(\fInpa\fR0+\fBnumroc\fR(\fBnumroc\fR(\fIni\fR+\fIicoffc\fR, \fInb\(ula\fR, 0, 0, \fBNPCOL\fR), \fInb\(ula\fR, 0, 0, \fIlcmq\fR ), \fImpc\fR0))*\fInb\(ula\fR) + \fInb\(ula\fR*\fInb\(ula\fR
.IP
end if 
.IP
where \fIlcmq\fR = \fIlcm\fR/\fBNPCOL\fR with \fIlcm\fR = \fBilcm\fR(\fBNPROW\fR, \fBNPCOL\fR),
.IP
\fIiroffa\fR = \fBmod\fR(\fIiaa\fR-1, \fImb\(ula\fR), 
.IP
\fIicoffa\fR = \fBmod\fR(\fIjaa\fR-1, \fInb\(ula\fR), 
.IP
\fIiarow\fR = \fBindxg2p\fR(\fIiaa\fR, \fImb\(ula\fR, \fBMYROW\fR, \fIrsrc\(ula\fR, \fBNPROW\fR), 
.IP
\fInpa\fR0 = \fBnumroc\fR(\fIni\fR+\fIiroffa\fR, \fImb\(ula\fR, \fBMYROW\fR, \fIiarow\fR, \fBNPROW\fR), 
.IP
\fIiroffc\fR = \fBmod\fR(\fIicc\fR-1, \fImb\(ulc\fR), 
.IP
\fIicoffc\fR = \fBmod\fR(\fIjcc\fR-1, \fInb\(ulc\fR), 
.IP
\fIicrow\fR = \fBindxg2p\fR(\fIicc\fR, \fImb\(ulc\fR, \fBMYROW\fR, \fIrsrc\(ulc\fR, \fBNPROW\fR), 
.IP
\fIiccol\fR = \fBindxg2p\fR(\fIjcc\fR, \fInb\(ulc\fR, \fBMYCOL\fR, \fIcsrc\(ulc\fR, \fBNPCOL\fR), 
.IP
\fImpc\fR0 = \fBnumroc\fR(\fImi\fR+\fIiroffc\fR, \fImb\(ulc\fR, \fBMYROW\fR, \fIicrow\fR, \fBNPROW\fR), 
.IP
\fInqc\fR0 = \fBnumroc\fR(\fIni\fR+\fIicoffc\fR, \fInb\(ulc\fR, \fBMYCOL\fR, \fIiccol\fR, \fBNPCOL\fR), 
.IP
\fBilcm\fR, \fBindxg2p\fR and \fBnumroc\fR are ScaLAPACK tool functions; \fBMYROW\fR, \fBMYCOL\fR, \fBNPROW\fR and \fBNPCOL\fR can be determined by calling the subroutine \fBblacs\(ulgridinfo\fR.
.IP
If \fIlwork\fR = -1, then \fIlwork\fR is global input and a workspace query is assumed; the routine only calculates the minimum and optimal size for all work arrays. Each of these values is returned in the first entry of the corresponding work array, and no error message is issued by \fBpxerbla\fR. 
.SH OUTPUT PARAMETERS

.TP 10
\fBc\fR
.NL
\fIC\fR is overwritten by \fIQ\fR* sub(\fIC\fR) or \fIQ\'\fR*sub(\fIC\fR) or sub(\fIC\fR)*\fIQ\'\fR or sub(\fIC\fR)*\fIQ\fR. 
.TP 10
\fIwork\fR(1)
.NL
On exit \fIwork\fR(1) contains the minimum value of \fIlwork\fR required for optimum performance. 
.TP 10
\fBinfo\fR
.NL
(global) \fBINTEGER\fR. 
.IP
= 0: the execution is successful.
.IP
< 0: if the \fIi\fR-th argument is an array and the \fIj\fR-entry had an illegal value, then \fIinfo\fR = - (\fIi\fR* 100+\fIj\fR), if the \fIi\fR-th argument is a scalar and had an illegal value, then \fIinfo\fR = -\fIi\fR. 
