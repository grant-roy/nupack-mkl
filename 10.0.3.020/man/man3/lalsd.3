.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?lalsd 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?lalsd \- Uses the singular value decomposition of A to solve the least squares problem.
.SH SYNOPSIS
.PP
\fBcall slalsd\fR( \fIuplo\fR, \fIsmlsiz\fR, \fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIb\fR, \fIldb\fR, \fIrcond\fR, \fIrank\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall dlalsd\fR( \fIuplo\fR, \fIsmlsiz\fR, \fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIb\fR, \fIldb\fR, \fIrcond\fR, \fIrank\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall clalsd\fR( \fIuplo\fR, \fIsmlsiz\fR, \fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIb\fR, \fIldb\fR, \fIrcond\fR, \fIrank\fR, \fIwork\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall zlalsd\fR( \fIuplo\fR, \fIsmlsiz\fR, \fIn\fR, \fInrhs\fR, \fId\fR, \fIe\fR, \fIb\fR, \fIldb\fR, \fIrcond\fR, \fIrank\fR, \fIwork\fR, \fIrwork\fR, \fIiwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR. 
.IP
If \fIuplo\fR = \fB\'U\'\fR, \fId\fR and \fIe\fR define an upper bidiagonal matrix. 
.IP
If \fIuplo\fR = \fB\'L\'\fR, \fId\fR and \fIe\fR define a lower bidiagonal matrix.
.TP 10
\fBsmlsiz\fR
.NL
\fBINTEGER\fR. The maximum size of the subproblems at the bottom of the computation tree.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The dimension of the  bidiagonal matrix.
.IP
\fIn\fR\(>= 0.
.TP 10
\fBnrhs\fR
.NL
\fBINTEGER\fR. The number of columns of \fIB\fR. Must be at least 1.
.TP 10
\fBd\fR
.NL
\fBREAL\fR for \fBslalsd\fR/\fBclalsd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsd\fR/\fBzlalsd\fR
.IP
Array, \fBDIMENSION\fR (\fIn\fR). On entry, \fId\fR contains the main diagonal of the bidiagonal matrix. 
.TP 10
\fBe\fR
.NL
\fBREAL\fR for \fBslalsd\fR/\fBclalsd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsd\fR/\fBzlalsd\fR
.IP
Array, \fBDIMENSION\fR (\fIn\fR-1). Contains the super-diagonal entries of the bidiagonal matrix. On exit, \fIe\fR is destroyed.
.TP 10
\fBb\fR
.NL
\fBREAL\fR for \fBslalsd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsd\fR
.IP
\fBCOMPLEX\fR for \fBclalsd\fR
.IP
\fBCOMPLEX*16\fR for \fBzlalsd\fR
.IP
Array, \fBDIMENSION\fR (\fIldb\fR,\fInrhs\fR). 
.IP
On input, \fIb\fR contains the right hand sides of the least squares problem. On output, \fIb\fR contains the solution X.
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR. The leading dimension of \fIb\fR in the calling subprogram. Must be at least max(1,\fIn\fR).
.TP 10
\fBrcond\fR
.NL
\fBREAL\fR for \fBslalsd\fR/\fBclalsd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsd\fR/\fBzlalsd\fR
.IP
The singular values of \fIA\fR less than or equal to \fIrcond\fR times the largest singular value are treated as zero in solving the least squares problem. If \fIrcond\fR is negative, machine precision is used instead. For example, for the least squares problem  diag(\fIS\fR)*\fIX\fR=\fIB\fR, where diag(\fIS\fR) is a diagonal matrix of singular values, the solution is \fIX\fR(\fIi\fR)=\fIB\fR(\fIi\fR)/\fIS\fR(\fIi\fR) if \fIS\fR(\fIi\fR) is greater than \fIrcond\fR *max(\fIS\fR), and \fIX\fR(\fIi\fR)=0 if \fIS\fR(\fIi\fR) is less than or equal to \fIrcond\fR *max(\fIS\fR).
.TP 10
\fBrank\fR
.NL
\fBINTEGER\fR. The number of singular values of \fIA\fR greater than \fIrcond\fR times the largest singular value.
.TP 10
\fBwork\fR
.NL
\fBREAL\fR for \fBslalsd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlalsd\fR
.IP
\fBCOMPLEX\fR for \fBclalsd\fR
.IP
\fBCOMPLEX*16\fR for \fBzlalsd\fR
.IP
Workspace array.
.IP
\fBDIMENSION\fR for real flavors at least 
.IP
(9\fIn\fR+2\fIn\fR*\fIsmlsiz\fR+8\fIn\fR*\fInlvl\fR+\fIn\fR*\fInrhs\fR+(\fIsmlsiz\fR+1)**\fI2\fR), 
.IP
where 
.IP
\fInlvl\fR = max(0, int(log2(\fIn\fR/(\fIsmlsiz\fR+1))) + 1).
.IP
\fBDIMENSION\fR for complex flavors is (\fIn\fR*\fInrhs\fR). 
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBclalsd\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzlalsd\fR
.IP
Workspace array, used with complex flavors only. 
.IP
\fBDIMENSION\fR at least (9\fIn\fR + 2\fIn\fR*\fIsmlsiz\fR + 8\fIn\fR*\fInlvl\fR + 3*\fImlsiz\fR*\fInrhs\fR + (\fIsmlsiz\fR+1)**2), 
.IP
where 
.IP
\fInlvl\fR = max(0, int(log2(min(\fIm\fR,\fIn\fR)/(\fIsmlsiz\fR+1))) + 1).
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR. 
.IP
Workspace array of \fBDIMENSION\fR(3\fIn\fR*\fInlvl\fR + 11\fIn\fR). 
.SH OUTPUT PARAMETERS

.TP 10
\fBd\fR
.NL
On exit, if \fIinfo\fR = 0, \fId\fR contains singular values of the bidiagonal matrix.
.TP 10
\fBe\fR
.NL
On exit, destroyed.
.TP 10
\fBb\fR
.NL
On exit, \fIb\fR contains the solution \fIX\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0:  successful exit. 
.IP
If \fIinfo\fR = -\fIi\fR < 0, the \fIi\fR-th argument had an illegal value. 
.IP
If \fIinfo\fR > 0:  The algorithm failed to compute a singular value while working on the submatrix lying in rows and columns \fIinfo\fR/(\fIn\fR+1) through mod(\fIinfo\fR,\fIn\fR+1).
