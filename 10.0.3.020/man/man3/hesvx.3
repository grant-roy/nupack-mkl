.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?hesvx 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?hesvx \- Uses the diagonal pivoting factorization  to compute the solution to the complex system of linear equations with a Hermitian matrix A, and provides error bounds on the solution.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall chesvx\fR( \fIfact\fR, \fIuplo\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIaf\fR, \fIldaf\fR, \fIipiv\fR, \fIb\fR, \fIldb\fR, \fIx\fR, \fIldx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIinfo\fR)
.PP
\fBcall zhesvx\fR( \fIfact\fR, \fIuplo\fR, \fIn\fR, \fInrhs\fR, \fIa\fR, \fIlda\fR, \fIaf\fR, \fIldaf\fR, \fIipiv\fR, \fIb\fR, \fIldb\fR, \fIx\fR, \fIldx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIlwork\fR, \fIrwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall hesvx\fR( \fIa\fR, \fIb\fR, \fIx\fR[,\fIuplo\fR] [,\fIaf\fR] [,\fIipiv\fR] [,\fIfact\fR] [,\fIferr\fR] [,\fIberr\fR] [,\fIrcond\fR] [,\fIinfo\fR] )
.SH INPUT PARAMETERS

.TP 10
\fBfact\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'F\'\fR or \fB\'N\'\fR.
.IP
Specifies whether or not the factored form of the matrix \fIA\fR has been supplied on entry.
.IP
If \fIfact\fR = \fB\'F\'\fR:  on entry, \fIaf\fR and \fIipiv\fR contain the factored form of \fIA\fR. Arrays \fIa\fR, \fIaf\fR, and \fIipiv\fR are not modified.
.IP
If \fIfact\fR = \fB\'N\'\fR, the matrix \fIA\fR is copied to \fIaf\fR and factored.
.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR.  Must be \fB\'U\'\fR or \fB\'L\'\fR.
.IP
Indicates whether the upper or lower triangular part of \fIA\fR is stored and how \fIA\fR is factored:
.IP
If \fIuplo\fR = \fB\'U\'\fR, the array \fIa\fR stores the upper triangular part of the Hermitian matrix \fIA\fR, and \fIA\fR is factored as \fIU*D*U\fR**\fIH\fR.
.IP
If \fIuplo\fR = \fB\'L\'\fR, the array \fIa\fR stores the lower triangular part of the Hermitian matrix \fIA\fR;  \fIA\fR is factored as \fIL*D*L\fR**\fIH\fR.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR.  The order of matrix \fIA\fR; \fIn\fR\(>= 0.
.TP 10
\fBnrhs\fR
.NL
\fBINTEGER\fR.  The number of right-hand sides, the number of columns in \fIB\fR; \fInrhs\fR\(>= 0.
.TP 10
\fBa\fR,\fBaf\fR,\fBb\fR,\fBwork\fR
.NL
\fBCOMPLEX\fR for \fBchesvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzhesvx\fR. 
.IP
Arrays: \fIa\fR(\fIlda\fR,*), \fIaf\fR(\fIldaf\fR,*), \fIb\fR(\fIldb\fR,*), \fIwork\fR(*).
.IP
The array \fIa\fR contains the upper or the lower triangular part of the Hermitian matrix \fIA\fR (see \fIuplo\fR). The second dimension of \fIa\fR must be at least max(1,\fIn\fR).
.IP
The array \fIaf\fR is an input argument if \fIfact\fR = \fB\'F\'\fR. It contains he block diagonal matrix \fID\fR and the multipliers used to obtain the factor \fIU\fR or \fIL\fR from the factorization \fIA\fR = \fIU*D*U\fR**\fIH\fR or \fIA\fR = \fIL*D*L\fR**\fIH\fR as computed by \fB?hetrf\fR. The second dimension of \fIaf\fR must be at least max(1,\fIn\fR).
.IP
The array \fIb\fR contains the matrix \fIB\fR whose columns are the right-hand sides for the systems of equations. The second dimension of \fIb\fR must be at least max(1, \fInrhs\fR).
.IP
\fIwork\fR(*) is a workspace array of dimension at least max(1, \fIlwork\fR).
.TP 10
\fBlda\fR
.NL
\fBINTEGER\fR.  The first dimension of \fIa\fR; \fIlda\fR\(>= max(1, \fIn\fR).
.TP 10
\fBldaf\fR
.NL
\fBINTEGER\fR.  The first dimension of \fIaf\fR; \fIldaf\fR\(>= max(1, \fIn\fR).
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR.  The first dimension of \fIb\fR; \fIldb\fR\(>= max(1, \fIn\fR).
.TP 10
\fBipiv\fR
.NL
\fBINTEGER\fR.
.IP
Array, \fBDIMENSION\fR at least max(1, \fIn\fR). The array \fIipiv\fR is an input argument if \fIfact\fR = \fB\'F\'\fR. It contains  details of the interchanges and the block structure of \fID\fR, as determined by \fB?hetrf\fR.
.IP
If \fIipiv\fR(\fIi\fR) = \fIk\fR > 0, then \fId\fR(\fIi\fR,\fIi\fR) is a 1-by-1 diagonal block, and the \fIi\fR-th row and column of \fIA\fR was interchanged with the \fIk\fR-th row and column.
.IP
If \fIuplo\fR = \fB\'U\'\fRand \fIipiv\fR(\fIi\fR) =\fIipiv\fR(\fIi\fR-1) = -\fIm\fR < 0, then \fID\fR has a 2-by-2 block in rows/columns \fIi\fR and \fIi\fR-1, and (\fIi\fR-1)-th row and column of \fIA\fR was interchanged with the \fIm\fR-th row and column.
.IP
If \fIuplo\fR = \fB\'L\'\fRand \fIipiv\fR(\fIi\fR) =\fIipiv\fR(\fIi\fR+1) = -\fIm\fR < 0, then \fID\fR has a 2-by-2 block in rows/columns \fIi\fR and \fIi\fR+1, and (\fIi\fR+1)-th row and column of \fIA\fR was interchanged with the \fIm\fR-th row and column.
.TP 10
\fBldx\fR
.NL
\fBINTEGER\fR.  The leading dimension of the output array \fIx\fR; \fIldx\fR\(>= max(1, \fIn\fR).
.TP 10
\fBlwork\fR
.NL
\fBINTEGER\fR.  The size of the \fIwork\fR array. 
.IP
If \fIlwork\fR = -1, then a workspace query is assumed; the routine only calculates the optimal size of the \fIwork\fR array, returns this value as the first entry of the \fIwork\fR array, and no error message related to \fIlwork\fR is issued by \fBxerbla\fR. 
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBchesvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzhesvx\fR. 
.IP
Workspace array, \fBDIMENSION\fR at least max(1, \fIn\fR).
.SH OUTPUT PARAMETERS

.TP 10
\fBx\fR
.NL
\fBCOMPLEX\fR for \fBchesvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzhesvx\fR.
.IP
Array, \fBDIMENSION\fR(\fIldx\fR,*).
.IP
If \fIinfo\fR = 0 or \fIinfo\fR = \fIn\fR+1, the array \fIx\fR contains the solution matrix \fIX\fR to the system of equations. The second dimension of \fIx\fR must be at least max(1,\fInrhs\fR).
.TP 10
\fBaf\fR, \fBipiv\fR
.NL
These arrays are output arguments if \fIfact\fR = \fB\'N\'\fR. See the description of \fIaf\fR, \fIipiv\fR in \fIInput Arguments\fRsection.
.TP 10
\fBrcond\fR
.NL
\fBREAL\fR for \fBchesvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzhesvx\fR.
.IP
An estimate of the reciprocal condition number of the matrix \fIA\fR. If \fIrcond\fR is less than the machine precision (in particular, if \fIrcond\fR = 0), the matrix is singular to working precision.  This condition is indicated by a return code of \fIinfo \fR> 0.
.TP 10
\fBferr\fR
.NL
\fBREAL\fR for \fBchesvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzhesvx\fR.
.IP
Array, \fBDIMENSION\fR at least max(1, \fInrhs\fR). Contains the estimated forward error bound for each solution vector \fIx\fR(\fIj\fR) (the \fIj\fR-th column of the solution matrix \fIX\fR).   If \fIxtrue\fR is the true solution corresponding to \fIx\fR(\fIj\fR), \fIferr\fR(\fIj\fR)  is an estimated upper bound for the magnitude of the largest element in (\fIx\fR(\fIj\fR) - \fIxtrue\fR) divided by the magnitude of the largest element in \fIx\fR(\fIj\fR). The estimate is as reliable as the estimate for \fBrcon\fR, and is almost always a slight overestimate of the true error.
.TP 10
\fBberr\fR
.NL
\fBREAL\fR for \fBchesvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzhesvx\fR.
.IP
Array, \fBDIMENSION\fR at least max(1, \fInrhs\fR). Contains the component-wise relative backward error for each solution vector \fIx\fR(\fIj\fR), that is, the smallest relative chnage in any element of \fIA\fR or \fIB\fR that makes \fIx\fR(\fIj\fR) an exact solution.
.TP 10
\fBwork\fR(1)
.NL
If \fIinfo\fR = 0, on exit \fIwork\fR(1) contains the minimum value of \fIlwork\fR required for optimum performance. Use this \fIlwork\fR for subsequent runs.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. If \fIinfo\fR = 0, the execution is successful.
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value.
.IP
If \fIinfo\fR = \fIi\fR, and \fIi\fR\(<=\fIn\fR, then \fId\fR(\fIi\fR,\fIi\fR) is exactly zero. The factorization has been completed, but the block diagonal matrix \fID\fR is exactly singular, so the solution  and error bounds could not be computed; \fIrcond\fR = 0 is returned.
.IP
If \fIinfo\fR = \fIi\fR, and \fIi\fR = \fIn\fR + 1, then \fID\fR is nonsingular, but \fIrcond\fR is less than machine precision, meaning that the matrix is singular to working precision. Nevertheless, the  solution and error bounds are computed because there are a number of situations where the  computed solution can be more accurate than the value of \fIrcond\fR would suggest.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77  counterparts. For general conventions applied to skip redundant or reconstructible arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBhesvx\fR interface are as follows:
.TP 10
\fBa\fR
.NL
Holds the matrix \fIA\fR of size (\fIn\fR,\fIn\fR).
.TP 10
\fBb\fR
.NL
Holds the matrix \fIB\fR of size (\fIn\fR,\fInrhs\fR).
.TP 10
\fBx\fR
.NL
Holds the matrix \fIX\fR of size (\fIn\fR,\fInrhs\fR).
.TP 10
\fBaf\fR
.NL
Holds the matrix \fIAF\fR of size (\fIn\fR,\fIn\fR).
.TP 10
\fBipiv\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBferr\fR
.NL
Holds the vector of length (\fInrhs\fR).
.TP 10
\fBberr\fR
.NL
Holds the vector of length (\fInrhs\fR).
.TP 10
\fBuplo\fR
.NL
Must be \fB\'U\'\fR or \fB\'L\'\fR. The default value is \fB\'U\'\fR.
.TP 10
\fBfact\fR
.NL
Must be \fB\'N\'\fR or \fB\'F\'\fR. The default value is \fB\'N\'\fR. If \fIfact\fR = \fB\'F\'\fR, then both arguments \fIaf\fR and \fIipiv\fR must be present; otherwise, an error is returned.
