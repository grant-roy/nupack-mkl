.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?pbsvx 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?pbsvx \- Uses the Cholesky factorization to compute the solution to the system of linear equations with a symmetric (Hermitian) positive-definite band matrix A, and provides error bounds on the solution.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall spbsvx\fR( \fIfact\fR, \fIuplo\fR, \fIn\fR, \fIkd\fR, \fInrhs\fR, \fIab\fR, \fIldab\fR, \fIafb\fR, \fIldafb\fR, \fIequed\fR, \fIs\fR, \fIb\fR, \fIldb\fR, \fIx\fR, \fIldx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall dpbsvx\fR( \fIfact\fR, \fIuplo\fR, \fIn\fR, \fIkd\fR, \fInrhs\fR, \fIab\fR, \fIldab\fR, \fIafb\fR, \fIldafb\fR, \fIequed\fR, \fIs\fR, \fIb\fR, \fIldb\fR, \fIx\fR, \fIldx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall cpbsvx\fR( \fIfact\fR, \fIuplo\fR, \fIn\fR, \fIkd\fR, \fInrhs\fR, \fIab\fR, \fIldab\fR, \fIafb\fR, \fIldafb\fR, \fIequed\fR, \fIs\fR, \fIb\fR, \fIldb\fR, \fIx\fR, \fIldx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
\fBcall zpbsvx\fR( \fIfact\fR, \fIuplo\fR, \fIn\fR, \fIkd\fR, \fInrhs\fR, \fIab\fR, \fIldab\fR, \fIafb\fR, \fIldafb\fR, \fIequed\fR, \fIs\fR, \fIb\fR, \fIldb\fR, \fIx\fR, \fIldx\fR, \fIrcond\fR, \fIferr\fR, \fIberr\fR, \fIwork\fR, \fIiwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall pbsvx\fR( \fIa\fR, \fIb\fR, \fIx\fR[,\fIuplo\fR] [,\fIaf\fR] [,\fIfact\fR] [,\fIequed\fR] [,\fIs\fR] [,\fIferr\fR] [,\fIberr\fR] [,\fIrcond\fR] [,\fIinfo\fR] )
.SH INPUT PARAMETERS

.TP 10
\fBfact\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'F\'\fR, \fB\'N\'\fR, or \fB\'E\'\fR.
.IP
Specifies whether or not the factored form of the matrix \fIA\fR is supplied on entry, and if not, whether the matrix \fIA\fR should be equilibrated before it is factored.
.IP
If \fIfact\fR = \fB\'F\'\fR:  on entry, \fIafb\fR contains the factored form of \fIA\fR. If \fIequed\fR = \fB\'Y\'\fR, the matrix \fIA\fR has been equilibrated with scaling factors given by \fIs\fR. \fIab\fR and \fIafb\fR will not be modified.
.IP
If \fIfact\fR = \fB\'N\'\fR, the matrix \fIA\fR will be copied to \fIafb\fR and factored.
.IP
If \fIfact\fR = \fB\'E\'\fR, the matrix \fIA\fR will be equilibrated if necessary, then copied to \fIafb\fR and factored.
.TP 10
\fBuplo\fR
.NL
\fBCHARACTER*1\fR.  Must be \fB\'U\'\fR or \fB\'L\'\fR.
.IP
Indicates whether the upper or lower triangular part of \fIA\fR is stored: 
.IP
If \fIuplo\fR = \fB\'U\'\fR, the upper triangle of  \fIA\fR is stored. 
.IP
If \fIuplo\fR = \fB\'L\'\fR, the lower triangle of  \fIA\fR is stored.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR.  The order of matrix \fIA\fR; \fIn\fR\(>= 0.
.TP 10
\fBkd\fR
.NL
\fBINTEGER\fR.  The number of superdiagonals or subdiagonals in the matrix \fIA\fR; \fIkd\fR\(>= 0.
.TP 10
\fBnrhs\fR
.NL
\fBINTEGER\fR.  The number of right-hand sides, the number of columns in \fIB\fR; \fInrhs\fR\(>= 0.
.TP 10
\fBab\fR,\fBafb\fR,\fBb\fR,\fBwork\fR
.NL
\fBREAL\fR for \fBspbsvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdpbsvx\fR
.IP
\fBCOMPLEX\fR for \fBcpbsvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzpbsvx\fR. 
.IP
Arrays: \fIab\fR(\fIldab\fR,*), \fIafb\fR(\fIldab\fR,*), \fIb\fR(\fIldb\fR,*), \fIwork\fR(*).
.IP
The array \fIab\fR contains the upper or lower triangle of the matrix \fIA\fR in 
.IP
If \fIfact\fR = \fB\'F\'\fR and \fIequed\fR = \fB\'Y\'\fR, then \fIab\fR must contain the equilibrated matrix  \fIdiag\fR(\fIs\fR)*\fIA\fR*\fIdiag\fR(\fIs\fR). The second dimension of \fIab\fR must be at least max(1, \fIn\fR).
.IP
The array \fIafb\fR is an input argument if \fIfact\fR = \fB\'F\'\fR. It contains the triangular factor \fIU\fR or \fIL\fR from the Cholesky factorization of the band matrix \fIA\fR in the same storage format as \fIA\fR. If \fIequed\fR = \fB\'Y\'\fR, then \fIafb\fR is the factored form of the equilibrated matrix \fIA\fR. The second dimension of \fIafb\fR must be at least max(1, \fIn\fR).
.IP
The array \fIb\fR contains the matrix \fIB\fR whose columns are the right-hand sides for the systems of equations. The second dimension of \fIb\fR must be at least max(1, \fInrhs\fR).
.IP
\fIwork\fR(*) is a workspace array.
.IP
The dimension of \fIwork\fR must be at least max(1,3*\fIn\fR) for real flavors, and at least max(1,2*\fIn\fR) for complex flavors.
.TP 10
\fBldab\fR
.NL
\fBINTEGER\fR.  The first dimension of \fIab\fR; \fIldab\fR\(>=\fIkd\fR+1.
.TP 10
\fBldafb\fR
.NL
\fBINTEGER\fR.  The first dimension of \fIafb\fR; \fIldafb\fR\(>=\fIkd\fR+1.
.TP 10
\fBldb\fR
.NL
\fBINTEGER\fR.  The first dimension of \fIb\fR; \fIldb\fR\(>= max(1, \fIn\fR).
.TP 10
\fBequed\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'N\'\fR or \fB\'Y\'\fR.\fI\fR
.IP
\fIequed\fR is an input argument if \fIfact\fR = \fB\'F\'\fR. It specifies the form of equilibration that was done:
.IP
if \fIequed\fR = \fB\'N\'\fR, no equilibration was done (always true if \fIfact\fR = \fB\'N\'\fR) 
.IP
if \fIequed\fR = \fB\'Y\'\fR, equilibration was done, that is, \fIA\fR has been replaced by \fIdiag\fR(\fIs\fR)*\fIA\fR*\fIdiag\fR(\fIs\fR).
.TP 10
\fBs\fR
.NL
\fBREAL\fR for single precision flavors
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
Array, \fBDIMENSION\fR  (\fIn\fR). The array \fIs\fR contains the scale factors for \fIA\fR. This array is an input argument if \fIfact\fR = \fB\'F\'\fR only; otherwise it is an output argument. 
.IP
If \fIequed\fR = \fB\'N\'\fR, \fIs\fR is not accessed. 
.IP
If \fIfact\fR = \fB\'F\'\fR and \fIequed\fR = \fB\'Y\'\fR, each element of \fIs\fR must be positive.
.TP 10
\fBldx\fR
.NL
\fBINTEGER\fR.  The first dimension of the output array \fIx\fR; \fIldx\fR\(>= max(1, \fIn\fR).
.TP 10
\fBiwork\fR
.NL
\fBINTEGER\fR.  Workspace array, \fBDIMENSION\fR at least max(1, \fIn\fR); used in real flavors only. 
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBcpbsvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBzpbsvx\fR. 
.IP
Workspace array, \fBDIMENSION\fR at least max(1, \fIn\fR); used in complex flavors only. 
.SH OUTPUT PARAMETERS

.TP 10
\fBx\fR
.NL
\fBREAL\fR for \fBspbsvx\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdpbsvx\fR
.IP
\fBCOMPLEX\fR for \fBcpbsvx\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBzpbsvx\fR.
.IP
Array, \fBDIMENSION\fR(\fIldx\fR,*).
.IP
If \fIinfo\fR = 0 or \fIinfo\fR = \fIn\fR+1, the array \fIx\fR contains the solution matrix \fIX\fR to the \fIoriginal\fRsystem of equations.  Note that if \fIequed\fR = \fB\'Y\'\fR, \fIA\fR and \fIB\fR are modified on exit, and the solution to the equilibrated system is inv(\fIdiag\fR(\fIs\fR))*\fIX\fR. The second dimension of \fIx\fR must be at least max(1,\fInrhs\fR).
.TP 10
\fBab\fR
.NL
On exit, if \fIfact\fR = \fB\'E\'\fRand \fIequed\fR = \fB\'Y\'\fR, \fIA\fR is overwritten by \fIdiag\fR(\fIs\fR)*\fIA\fR*\fIdiag\fR(\fIs\fR).
.TP 10
\fBafb\fR
.NL
If \fIfact\fR = \fB\'N\'\fRor \fB\'E\'\fR, then \fIafb\fR is an output argument and on exit returns the triangular factor \fIU\fR or \fIL\fR from the Cholesky factorization\fI A\fR=\fIU\fR**\fIT\fR\fI*U\fR or \fIA\fR=\fIL*L\fR (real routines), \fIA\fR=\fIU\fR**\fIH\fR\fI*U\fR or \fIA\fR=\fIL*L\fR (complex routines) of the original matrix \fIA\fR (if \fIfact\fR = \fB\'N\'\fR), or of the equilibrated matrix \fIA\fR (if \fIfact\fR = \fB\'E\'\fR). See the description of \fIab\fR for the form of the equilibrated matrix.
.TP 10
\fBb\fR
.NL
Overwritten by \fIdiag\fR(\fIs\fR)*\fIB\fR , if \fIequed\fR = \fB\'Y\'\fR; not changed  if  \fIequed\fR = \fB\'N\'\fR.
.TP 10
\fBs\fR
.NL
This array is an output argument if \fIfact\fR\(!=\fB\'F\'\fR. See the description of \fIs\fR in \fIInput Arguments\fRsection.
.TP 10
\fBrcond\fR
.NL
\fBREAL\fR for single precision flavors
.IP
\fBDOUBLE PRECISION\fR for double precision flavors. 
.IP
An estimate of the reciprocal condition number of the matrix \fIA\fR after equilibration (if done). If \fIrcond\fR is less than the machine precision (in particular, if \fIrcond\fR = 0), the matrix is singular to working precision.  This condition is indicated by a return code of \fIinfo \fR> 0.
.TP 10
\fBferr\fR
.NL
\fBREAL\fR for single precision flavors
.IP
\fBDOUBLE PRECISION\fR for double precision flavors.
.IP
Array, \fBDIMENSION\fR at least max(1, \fInrhs\fR). Contains the estimated forward error bound for each solution vector \fIx\fR(\fIj\fR) (the \fIj\fR-th column of the solution matrix \fIX\fR).   If \fIxtrue\fR is the true solution corresponding to \fIx\fR(\fIj\fR), \fIferr\fR(\fIj\fR)  is an estimated upper bound for the magnitude of the largest element in (\fIx\fR(\fIj\fR) - \fIxtrue\fR) divided by the magnitude of the largest element in \fIx\fR(\fIj\fR). The estimate is as reliable as the estimate for \fBrcond\fR, and is almost always a slight overestimate of the true error.
.TP 10
\fBberr\fR
.NL
\fBREAL\fR for single precision flavors
.IP
\fBDOUBLE PRECISION\fR for double precision flavors.
.IP
Array, \fBDIMENSION\fR at least max(1, \fInrhs\fR). Contains the component-wise relative backward error for each solution vector \fIx\fR(\fIj\fR), that is, the smallest relative chnage in any element of \fIA\fR or \fIB\fR that makes \fIx\fR(\fIj\fR) an exact solution.
.TP 10
\fBequed\fR
.NL
If \fIfact\fR\(!=\fB\'F\'\fR , then \fIequed\fR is an output argument. It specifies the form of equilibration that was done (see the description of \fIequed\fR in \fIInput Arguments\fRsection). 
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value. 
.IP
If \fIinfo\fR = \fIi\fR, and \fIi\fR\(<=\fIn\fR, the leading minor of order \fIi\fR (and therefore the matrix \fIA\fR itself) is not positive definite, so the factorization could not be completed, and the solution and error bounds could not be computed; \fIrcond\fR =0 is returned. If \fIinfo\fR = \fIi\fR, and \fIi\fR = \fIn\fR + 1, then \fIU\fR is nonsingular, but \fIrcond\fR is less than machine precision, meaning that the matrix is singular to working precision. Nevertheless, the  solution and error bounds are computed because there are a number of situations where the  computed solution can be more accurate than the value of \fIrcond\fR would suggest.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77  counterparts. For general conventions applied to skip redundant or reconstructible arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBpbsvx\fR interface are as follows:
.TP 10
\fBa\fR
.NL
Stands for argument \fIab\fR in Fortan 77 interface. Holds the array \fIA\fR of size (\fIkd\fR+1,\fIn\fR).
.TP 10
\fBb\fR
.NL
Holds the matrix \fIB\fR of size (\fIn\fR,\fInrhs\fR).
.TP 10
\fBx\fR
.NL
Holds the matrix \fIX\fR of size (\fIn\fR,\fInrhs\fR).
.TP 10
\fBaf\fR
.NL
Stands for argument \fIafb\fR in Fortan 77 interface. Holds the array \fIAF\fR of size (\fIkd\fR+1,\fIn\fR).
.TP 10
\fBs\fR
.NL
Holds the vector of length (\fIn\fR). Default value for each element is \fIs\fR(\fIi\fR) =  1.0\(ulWP.
.TP 10
\fBferr\fR
.NL
Holds the vector of length (\fInrhs\fR).
.TP 10
\fBberr\fR
.NL
Holds the vector of length (\fInrhs\fR).
.TP 10
\fBuplo\fR
.NL
Must be \fB\'U\'\fR or \fB\'L\'\fR. The default value is \fB\'U\'\fR.
.TP 10
\fBfact\fR
.NL
Must be \fB\'N\'\fR, \fB\'E\'\fR, or \fB\'F\'\fR. The default value is \fB\'N\'\fR. If \fIfact\fR = \fB\'F\'\fR, then \fIaf\fR must be present; otherwise, an error is returned.
.TP 10
\fBequed\fR
.NL
Must be \fB\'N\'\fR or \fB\'Y\'\fR. The default value is \fB\'N\'\fR.
