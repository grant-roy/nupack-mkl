.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH Gamma 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
Gamma \- Generates gamma distributed random values.
.SH SYNOPSIS
.PP
.B ! Fortran
.PP
\fIstatus\fR= \fBvsrnggamma\fR( \fImethod\fR, \fIstream\fR, \fIn\fR, \fIr\fR, \fIalpha\fR, \fIa\fR, \fIbeta\fR)
.PP
\fIstatus\fR= \fBvdrnggamma\fR( \fImethod\fR, \fIstream\fR, \fIn\fR, \fIr\fR, \fIalpha\fR, \fIa\fR, \fIbeta\fR)
.PP
.B /* C */
.PP
\fIstatus\fR= \fBvsRngGamma\fR( \fImethod\fR, \fIstream\fR, \fIn\fR, \fIr\fR, \fIalpha\fR, \fIa\fR, \fIbeta\fR);
.PP
\fIstatus\fR= \fBvdRngGamma\fR( \fImethod\fR, \fIstream\fR, \fIn\fR, \fIr\fR, \fIalpha\fR, \fIa\fR, \fIbeta\fR);
.SH INPUT PARAMETERS
.PP
.SB Name
.br
\h\'1\'\fBmethod\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBINTEGER\fR, \fBINTENT(IN)\fR
.br
\h\'2\'C:\h\'7\'\fBint\fR
.br
.SB Description
.br
\h\'1\'Generation method. The specific values are as follows: 
.br
\fBVSL\(ulMETHOD\(ulSGAMMA\(ulGNORM\fR
.br
.br
\fBVSL\(ulMETHOD\(ulDGAMMA\(ulGNORM\fR
.br
\fBVSL\(ulMETHOD\(ulSGAMMA\(ulGNORM\(ulACCURATE\fR
.br
\fBVSL\(ulMETHOD\(ulDGAMMA\(ulGNORM\(ulACCURATE\fR
.br
\h\'1\'Acceptance/rejection method using random numbers with Gaussian distribution. 
.PP
.SB Name
.br
\h\'1\'\fBstream\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBTYPE (VSL\(ulSTREAM\(ulSTATE)\fR, \fBINTENT(IN)\fR
.br
\h\'2\'C:\h\'7\'\fBVSLStreamStatePtr\fR
.br
.SB Description
.br
\h\'2\'FORTRAN: Descriptor of the stream state structure
.br
\h\'2\'C:\h\'7\'Pointer to the stream state structure
.PP
.SB Name
.br
\h\'1\'\fBn\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBINTEGER\fR, \fBINTENT(IN)\fR
.br
\h\'2\'C:\h\'7\'\fBint\fR
.br
.SB Description
.br
\h\'1\'Number of random values to be generated
.PP
.SB Name
.br
\h\'1\'\fBalpha\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL\fR, \fBINTENT(IN)\fR for \fBvsrnggamma\fR
.br
\h\'1\'\fBDOUBLE PRECISION\fR, \fBINTENT(IN)\fR for \fBvdrnggamma\fR
.br
\h\'2\'C:\h\'7\'\fBfloat\fR for \fBvsRngGamma\fR
.br
\h\'11\'\fBdouble\fR for \fBvdRngGamma\fR
.br
.SB Description
.br
\h\'1\'Shape \(*a.
.PP
.SB Name
.br
\h\'1\'\fBa\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL\fR, \fBINTENT(IN)\fR for \fBvsrnggamma\fR
.br
\h\'1\'\fBDOUBLE PRECISION\fR, \fBINTENT(IN)\fR for \fBvdrnggamma\fR
.br
\h\'2\'C:\h\'7\'\fBfloat\fR for \fBvsRngGamma\fR
.br
\h\'1\'\fBdouble\fR for \fBvdRngGamma\fR
.br
.SB Description
.br
\h\'1\'Displacement \fIa\fR.
.PP
.SB Name
.br
\h\'1\'\fBbeta\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL\fR, \fBINTENT(IN)\fR for \fBvsrnggamma\fR
.br
\h\'1\'\fBDOUBLE PRECISION\fR, \fBINTENT(IN)\fR for \fBvdrnggamma\fR
.br
\h\'2\'C:\h\'7\'\fBfloat\fR for \fBvsRngGamma\fR
.br
\h\'1\'\fBdouble\fR for \fBvdRngGamma\fR
.br
.SB Description
.br
\h\'1\'Scalefactor.
.SH OUTPUT PARAMETERS
.PP
.SB Name
.br
\h\'1\'\fBr\fR
.br
.SB Type
.br
\h\'2\'FORTRAN: \fBREAL\fR, \fBINTENT(OUT)\fR for \fBvsrnggamma\fR
.br
\h\'1\'\fBDOUBLE PRECISION\fR, \fBINTENT(OUT)\fR for \fBvdrnggamma\fR
.br
\h\'2\'C:\h\'7\'\fBfloat*\fR for \fBvsRngGamma\fR
.br
\h\'1\'\fBdouble*\fR for \fBvdRngGamma\fR
.br
.SB Description
.br
\h\'1\'Vector of \fIn\fR random numbers with gamma distribution
.SH RETURN VALUES
.PP

.TP 10
\fBVSL\(ulERROR\(ulOK, VSL\(ulSTATUS\(ulOK\fR
.NL
Indicates no error, execution is successful.
.TP 10
\fBVSL\(ulERROR\(ulNULL\(ulPTR\fR
.NL
\fBstream\fR is a \fBNULL\fR pointer.
.TP 10
\fBVSL\(ulERROR\(ulBAD\(ulSTREAM\fR
.NL
\fIstream\fR is not a valid random stream.
.TP 10
\fBVSL\(ulERROR\(ulBAD\(ulUPDATE\fR
.NL
Callback function for an abstract BRNG returns an invalid number of updated entries in a buffer, that is, < 0 or > \fBnmax\fR.
.TP 10
\fBVSL\(ulERROR\(ulNO\(ulNUMBERS\fR
.NL
Callback function for an abstract BRNG returns 0 as the number of updated entries in a buffer.
