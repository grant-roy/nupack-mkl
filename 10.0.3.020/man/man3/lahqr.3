.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?lahqr 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?lahqr \- Computes the eigenvalues and Schur factorization of an upper Hessenberg matrix, using the double-shift/single-shift QR algorithm.
.SH SYNOPSIS
.PP
\fBcall slahqr\fR( \fIwantt\fR, \fIwantz\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIh\fR, \fIldh\fR, \fIwr\fR, \fIwi\fR, \fIiloz\fR, \fIihiz\fR, \fIz\fR, \fIldz\fR, \fIinfo\fR)
.PP
\fBcall dlahqr\fR( \fIwantt\fR, \fIwantz\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIh\fR, \fIldh\fR, \fIwr\fR, \fIwi\fR, \fIiloz\fR, \fIihiz\fR, \fIz\fR, \fIldz\fR, \fIinfo\fR)
.PP
\fBcall clahqr\fR( \fIwantt\fR, \fIwantz\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIh\fR, \fIldh\fR, \fIw\fR, \fIiloz\fR, \fIihiz\fR, \fIz\fR, \fIldz\fR, \fIinfo\fR)
.PP
\fBcall zlahqr\fR( \fIwantt\fR, \fIwantz\fR, \fIn\fR, \fIilo\fR, \fIihi\fR, \fIh\fR, \fIldh\fR, \fIw\fR, \fIiloz\fR, \fIihiz\fR, \fIz\fR, \fIldz\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBwantt\fR
.NL
\fBLOGICAL\fR. 
.IP
If \fIwantt\fR = \fB.TRUE.\fR, the full Schur form \fIT\fR is required; 
.IP
If \fIwantt\fR = \fB.FALSE.\fR, eigenvalues only are required.
.TP 10
\fBwantz\fR
.NL
\fBLOGICAL\fR. 
.IP
If \fIwantz\fR = \fB.TRUE.\fR, the matrix of Schur vectors \fIZ\fR is required; 
.IP
If \fIwantz\fR = \fB.FALSE.\fR, Schur vectors are not required.
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrix \fIH\fR (\fIn\fR\(>= 0). 
.TP 10
\fBilo\fR, \fBihi\fR
.NL
\fBINTEGER\fR. 
.IP
It is assumed that \fIh\fR is already upper quasi-triangular in rows and columns \fIihi\fR+1:\fIn\fR, and that \fIh\fR(\fIilo\fR,\fIilo\fR-1) = 0 (unless \fIilo\fR = 1). The routine \fB?lahqr\fR works primarily with the Hessenberg submatrix in rows and columns \fIilo\fR to \fIihi\fR, but applies transformations to all of \fIh\fR if \fIwantt\fR = \fB.TRUE.\fR. 
.IP
Constraints: 
.IP
1 \(<= \fIilo\fR \(<= max(1,\fIihi\fR); \fIihi\fR \(<= \fIn\fR.
.TP 10
\fBh\fR, \fBz\fR
.NL
\fBREAL\fR for \fBslahqr\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlahqr\fR
.IP
\fBCOMPLEX\fR for \fBclahqr\fR
.IP
\fBCOMPLEX*16\fR for \fBzlahqr\fR.
.IP
Arrays: 
.IP
\fIh\fR(\fIldh\fR,*) contains the upper Hessenberg matrix \fIh\fR. 
.IP
The second dimension of \fIh\fR must be at least max(1, \fIn\fR).
.IP
\fIz\fR(\fIldz\fR,*) 
.IP
If \fIwantz\fR = \fB.TRUE.\fR, then, on entry, \fIz\fR must contain the current matrix \fIz\fR of transformations accumulated by \fB?hseqr\fR. 
.IP
If \fIwantz\fR = \fB.FALSE.\fR, then \fIz\fR is not referenced. The second dimension of \fIz\fR must be at least max(1, \fIn\fR).
.TP 10
\fBldh\fR
.NL
\fBINTEGER\fR. The first dimension of \fIh\fR; at least max(1, \fIn\fR).
.TP 10
\fBldz\fR
.NL
\fBINTEGER\fR. The first dimension of \fIz\fR; at least max(1, \fIn\fR).
.TP 10
\fBiloz\fR, \fBihiz\fR
.NL
\fBINTEGER\fR. Specify the rows of \fIz\fR to which transformations must be applied if \fIwantz\fR = \fB.TRUE.\fR.
.IP
1 \(<= \fIiloz\fR \(<= \fIilo\fR; \fIihi\fR \(<= \fIihiz\fR \(<= \fIn\fR.
.SH OUTPUT PARAMETERS

.TP 10
\fBh\fR
.NL
On exit, if \fIinfo\fR= 0 and \fIwantt\fR = \fB.TRUE.\fR,  then, 
.RS
.IP \(bu
for \fBslahqr/dlahqr\fR, \fIh\fR is upper quasi-triangular in rows and columns \fIilo\fR:\fIihi\fR with any 2-by-2 diagonal blocks in standard form.
.IP \(bu
for \fBclahqr/zlahqr\fR, \fIh\fR is upper triangular in rows and columns \fIilo\fR:\fIihi\fR.
.RE
.IP
If \fIinfo\fR= 0 and \fIwantt\fR = \fB.FALSE.\fR, the contents of \fIh\fR are unspecified on exit. If \fIinfo\fR is positive, see description of \fBinfo\fR  for the output state of \fIh\fR.
.TP 10
\fBwr\fR, \fBwi\fR
.NL
\fBREAL\fR for \fBslahqr\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdlahqr\fR
.IP
Arrays, \fBDIMENSION\fR at least max(1, \fIn\fR) each. Used with real flavors only. The real and imaginary parts, respectively, of the computed eigenvalues \fIilo\fR to \fIihi\fR are stored in the corresponding elements of \fIwr\fR and \fIwi\fR. If two eigenvalues are computed as a complex conjugate pair, they are stored in consecutive elements of \fIwr\fR and \fIwi\fR, say the i-th and (i+1)-th, with \fIwi\fR(i)> 0 and \fIwi\fR(i+1) < 0. 
.IP
If \fIwantt\fR = \fB.TRUE.\fR, the eigenvalues are stored in the same order as on the diagonal of the Schur form returned in \fIh\fR, with \fIwr\fR(i) = \fIh\fR(i,i), and, if \fIh\fR(i:i+1, i:i+1) is a 2-by-2 diagonal block, \fIwi\fR(i) = sqrt(\fIh\fR(i+1,i)*\fIh\fR(i,i+1)) and \fIwi\fR(i+1) = -\fIwi\fR(i).
.TP 10
\fBw\fR
.NL
\fBCOMPLEX\fR for \fBclahqr\fR
.IP
\fBCOMPLEX*16\fR for \fBzlahqr\fR.
.IP
Array, \fBDIMENSION\fR at least max(1, \fIn\fR). Used with complex flavors only. The computed eigenvalues \fIilo\fR to \fIihi\fR are stored in the corresponding elements of \fIw\fR. 
.IP
If \fIwantt\fR = \fB.TRUE.\fR, the eigenvalues are stored in the same order as on the diagonal of the Schur form returned in \fIh\fR, with \fIw\fR(i) = \fIh\fR(i,i).
.TP 10
\fBz\fR
.NL
If \fIwantz\fR = \fB.TRUE.\fR, then, on exit \fIz\fR has been updated; transformations are applied only to the submatrix \fIz\fR(\fIiloz\fR:\fIihiz\fR, \fIilo\fR:\fIihi\fR).
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
With \fIinfo\fR > 0, 
.RS
.IP \(bu
if \fIinfo\fR = \fIi\fR, \fB?lahqr\fR failed to compute all the eigenvalues \fIilo\fR to \fIihi\fR in a total of 30  iterations per eigenvalue; elements i+1:\fIihi\fR of \fIwr\fR and \fIwi\fR (for \fBslahqr\fR/\fBdlahqr\fR) or \fIw\fR  (for \fBclahqr\fR/\fBzlahqr\fR) contain those eigenvalues which have been successfully computed.
.IP \(bu
if \fIwantt\fR is \fB.FALSE.\fR, then on exitthe remaining unconverged eigenvalues are theeigenvalues of the upper Hessenberg matrixrows and columns \fIilo\fR thorugh \fIinfo\fR of the finaloutput value of \fIh\fR.
.IP \(bu
if \fIwantt\fR is \fB.TRUE.\fR, then on exit(initial value of \fIh\fR)*\fIu\fR  = \fIu\fR*(final value of \fIh\fR),                       (*)                         where \fIu\fR is an orthognal matrix.    The finalvalue of \fIh\fR is upper Hessenberg and triangular inrows and columns \fIinfo\fR+1 through \fIihi\fR.
.IP \(bu
if \fIwantz\fR is \fB.TRUE.\fR, then on exit(final value of \fIz\fR)  = (initial value of \fIz\fR)* \fIu\fR,                                                where \fIu\fR is an orthognal matrix in (*) regardless of the value of \fIwantt\fR.
.RE

