.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH ?trevc 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
?trevc \- Computes selected eigenvectors of an upper (quasi-) triangular matrix computed by \fB?hseqr\fR.
.SH SYNOPSIS
.PP
.B Fortran 77
.PP
\fBcall strevc\fR(\fIside\fR, \fIhowmny\fR, \fIselect\fR, \fIn\fR, \fIt\fR, \fIldt\fR, \fIvl\fR, \fIldvl\fR, \fIvr\fR, \fIldvr\fR, \fImm\fR, \fIm\fR, \fIwork\fR, \fIinfo\fR)
.PP
\fBcall dtrevc\fR(\fIside\fR, \fIhowmny\fR, \fIselect\fR, \fIn\fR, \fIt\fR, \fIldt\fR, \fIvl\fR, \fIldvl\fR, \fIvr\fR, \fIldvr\fR, \fImm\fR, \fIm\fR, \fIwork\fR, \fIinfo\fR)
.PP
\fBcall ctrevc\fR(\fIside\fR, \fIhowmny\fR, \fIselect\fR, \fIn\fR, \fIt\fR, \fIldt\fR, \fIvl\fR, \fIldvl\fR, \fIvr\fR, \fIldvr\fR, \fImm\fR, \fIm\fR, \fIwork\fR, \fIrwork\fR, \fIinfo\fR)
.PP
\fBcall ztrevc\fR(\fIside\fR, \fIhowmny\fR, \fIselect\fR, \fIn\fR, \fIt\fR, \fIldt\fR, \fIvl\fR, \fIldvl\fR, \fIvr\fR, \fIldvr\fR, \fImm\fR, \fIm\fR, \fIwork\fR, \fIrwork\fR, \fIinfo\fR)
.PP
.B Fortran 95
.PP
\fBcall trevc\fR(\fIt\fR[, \fIhowmny\fR] [,\fIselect\fR] [,\fIvl\fR] [,\fIvr\fR] [,\fIm\fR] [,\fIinfo\fR])
.SH INPUT PARAMETERS

.TP 10
\fBside\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'R\'\fR or \fB\'L\'\fR or \fB\'B\'\fR. 
.IP
If \fIside\fR = \fB\'R\'\fR , then only right eigenvectors are computed. 
.IP
If \fIside\fR = \fB\'L\'\fR , then only left eigenvectors are computed. 
.IP
If \fIside\fR = \fB\'B\'\fR, then all eigenvectors are computed.
.TP 10
\fBhowmny\fR
.NL
\fBCHARACTER*1\fR. Must be \fB\'A\'\fR or \fB\'B\'\fR or \fB\'S\'\fR. 
.IP
If \fIhowmny\fR = \fB\'A\'\fR , then all eigenvectors (as specified by \fIside\fR) are computed. 
.IP
If \fIhowmny\fR = \fB\'B\'\fR , then all eigenvectors (as specified by \fIside\fR) are computed and backtransformed by the matrices supplied in \fIvl\fR and \fIvr\fR. 
.IP
If \fIhowmny\fR = \fB\'S\'\fR , then selected eigenvectors (as specified by \fIside\fR and \fIselect\fR) are computed.
.TP 10
\fBselect\fR
.NL
\fBLOGICAL\fR. 
.IP
Array, \fBDIMENSION\fR at least max (1, \fIn\fR). 
.IP
If \fIhowmny\fR = \fB\'S\'\fR, \fIselect\fR specifies which eigenvectors are to be computed. 
.IP
If \fIhowmny\fR = \fB\'A\'\fR or \fB\'B\'\fR, \fIselect\fR is not referenced.
.IP
\fIFor real flavors\fR:
.IP
If \fIomega\fR(\fIj\fR) is a real eigenvalue, the corresponding real eigenvector is computed if \fIselect\fR(\fIj\fR) is \fB.TRUE.\fR. 
.IP
If \fIomega\fR(\fIj\fR) and \fIomega\fR(\fIj\fR+1) are the real and imaginary parts of a complex eigenvalue, the corresponding complex eigenvector is computed if either \fIselect\fR(\fIj\fR) or \fIselect\fR(\fIj\fR+1) is \fB.TRUE.\fR, and on exit \fIselect\fR(\fIj\fR) is set to \fB.TRUE.\fRand \fIselect\fR(\fIj\fR+1) is set to \fB.FALSE.\fR.
.IP
\fIFor complex flavors:\fR
.IP
The eigenvector corresponding to the \fIj\fR-th eigenvalue is computed if \fIselect\fR(\fIj\fR) is \fB.TRUE.\fR. 
.TP 10
\fBn\fR
.NL
\fBINTEGER\fR. The order of the matrix \fIT\fR (\fIn\fR\(>= 0). 
.TP 10
\fBt\fR, \fBvl\fR, \fBvr\fR, \fB\fR
.NL
\fBREAL\fR for \fBstrevc\fR
.IP
\fBDOUBLE PRECISION\fR for \fBdtrevc\fR
.IP
\fBCOMPLEX\fR for \fBctrevc\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBztrevc\fR. 
.IP
Arrays: 
.IP
\fIt\fR(\fIldt\fR,*) contains the \fIn\fR-by-\fIn\fR matrix \fIT\fR in Schur canonical form. 
.IP
The second dimension of \fIt\fR must be at least max(1, \fIn\fR).
.IP
\fIvl\fR(\fIldvl\fR,*) 
.IP
If \fIhowmny\fR = \fB\'B\'\fR and \fIside\fR = \fB\'L\'\fR or \fB\'B\'\fR, then \fIvl\fR must contain an \fIn\fR-by-\fIn\fR matrix \fIQ\fR (usually the matrix of Schur vectors returned by \fB?hseqr\fR). 
.IP
If \fIhowmny\fR = \fB\'A\'\fR or \fB\'S\'\fR, then \fIvl\fR need not be set. 
.IP
The second dimension of \fIvl\fR must be at least max(1, \fImm\fR) if \fIside\fR = \fB\'L\'\fR or \fB\'B\'\fR and at least 1 if \fIside\fR = \fB\'R\'\fR. 
.IP
The array \fIvl\fR is not referenced if \fIside\fR = \fB\'R\'\fR.
.IP
\fIvr\fR (\fIldvr\fR,*) 
.IP
If \fIhowmny\fR = \fB\'B\'\fR and \fIside\fR = \fB\'R\'\fR or \fB\'B\'\fR, then \fIvr\fR must contain an \fIn\fR-by-\fIn\fR matrix \fIQ\fR (usually the matrix of Schur vectors returned by \fB?hseqr\fR). . 
.IP
If \fIhowmny\fR = \fB\'A\'\fR or \fB\'S\'\fR, then \fIvr\fR need not be set. 
.IP
The second dimension of \fIvr\fR must be at least max(1, \fImm\fR) if \fIside\fR = \fB\'R\'\fR or \fB\'B\'\fR and at least 1 if \fIside\fR = \fB\'L\'\fR. 
.IP
The array \fIvr\fR is not referenced if \fIside\fR = \fB\'L\'\fR.
.IP
\fIwork\fR(*) is a workspace array.
.IP
\fBDIMENSION\fR at least max (1, 3*\fIn\fR) for real flavors and at least max (1, 2*\fIn\fR) for complex flavors.
.TP 10
\fBldt\fR
.NL
\fBINTEGER\fR. The first dimension of \fIt\fR; at least max(1, \fIn\fR).
.TP 10
\fBldvl\fR
.NL
\fBINTEGER\fR. The first dimension of \fIvl\fR. 
.IP
If \fIside\fR = \fB\'L\'\fR or \fB\'B\'\fR, \fIldvl\fR\(>=\fIn\fR. 
.IP
If \fIside\fR = \fB\'R\'\fR, \fIldvl\fR\(>= 1.
.TP 10
\fBldvr\fR
.NL
\fBINTEGER\fR. The first dimension of \fIvr\fR. 
.IP
If \fIside\fR = \fB\'R\'\fR or \fB\'B\'\fR, \fIldvr\fR\(>=\fIn\fR. 
.IP
If \fIside\fR = \fB\'L\'\fR, \fIldvr\fR\(>= 1.
.TP 10
\fBmm\fR
.NL
\fBINTEGER\fR. The number of columns in the arrays \fIvl\fR and/or \fIvr\fR. Must be at least \fIm\fR (the precise number of columns required). 
.IP
If \fIhowmny\fR = \fB\'A\'\fR or \fB\'B\'\fR, \fIm\fR = \fIn\fR. 
.IP
If \fIhowmny\fR = \fB\'S\'\fR: \fIfor real flavors\fR, \fIm\fR is obtained by counting 1 for each selected real eigenvector and 2 for each selected complex eigenvector;
.IP
\fIfor complex flavors\fR, \fIm\fR is the number of selected eigenvectors (see \fIselect\fR). 
.IP
Constraint: 0 \(<=\fIm\fR\(<=\fIn\fR.
.TP 10
\fBrwork\fR
.NL
\fBREAL\fR for \fBctrevc\fR
.IP
\fBDOUBLE PRECISION\fR for \fBztrevc\fR. 
.IP
Workspace array, \fBDIMENSION\fR at least max (1, \fIn\fR).
.SH OUTPUT PARAMETERS

.TP 10
\fBselect\fR
.NL
If a complex eigenvector of a real matrix was selected as specified above, then \fIselect\fR(\fIj\fR) is set to \fB.TRUE.\fR and \fIselect\fR(\fIj\fR+1) to \fB.FALSE.\fR
.TP 10
\fBvl\fR, \fBvr\fR
.NL
If \fIside\fR = \fB\'L\'\fR or \fB\'B\'\fR, \fIvl\fR contains the computed left eigenvectors (as specified by \fIhowmny\fR and \fIselect\fR). 
.IP
If \fIside\fR = \fB\'R\'\fR or \fB\'B\'\fR, \fIvr\fR contains the computed right eigenvectors (as specified by \fIhowmny\fR and \fIselect\fR).
.IP
The eigenvectors are stored consecutively in the columns of the array, in the same order as their eigenvalues.
.IP
\fIFor real flavors\fR: corresponding to each real eigenvalue is a real eigenvector, occupying one column;corresponding to each complex conjugate pair of eigenvalues is a complex eigenvector, occupying two columns; the first column holds the real part and the second column holds the imaginary part.
.TP 10
\fBm\fR
.NL
\fBINTEGER\fR. 
.IP
\fIFor complex flavors\fR: the number of selected eigenvectors. 
.IP
If \fIhowmny\fR = \fB\'A\'\fR or \fB\'B\'\fR, \fIm\fR is set to \fIn\fR. 
.IP
\fIFor real flavors\fR: the number of columns of \fIvl\fR and/or \fIvr\fR actually used to store the selected eigenvectors. 
.IP
If \fIhowmny\fR = \fB\'A\'\fR or \fB\'B\'\fR, \fIm\fR is set to \fIn\fR.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. 
.IP
If \fIinfo\fR = 0, the execution is successful. 
.IP
If \fIinfo\fR = \fI-i\fR, the \fIi\fR-th parameter had an illegal value.
.SH FORTRAN 95 INTERFACE NOTES
.PP
.PP
Routines in Fortran 95 interface have fewer arguments in the calling sequence than their Fortran 77 counterparts. For general conventions applied to skip redundant or restorable arguments, see Fortran 95  Interface Conventions.
.PP
Specific details for the routine \fBtrevc\fR interface are the following:
.TP 10
\fBt\fR
.NL
Holds the matrix \fIT\fR of size (\fIn,n\fR).
.TP 10
\fBselect\fR
.NL
Holds the vector of length (\fIn\fR).
.TP 10
\fBvl\fR
.NL
Holds the matrix \fIVL\fR of size (\fIn,mm\fR).
.TP 10
\fBvr\fR
.NL
Holds the matrix \fIVR\fR of size (\fIn,mm\fR).
.TP 10
\fBside\fR
.NL
If omitted, this argument is restored based on the presence of arguments \fIvl\fR and \fIvr\fR as follows: 
.IP
\fIside\fR = \fB\'B\'\fR, if both \fIvl\fR and \fIvr\fR are present, 
.IP
\fIside\fR = \fB\'L\'\fR, if \fIvr\fR is omitted, 
.IP
\fIside\fR = \fB\'R\'\fR, if \fIvl\fR is omitted. 
.IP
Note that there will be an error condition if both \fIvl\fR and \fIvr\fR are omitted.
.TP 10
\fBhowmny\fR
.NL
If omitted, this argument is restored based on the presence of argument \fIselect\fR as follows: 
.IP
\fIhowmny\fR = \fB\'V\'\fR, if \fIq\fR is present, 
.IP
\fIhowmny\fR = \fB\'N\'\fR, if \fIq\fR is omitted. 
.IP
If present, \fIvect\fR = \fB\'V\'\fR or \fB\'U\'\fR and the argument \fIq\fR must also be present. 
.IP
Note that there will be an error condition if both \fIselect\fR and \fIhowmny\fR are present.
