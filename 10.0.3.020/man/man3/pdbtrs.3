.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?dbtrs 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?dbtrs \- Solves a system of linear equations with a diagonally dominant-like banded distributed matrix using the factorization computed by \fBp?dbtrf\fR.
.SH SYNOPSIS
.PP
\fBcall psdbtrs\fR(\fItrans\fR, \fIn\fR, \fIbwl\fR, \fIbwu\fR, \fInrhs\fR, \fIa\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pddbtrs\fR(\fItrans\fR, \fIn\fR, \fIbwl\fR, \fIbwu\fR, \fInrhs\fR, \fIa\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pcdbtrs\fR(\fItrans\fR, \fIn\fR, \fIbwl\fR, \fIbwu\fR, \fInrhs\fR, \fIa\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.PP
\fBcall pzdbtrs\fR(\fItrans\fR, \fIn\fR, \fIbwl\fR, \fIbwu\fR, \fInrhs\fR, \fIa\fR, \fIja\fR, \fIdesca\fR, \fIb\fR, \fIib\fR, \fIdescb\fR, \fIaf\fR, \fIlaf\fR, \fIwork\fR, \fIlwork\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBtrans\fR
.NL
(global) \fBCHARACTER*1\fR.  Must be \fB\'N\'\fR or \fB\'T\'\fR or \fB\'C\'\fR.
.IP
Indicates the form of the equations:
.IP
If \fItrans\fR = \fB\'N\'\fR, then sub(\fIA\fR)*\fIX\fR = sub(\fIB\fR) is solved for \fIX\fR.
.IP
If \fItrans\fR = \fB\'T\'\fR, then (sub(\fIA\fR))**\fIT\fR*\fIX\fR = sub(\fIB\fR) is solved for \fIX\fR.
.IP
If \fItrans\fR = \fB\'C\'\fR, then (sub(\fIA\fR))**\fIH\fR*\fIX\fR = sub(\fIB\fR) is solved for \fIX\fR.
.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR.  The order of the distributed submatrix sub(\fIA\fR) (\fIn\fR\(>= 0). 
.TP 10
\fBbwl\fR
.NL
(global) \fBINTEGER\fR.  The number of subdiagonals within the band of \fIA\fR
.IP
( 0 \(<= \fIbwl\fR \(<= \fIn-1\fR ). 
.TP 10
\fBbwu\fR
.NL
(global) \fBINTEGER\fR.  The number of superdiagonals within the band of \fIA\fR
.IP
( 0 \(<= \fIbwu\fR \(<= \fIn-1\fR ). 
.TP 10
\fBnrhs\fR
.NL
(global) \fBINTEGER\fR. The number of right hand sides; the number of columns of the distributed submatrix sub(\fIB\fR)  (\fInrhs\fR\(>= 0).
.TP 10
\fBa\fR, \fBb\fR
.NL
(local) 
.IP
\fBREAL\fR for \fBpsdbtrs\fR
.IP
\fBDOUBLE PRECISON\fR for \fBpddbtrs\fR
.IP
\fBCOMPLEX\fR for \fBpcdbtrs\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzdbtrs\fR.
.IP
Pointers into the local memory to arrays of local dimension \fIa\fR(\fIlld\(ula\fR,\fILOCc\fR(\fIja\fR+\fIn\fR-1)) and \fIb\fR(\fIlld\(ulb\fR,\fILOCc\fR(\fInrhs\fR)), respectively.
.IP
On entry, the array \fIa\fR contains details of the \fILU\fR factorization of the band matrix \fIA\fR, as computed by \fBp?dbtrf\fR. 
.IP
On entry, the array \fIb\fR contains the local pieces of the right hand side distributed matrix sub(\fIB\fR).
.TP 10
\fBja\fR
.NL
(global) \fBINTEGER\fR.  The index in the global array \fIA\fR that points to the start of the matrix to be operated on (which may be either all of \fIA\fR or a submatrix of \fIA\fR).
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIA\fR. 
.IP
If \fIdesca\fR(\fIdtype\(ul\fR) = 501, then \fIdlen\(ul\fR\(>= 7;
.IP
else if \fIdesca\fR(\fIdtype\(ul\fR) = 1, then \fIdlen\(ul\fR\(>= 9.
.TP 10
\fBib\fR
.NL
(global) \fBINTEGER\fR.  The row index in the global array \fIB\fR that points to the first row of the matrix to be operated on (which may be either all of \fIB\fR or a submatrix of \fIB\fR).
.TP 10
\fBdescb\fR
.NL
(global and local) \fBINTEGER\fR array, dimension (\fIdlen\(ul\fR).  The array descriptor for the distributed matrix \fIB\fR.
.IP
If \fIdescb\fR(\fIdtype\(ul\fR) = 502, then \fIdlen\(ul\fR\(>= 7;
.IP
else if \fIdescb\fR(\fIdtype\(ul\fR) = 1, then \fIdlen\(ul\fR\(>= 9.
.TP 10
\fBaf\fR, \fBwork\fR
.NL
(local)
.IP
\fBREAL\fR for \fBpsdbtrs\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpddbtrs\fR
.IP
\fBCOMPLEX\fR for \fBpcdbtrs\fR
.IP
\fBDOUBLE COMPLEX\fR for \fBpzdbtrs\fR.
.IP
Arrays of dimension (\fIlaf\fR) and (\fIlwork\fR), respectively The array \fIaf\fR contains auxiliary Fillin space. Fillin is created during the factorization routine \fBp?dbtrf\fR and this is stored in \fIaf\fR. 
.IP
The array \fIwork\fR is a workspace array.
.TP 10
\fBlaf\fR
.NL
(local) \fBINTEGER\fR. The dimension of the array \fIaf\fR.   
.IP
Must be \fIlaf\fR\(>=\fBNB\fR*(\fIbwl\fR+\fIbwu\fR)+6*(max(\fIbwl\fR,\fIbwu\fR))**2 .
.TP 10
.NL
If \fIlaf\fR is not large enough, an error code will be returned and the minimum acceptable size will be returned in \fIaf\fR(1).
.TP 10
\fBlwork\fR
.NL
(local or global) \fBINTEGER\fR.  The size of the array \fIwork\fR, must be at least 
.IP
\fIlwork\fR\(>= (max(\fIbwl\fR,\fIbwu\fR))**2. 
.SH OUTPUT PARAMETERS

.TP 10
\fBb\fR
.NL
On exit, this array contains the local pieces of the  solution distributed matrix \fIX\fR.
.TP 10
\fBwork\fR(1)
.NL
On exit, \fIwork\fR(1) contains the minimum value of \fIlwork\fR required for optimum performance.
.TP 10
\fBinfo\fR
.NL
\fBINTEGER\fR. If \fIinfo\fR=0, the execution is successful. \fIinfo\fR < 0: 
.IP
if the \fIi\fRth argument is an array and the \fIj\fR-th entry had an illegal value, then \fIinfo\fR = -(\fIi\fR*100+\fIj\fR); if the \fIi\fR-th argument is a scalar and had an illegal value, then \fIinfo\fR = \fI-i\fR.
