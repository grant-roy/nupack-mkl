.\" Copyright (c) 2002 \- 2008 Intel Corporation
.\" All rights reserved.
.\"
.TH p?lascl 3 "Intel Corporation" "Copyright(C) 2002 \- 2008" "Intel(R) Math Kernel Library"
.SH NAME
p?lascl \- Multiplies a general rectangular matrix by a real scalar defined as \fIC\fRto/\fIC\fRfrom.
.SH SYNOPSIS
.PP
\fBcall pslascl\fR(\fItype\fR, \fIcfrom\fR, \fIcto\fR, \fIm\fR, \fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIinfo\fR)
.PP
\fBcall pdlascl\fR(\fItype\fR, \fIcfrom\fR, \fIcto\fR, \fIm\fR, \fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIinfo\fR)
.PP
\fBcall pclascl\fR(\fItype\fR, \fIcfrom\fR, \fIcto\fR, \fIm\fR, \fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIinfo\fR)
.PP
\fBcall pzlascl\fR(\fItype\fR, \fIcfrom\fR, \fIcto\fR, \fIm\fR, \fIn\fR, \fIa\fR, \fIia\fR, \fIja\fR, \fIdesca\fR, \fIinfo\fR)
.SH INPUT PARAMETERS

.TP 10
\fBtype\fR
.NL
(global) \fBCHARACTER\fR. 
.IP
\fItype\fR indicates the storage type of the input distributed matrix. 
.IP
if \fItype\fR = \fB\'G\'\fR:  sub(\fIA\fR) is a full matrix, 
.IP
if \fItype\fR = \fB\'L\'\fR:  sub(\fIA\fR) is a lower triangular matrix, 
.IP
if \fItype\fR = \fB\'U\'\fR:  sub(\fIA\fR) is an upper triangular matrix, 
.IP
if \fItype\fR = \fB\'H\'\fR:  sub(\fIA\fR) is an upper Hessenberg matrix.
.TP 10
\fBcfrom\fR, \fBcto\fR
.NL
(global) 
.IP
\fBREAL\fR for \fBpslascl/pclascl\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdlascl/pzlascl\fR. 
.IP
The distributed matrix sub(\fIA\fR) is multiplied by \fIcto/cfrom\fR . \fIA\fR(\fIi\fR,\fIj\fR) is computed without over/underflow if the final result \fIcto\fR*\fIA\fR(\fIi\fR,\fIj\fR)/\fIcfrom\fR can be represented without over/underflow.  \fIcfrom\fR must be nonzero.
.TP 10
\fBm\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The number of rows to be operated on, that is, the number of rows of the distributed submatrix sub(\fIA\fR).  (\fIm\fR\(>=0).
.TP 10
\fBn\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The number of columns to be operated on, that is, the number of columns of the distributed submatrix sub(\fIA\fR). (\fIn\fR\(>=0).
.TP 10
\fBa\fR
.NL
(local input/local output) 
.IP
\fBREAL\fR for \fBpslascl\fR
.IP
\fBDOUBLE PRECISION\fR for \fBpdlascl\fR
.IP
\fBCOMPLEX\fR for \fBpclascl\fR
.IP
\fBCOMPLEX*16\fR for \fBpzlascl\fR. 
.IP
Pointer into the local memory to an array of \fBDIMENSION\fR(\fIlld\(ula\fR, \fILOCc\fR(\fIja\fR+\fIn\fR-1)).
.IP
This array contains the local pieces of the distributed matrix sub(\fIA\fR). 
.TP 10
\fBia\fR, \fBja\fR
.NL
(global) \fBINTEGER\fR. 
.IP
The column and row indices in the global array \fIA\fR indicating the first row and column of the submatrix sub(\fIA\fR), respectively.
.TP 10
\fBdesca\fR
.NL
(global and local) \fBINTEGER\fR .
.IP
Array of \fBDIMENSION\fR (\fIdlen\(ul\fR).The array descriptor for the distributed matrix \fIA\fR.
.SH OUTPUT PARAMETERS

.TP 10
\fBa\fR
.NL
(local). 
.IP
On exit, this array contains the local pieces of the distributed matrix multiplied by \fIcto/cfrom\fR.
.TP 10
\fBinfo\fR
.NL
(local) 
.IP
\fBINTEGER\fR.
.IP
if \fIinfo\fR = 0:  the execution is successful.
.IP
if \fIinfo\fR < 0:  If the \fIi\fR-th argument is an array and the \fIj\fR-entry had an illegal value, then \fIinfo\fR = -(\fIi\fR*100+\fIj\fR),
.IP
if the \fIi\fR-th  argument is a scalar and had an illegal value, then \fIinfo\fR = \fI-i\fR.
